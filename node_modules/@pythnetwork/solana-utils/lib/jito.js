"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendTransactionsJito = exports.buildJitoTipInstruction = exports.getRandomTipAccount = exports.TIP_ACCOUNTS = void 0;
const web3_js_1 = require("@solana/web3.js");
const bs58_1 = __importDefault(require("bs58"));
const types_1 = require("jito-ts/dist/sdk/block-engine/types");
exports.TIP_ACCOUNTS = [
    "HFqU5x63VTqvQss8hp11i4wVV8bD44PvwucfZ2bU7gRe",
    "Cw8CFyM9FkoMi7K7Crf6HNQqf4uEMzpKw6QNghXLvLkY",
    "DfXygSm4jCyNCybVYYK6DwvWqjKee8pbDmJGcLWNDXjh",
    "ADaUMid9yfUytqMBgopwjb2DTLSokTSzL1zt6iGPaS49",
    "3AVi9Tg9Uo68tJfuvoKvqKNWKkC5wPdSSdeBnizKZ6jT",
    "DttWaMuVvTiduZRnguLF7jNxTgiMBZ1hyAumKUiL2KRL",
    "96gYZGLnJYVFmbjzopPSU6QiEV5fGqZNyN9nmNhvrZU5",
    "ADuUkR4vqLUMWXxW9gh6D6L8pMSawimctcNZ5pGwDcEt",
];
function getRandomTipAccount() {
    const randomInt = Math.floor(Math.random() * exports.TIP_ACCOUNTS.length);
    return new web3_js_1.PublicKey(exports.TIP_ACCOUNTS[randomInt]);
}
exports.getRandomTipAccount = getRandomTipAccount;
function buildJitoTipInstruction(payer, lamports) {
    return web3_js_1.SystemProgram.transfer({
        fromPubkey: payer,
        toPubkey: getRandomTipAccount(),
        lamports,
    });
}
exports.buildJitoTipInstruction = buildJitoTipInstruction;
async function sendTransactionsJito(transactions, searcherClient, wallet) {
    const signedTransactions = [];
    for (const transaction of transactions) {
        const signers = transaction.signers;
        let tx = transaction.tx;
        if (signers) {
            tx.sign(signers);
        }
        tx = await wallet.signTransaction(tx);
        signedTransactions.push(tx);
    }
    const firstTransactionSignature = bs58_1.default.encode(signedTransactions[0].signatures[0]);
    const bundle = new types_1.Bundle(signedTransactions, 2);
    await searcherClient.sendBundle(bundle);
    return firstTransactionSignature;
}
exports.sendTransactionsJito = sendTransactionsJito;

import { PublicKey } from "@solana/web3.js";
/**
 * The default Pyth Solana Receiver program ID.
 * The program is deployed at this address on all SVM networks.
 */
export declare const DEFAULT_RECEIVER_PROGRAM_ID: PublicKey;
/**
 * The default Wormhole program ID.
 * The program is deployed at this address on all SVM networks.
 */
export declare const DEFAULT_WORMHOLE_PROGRAM_ID: PublicKey;
export declare const DEFAULT_PUSH_ORACLE_PROGRAM_ID: PublicKey;
/**
 * Returns the address of a guardian set account from the Wormhole program.
 */
export declare const getGuardianSetPda: (guardianSetIndex: number, wormholeProgramId: PublicKey) => PublicKey;
/**
 * The Pyth Solana Receiver has one treasury account for each u8 `treasuryId`.
 * This is meant to avoid write-locks on the treasury account by load-balancing the writes across multiple accounts.
 */
export declare function getRandomTreasuryId(): number;
/**
 * Returns the address of a treasury account from the Pyth Solana Receiver program.
 */
export declare const getTreasuryPda: (treasuryId: number, receiverProgramId: PublicKey) => PublicKey;
/**
 * Returns the address of the config account from the Pyth Solana Receiver program.
 */
export declare const getConfigPda: (receiverProgramId: PublicKey) => PublicKey;
//# sourceMappingURL=address.d.ts.map
import BN from "bn.js";
import * as types from "../types";
export interface RewardPerTimeUnitPointFields {
    tsStart: BN;
    rewardPerTimeUnit: BN;
}
export interface RewardPerTimeUnitPointJSON {
    tsStart: string;
    rewardPerTimeUnit: string;
}
export declare class RewardPerTimeUnitPoint {
    readonly tsStart: BN;
    readonly rewardPerTimeUnit: BN;
    constructor(fields: RewardPerTimeUnitPointFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.RewardPerTimeUnitPoint;
    static toEncodable(fields: RewardPerTimeUnitPointFields): {
        tsStart: BN;
        rewardPerTimeUnit: BN;
    };
    toJSON(): RewardPerTimeUnitPointJSON;
    static fromJSON(obj: RewardPerTimeUnitPointJSON): RewardPerTimeUnitPoint;
    toEncodable(): {
        tsStart: BN;
        rewardPerTimeUnit: BN;
    };
}
//# sourceMappingURL=RewardPerTimeUnitPoint.d.ts.map
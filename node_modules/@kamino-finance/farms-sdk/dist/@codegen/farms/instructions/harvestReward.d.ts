import { Address, IAccountMeta, IAccountSignerMeta, IInstruction, Option, TransactionSigner } from "@solana/kit";
import BN from "bn.js";
export interface HarvestRewardArgs {
    rewardIndex: BN;
}
export interface HarvestRewardAccounts {
    owner: TransactionSigner;
    userState: Address;
    farmState: Address;
    globalConfig: Address;
    rewardMint: Address;
    userRewardAta: Address;
    rewardsVault: Address;
    rewardsTreasuryVault: Address;
    farmVaultsAuthority: Address;
    scopePrices: Option<Address>;
    tokenProgram: Address;
}
export declare const layout: import("buffer-layout").Layout<HarvestRewardArgs>;
export declare function harvestReward(args: HarvestRewardArgs, accounts: HarvestRewardAccounts, remainingAccounts?: Array<IAccountMeta | IAccountSignerMeta>, programAddress?: Address): IInstruction<string, readonly (import("@solana/kit").IAccountLookupMeta<string, string> | IAccountMeta<string>)[]>;
//# sourceMappingURL=harvestReward.d.ts.map
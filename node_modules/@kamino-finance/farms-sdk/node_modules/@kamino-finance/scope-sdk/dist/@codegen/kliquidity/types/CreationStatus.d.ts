import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface IGNOREDJSON {
    kind: "IGNORED";
}
export declare class IGNORED {
    static readonly discriminator = 0;
    static readonly kind = "IGNORED";
    readonly discriminator = 0;
    readonly kind = "IGNORED";
    toJSON(): IGNOREDJSON;
    toEncodable(): {
        IGNORED: {};
    };
}
export interface SHADOWJSON {
    kind: "SHADOW";
}
export declare class SHADOW {
    static readonly discriminator = 1;
    static readonly kind = "SHADOW";
    readonly discriminator = 1;
    readonly kind = "SHADOW";
    toJSON(): SHADOWJSON;
    toEncodable(): {
        SHADOW: {};
    };
}
export interface LIVEJSON {
    kind: "LIVE";
}
export declare class LIVE {
    static readonly discriminator = 2;
    static readonly kind = "LIVE";
    readonly discriminator = 2;
    readonly kind = "LIVE";
    toJSON(): LIVEJSON;
    toEncodable(): {
        LIVE: {};
    };
}
export interface DEPRECATEDJSON {
    kind: "DEPRECATED";
}
export declare class DEPRECATED {
    static readonly discriminator = 3;
    static readonly kind = "DEPRECATED";
    readonly discriminator = 3;
    readonly kind = "DEPRECATED";
    toJSON(): DEPRECATEDJSON;
    toEncodable(): {
        DEPRECATED: {};
    };
}
export interface STAGINGJSON {
    kind: "STAGING";
}
export declare class STAGING {
    static readonly discriminator = 4;
    static readonly kind = "STAGING";
    readonly discriminator = 4;
    readonly kind = "STAGING";
    toJSON(): STAGINGJSON;
    toEncodable(): {
        STAGING: {};
    };
}
export declare function fromDecoded(obj: any): types.CreationStatusKind;
export declare function fromJSON(obj: types.CreationStatusJSON): types.CreationStatusKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=CreationStatus.d.ts.map
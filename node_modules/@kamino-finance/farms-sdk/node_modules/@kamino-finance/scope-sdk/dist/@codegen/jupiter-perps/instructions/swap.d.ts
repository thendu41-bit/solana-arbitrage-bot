import { Address, IAccountMeta, IInstruction, TransactionSigner } from "@solana/kit";
import * as types from "../types";
export interface SwapArgs {
    params: types.SwapParamsFields;
}
export interface SwapAccounts {
    owner: TransactionSigner;
    fundingAccount: Address;
    receivingAccount: Address;
    transferAuthority: Address;
    perpetuals: Address;
    pool: Address;
    receivingCustody: Address;
    receivingCustodyOracleAccount: Address;
    receivingCustodyTokenAccount: Address;
    dispensingCustody: Address;
    dispensingCustodyOracleAccount: Address;
    dispensingCustodyTokenAccount: Address;
    tokenProgram: Address;
    eventAuthority: Address;
    program: Address;
}
export declare const layout: import("buffer-layout").Layout<unknown>;
export declare function swap(args: SwapArgs, accounts: SwapAccounts, programAddress?: Address): IInstruction<string, readonly (IAccountMeta<string> | import("@solana/kit").IAccountLookupMeta<string, string>)[]>;
//# sourceMappingURL=swap.d.ts.map
import { Address, IAccountMeta, IInstruction, Option, TransactionSigner } from "@solana/kit";
import * as types from "../types";
export interface DecreasePositionArgs {
    params: types.DecreasePositionParamsFields;
}
export interface DecreasePositionAccounts {
    keeper: TransactionSigner;
    keeperAta: Option<Address>;
    owner: Address;
    transferAuthority: Address;
    perpetuals: Address;
    pool: Address;
    positionRequest: Address;
    positionRequestAta: Address;
    position: Address;
    custody: Address;
    custodyOracleAccount: Address;
    collateralCustody: Address;
    collateralCustodyOracleAccount: Address;
    collateralCustodyTokenAccount: Address;
    instruction: Address;
    tokenProgram: Address;
    eventAuthority: Address;
    program: Address;
}
export declare const layout: import("buffer-layout").Layout<unknown>;
export declare function decreasePosition(args: DecreasePositionArgs, accounts: DecreasePositionAccounts, programAddress?: Address): IInstruction<string, readonly (IAccountMeta<string> | import("@solana/kit").IAccountLookupMeta<string, string>)[]>;
//# sourceMappingURL=decreasePosition.d.ts.map
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PythLazer = exports.MostRecentOf = exports.DiscountToMaturity = exports.Chainlink = exports.JitoRestaking = exports.SwitchboardOnDemand = exports.FixedPrice = exports.PythPullEMA = exports.PythPull = exports.JupiterLpScope = exports.MeteoraDlmmBtoA = exports.MeteoraDlmmAtoB = exports.JupiterLpCompute = exports.RaydiumAmmV3BtoA = exports.RaydiumAmmV3AtoB = exports.OrcaWhirlpoolBtoA = exports.OrcaWhirlpoolAtoB = exports.ScopeTwap = exports.JupiterLpFetch = exports.KTokenToTokenB = exports.KTokenToTokenA = exports.MsolStake = exports.PythEMA = exports.KToken = exports.SplStake = exports.CToken = exports.DeprecatedPlaceholder2 = exports.SwitchboardV2 = exports.DeprecatedPlaceholder1 = exports.Pyth = void 0;
exports.fromDecoded = fromDecoded;
exports.fromJSON = fromJSON;
exports.layout = layout;
const borsh = __importStar(require("@coral-xyz/borsh"));
class Pyth {
    static discriminator = 0;
    static kind = "Pyth";
    discriminator = 0;
    kind = "Pyth";
    toJSON() {
        return {
            kind: "Pyth",
        };
    }
    toEncodable() {
        return {
            Pyth: {},
        };
    }
}
exports.Pyth = Pyth;
class DeprecatedPlaceholder1 {
    static discriminator = 1;
    static kind = "DeprecatedPlaceholder1";
    discriminator = 1;
    kind = "DeprecatedPlaceholder1";
    toJSON() {
        return {
            kind: "DeprecatedPlaceholder1",
        };
    }
    toEncodable() {
        return {
            DeprecatedPlaceholder1: {},
        };
    }
}
exports.DeprecatedPlaceholder1 = DeprecatedPlaceholder1;
class SwitchboardV2 {
    static discriminator = 2;
    static kind = "SwitchboardV2";
    discriminator = 2;
    kind = "SwitchboardV2";
    toJSON() {
        return {
            kind: "SwitchboardV2",
        };
    }
    toEncodable() {
        return {
            SwitchboardV2: {},
        };
    }
}
exports.SwitchboardV2 = SwitchboardV2;
class DeprecatedPlaceholder2 {
    static discriminator = 3;
    static kind = "DeprecatedPlaceholder2";
    discriminator = 3;
    kind = "DeprecatedPlaceholder2";
    toJSON() {
        return {
            kind: "DeprecatedPlaceholder2",
        };
    }
    toEncodable() {
        return {
            DeprecatedPlaceholder2: {},
        };
    }
}
exports.DeprecatedPlaceholder2 = DeprecatedPlaceholder2;
class CToken {
    static discriminator = 4;
    static kind = "CToken";
    discriminator = 4;
    kind = "CToken";
    toJSON() {
        return {
            kind: "CToken",
        };
    }
    toEncodable() {
        return {
            CToken: {},
        };
    }
}
exports.CToken = CToken;
class SplStake {
    static discriminator = 5;
    static kind = "SplStake";
    discriminator = 5;
    kind = "SplStake";
    toJSON() {
        return {
            kind: "SplStake",
        };
    }
    toEncodable() {
        return {
            SplStake: {},
        };
    }
}
exports.SplStake = SplStake;
class KToken {
    static discriminator = 6;
    static kind = "KToken";
    discriminator = 6;
    kind = "KToken";
    toJSON() {
        return {
            kind: "KToken",
        };
    }
    toEncodable() {
        return {
            KToken: {},
        };
    }
}
exports.KToken = KToken;
class PythEMA {
    static discriminator = 7;
    static kind = "PythEMA";
    discriminator = 7;
    kind = "PythEMA";
    toJSON() {
        return {
            kind: "PythEMA",
        };
    }
    toEncodable() {
        return {
            PythEMA: {},
        };
    }
}
exports.PythEMA = PythEMA;
class MsolStake {
    static discriminator = 8;
    static kind = "MsolStake";
    discriminator = 8;
    kind = "MsolStake";
    toJSON() {
        return {
            kind: "MsolStake",
        };
    }
    toEncodable() {
        return {
            MsolStake: {},
        };
    }
}
exports.MsolStake = MsolStake;
class KTokenToTokenA {
    static discriminator = 9;
    static kind = "KTokenToTokenA";
    discriminator = 9;
    kind = "KTokenToTokenA";
    toJSON() {
        return {
            kind: "KTokenToTokenA",
        };
    }
    toEncodable() {
        return {
            KTokenToTokenA: {},
        };
    }
}
exports.KTokenToTokenA = KTokenToTokenA;
class KTokenToTokenB {
    static discriminator = 10;
    static kind = "KTokenToTokenB";
    discriminator = 10;
    kind = "KTokenToTokenB";
    toJSON() {
        return {
            kind: "KTokenToTokenB",
        };
    }
    toEncodable() {
        return {
            KTokenToTokenB: {},
        };
    }
}
exports.KTokenToTokenB = KTokenToTokenB;
class JupiterLpFetch {
    static discriminator = 11;
    static kind = "JupiterLpFetch";
    discriminator = 11;
    kind = "JupiterLpFetch";
    toJSON() {
        return {
            kind: "JupiterLpFetch",
        };
    }
    toEncodable() {
        return {
            JupiterLpFetch: {},
        };
    }
}
exports.JupiterLpFetch = JupiterLpFetch;
class ScopeTwap {
    static discriminator = 12;
    static kind = "ScopeTwap";
    discriminator = 12;
    kind = "ScopeTwap";
    toJSON() {
        return {
            kind: "ScopeTwap",
        };
    }
    toEncodable() {
        return {
            ScopeTwap: {},
        };
    }
}
exports.ScopeTwap = ScopeTwap;
class OrcaWhirlpoolAtoB {
    static discriminator = 13;
    static kind = "OrcaWhirlpoolAtoB";
    discriminator = 13;
    kind = "OrcaWhirlpoolAtoB";
    toJSON() {
        return {
            kind: "OrcaWhirlpoolAtoB",
        };
    }
    toEncodable() {
        return {
            OrcaWhirlpoolAtoB: {},
        };
    }
}
exports.OrcaWhirlpoolAtoB = OrcaWhirlpoolAtoB;
class OrcaWhirlpoolBtoA {
    static discriminator = 14;
    static kind = "OrcaWhirlpoolBtoA";
    discriminator = 14;
    kind = "OrcaWhirlpoolBtoA";
    toJSON() {
        return {
            kind: "OrcaWhirlpoolBtoA",
        };
    }
    toEncodable() {
        return {
            OrcaWhirlpoolBtoA: {},
        };
    }
}
exports.OrcaWhirlpoolBtoA = OrcaWhirlpoolBtoA;
class RaydiumAmmV3AtoB {
    static discriminator = 15;
    static kind = "RaydiumAmmV3AtoB";
    discriminator = 15;
    kind = "RaydiumAmmV3AtoB";
    toJSON() {
        return {
            kind: "RaydiumAmmV3AtoB",
        };
    }
    toEncodable() {
        return {
            RaydiumAmmV3AtoB: {},
        };
    }
}
exports.RaydiumAmmV3AtoB = RaydiumAmmV3AtoB;
class RaydiumAmmV3BtoA {
    static discriminator = 16;
    static kind = "RaydiumAmmV3BtoA";
    discriminator = 16;
    kind = "RaydiumAmmV3BtoA";
    toJSON() {
        return {
            kind: "RaydiumAmmV3BtoA",
        };
    }
    toEncodable() {
        return {
            RaydiumAmmV3BtoA: {},
        };
    }
}
exports.RaydiumAmmV3BtoA = RaydiumAmmV3BtoA;
class JupiterLpCompute {
    static discriminator = 17;
    static kind = "JupiterLpCompute";
    discriminator = 17;
    kind = "JupiterLpCompute";
    toJSON() {
        return {
            kind: "JupiterLpCompute",
        };
    }
    toEncodable() {
        return {
            JupiterLpCompute: {},
        };
    }
}
exports.JupiterLpCompute = JupiterLpCompute;
class MeteoraDlmmAtoB {
    static discriminator = 18;
    static kind = "MeteoraDlmmAtoB";
    discriminator = 18;
    kind = "MeteoraDlmmAtoB";
    toJSON() {
        return {
            kind: "MeteoraDlmmAtoB",
        };
    }
    toEncodable() {
        return {
            MeteoraDlmmAtoB: {},
        };
    }
}
exports.MeteoraDlmmAtoB = MeteoraDlmmAtoB;
class MeteoraDlmmBtoA {
    static discriminator = 19;
    static kind = "MeteoraDlmmBtoA";
    discriminator = 19;
    kind = "MeteoraDlmmBtoA";
    toJSON() {
        return {
            kind: "MeteoraDlmmBtoA",
        };
    }
    toEncodable() {
        return {
            MeteoraDlmmBtoA: {},
        };
    }
}
exports.MeteoraDlmmBtoA = MeteoraDlmmBtoA;
class JupiterLpScope {
    static discriminator = 20;
    static kind = "JupiterLpScope";
    discriminator = 20;
    kind = "JupiterLpScope";
    toJSON() {
        return {
            kind: "JupiterLpScope",
        };
    }
    toEncodable() {
        return {
            JupiterLpScope: {},
        };
    }
}
exports.JupiterLpScope = JupiterLpScope;
class PythPull {
    static discriminator = 21;
    static kind = "PythPull";
    discriminator = 21;
    kind = "PythPull";
    toJSON() {
        return {
            kind: "PythPull",
        };
    }
    toEncodable() {
        return {
            PythPull: {},
        };
    }
}
exports.PythPull = PythPull;
class PythPullEMA {
    static discriminator = 22;
    static kind = "PythPullEMA";
    discriminator = 22;
    kind = "PythPullEMA";
    toJSON() {
        return {
            kind: "PythPullEMA",
        };
    }
    toEncodable() {
        return {
            PythPullEMA: {},
        };
    }
}
exports.PythPullEMA = PythPullEMA;
class FixedPrice {
    static discriminator = 23;
    static kind = "FixedPrice";
    discriminator = 23;
    kind = "FixedPrice";
    toJSON() {
        return {
            kind: "FixedPrice",
        };
    }
    toEncodable() {
        return {
            FixedPrice: {},
        };
    }
}
exports.FixedPrice = FixedPrice;
class SwitchboardOnDemand {
    static discriminator = 24;
    static kind = "SwitchboardOnDemand";
    discriminator = 24;
    kind = "SwitchboardOnDemand";
    toJSON() {
        return {
            kind: "SwitchboardOnDemand",
        };
    }
    toEncodable() {
        return {
            SwitchboardOnDemand: {},
        };
    }
}
exports.SwitchboardOnDemand = SwitchboardOnDemand;
class JitoRestaking {
    static discriminator = 25;
    static kind = "JitoRestaking";
    discriminator = 25;
    kind = "JitoRestaking";
    toJSON() {
        return {
            kind: "JitoRestaking",
        };
    }
    toEncodable() {
        return {
            JitoRestaking: {},
        };
    }
}
exports.JitoRestaking = JitoRestaking;
class Chainlink {
    static discriminator = 26;
    static kind = "Chainlink";
    discriminator = 26;
    kind = "Chainlink";
    toJSON() {
        return {
            kind: "Chainlink",
        };
    }
    toEncodable() {
        return {
            Chainlink: {},
        };
    }
}
exports.Chainlink = Chainlink;
class DiscountToMaturity {
    static discriminator = 27;
    static kind = "DiscountToMaturity";
    discriminator = 27;
    kind = "DiscountToMaturity";
    toJSON() {
        return {
            kind: "DiscountToMaturity",
        };
    }
    toEncodable() {
        return {
            DiscountToMaturity: {},
        };
    }
}
exports.DiscountToMaturity = DiscountToMaturity;
class MostRecentOf {
    static discriminator = 28;
    static kind = "MostRecentOf";
    discriminator = 28;
    kind = "MostRecentOf";
    toJSON() {
        return {
            kind: "MostRecentOf",
        };
    }
    toEncodable() {
        return {
            MostRecentOf: {},
        };
    }
}
exports.MostRecentOf = MostRecentOf;
class PythLazer {
    static discriminator = 29;
    static kind = "PythLazer";
    discriminator = 29;
    kind = "PythLazer";
    toJSON() {
        return {
            kind: "PythLazer",
        };
    }
    toEncodable() {
        return {
            PythLazer: {},
        };
    }
}
exports.PythLazer = PythLazer;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function fromDecoded(obj) {
    if (typeof obj !== "object") {
        throw new Error("Invalid enum object");
    }
    if ("Pyth" in obj) {
        return new Pyth();
    }
    if ("DeprecatedPlaceholder1" in obj) {
        return new DeprecatedPlaceholder1();
    }
    if ("SwitchboardV2" in obj) {
        return new SwitchboardV2();
    }
    if ("DeprecatedPlaceholder2" in obj) {
        return new DeprecatedPlaceholder2();
    }
    if ("CToken" in obj) {
        return new CToken();
    }
    if ("SplStake" in obj) {
        return new SplStake();
    }
    if ("KToken" in obj) {
        return new KToken();
    }
    if ("PythEMA" in obj) {
        return new PythEMA();
    }
    if ("MsolStake" in obj) {
        return new MsolStake();
    }
    if ("KTokenToTokenA" in obj) {
        return new KTokenToTokenA();
    }
    if ("KTokenToTokenB" in obj) {
        return new KTokenToTokenB();
    }
    if ("JupiterLpFetch" in obj) {
        return new JupiterLpFetch();
    }
    if ("ScopeTwap" in obj) {
        return new ScopeTwap();
    }
    if ("OrcaWhirlpoolAtoB" in obj) {
        return new OrcaWhirlpoolAtoB();
    }
    if ("OrcaWhirlpoolBtoA" in obj) {
        return new OrcaWhirlpoolBtoA();
    }
    if ("RaydiumAmmV3AtoB" in obj) {
        return new RaydiumAmmV3AtoB();
    }
    if ("RaydiumAmmV3BtoA" in obj) {
        return new RaydiumAmmV3BtoA();
    }
    if ("JupiterLpCompute" in obj) {
        return new JupiterLpCompute();
    }
    if ("MeteoraDlmmAtoB" in obj) {
        return new MeteoraDlmmAtoB();
    }
    if ("MeteoraDlmmBtoA" in obj) {
        return new MeteoraDlmmBtoA();
    }
    if ("JupiterLpScope" in obj) {
        return new JupiterLpScope();
    }
    if ("PythPull" in obj) {
        return new PythPull();
    }
    if ("PythPullEMA" in obj) {
        return new PythPullEMA();
    }
    if ("FixedPrice" in obj) {
        return new FixedPrice();
    }
    if ("SwitchboardOnDemand" in obj) {
        return new SwitchboardOnDemand();
    }
    if ("JitoRestaking" in obj) {
        return new JitoRestaking();
    }
    if ("Chainlink" in obj) {
        return new Chainlink();
    }
    if ("DiscountToMaturity" in obj) {
        return new DiscountToMaturity();
    }
    if ("MostRecentOf" in obj) {
        return new MostRecentOf();
    }
    if ("PythLazer" in obj) {
        return new PythLazer();
    }
    throw new Error("Invalid enum object");
}
function fromJSON(obj) {
    switch (obj.kind) {
        case "Pyth": {
            return new Pyth();
        }
        case "DeprecatedPlaceholder1": {
            return new DeprecatedPlaceholder1();
        }
        case "SwitchboardV2": {
            return new SwitchboardV2();
        }
        case "DeprecatedPlaceholder2": {
            return new DeprecatedPlaceholder2();
        }
        case "CToken": {
            return new CToken();
        }
        case "SplStake": {
            return new SplStake();
        }
        case "KToken": {
            return new KToken();
        }
        case "PythEMA": {
            return new PythEMA();
        }
        case "MsolStake": {
            return new MsolStake();
        }
        case "KTokenToTokenA": {
            return new KTokenToTokenA();
        }
        case "KTokenToTokenB": {
            return new KTokenToTokenB();
        }
        case "JupiterLpFetch": {
            return new JupiterLpFetch();
        }
        case "ScopeTwap": {
            return new ScopeTwap();
        }
        case "OrcaWhirlpoolAtoB": {
            return new OrcaWhirlpoolAtoB();
        }
        case "OrcaWhirlpoolBtoA": {
            return new OrcaWhirlpoolBtoA();
        }
        case "RaydiumAmmV3AtoB": {
            return new RaydiumAmmV3AtoB();
        }
        case "RaydiumAmmV3BtoA": {
            return new RaydiumAmmV3BtoA();
        }
        case "JupiterLpCompute": {
            return new JupiterLpCompute();
        }
        case "MeteoraDlmmAtoB": {
            return new MeteoraDlmmAtoB();
        }
        case "MeteoraDlmmBtoA": {
            return new MeteoraDlmmBtoA();
        }
        case "JupiterLpScope": {
            return new JupiterLpScope();
        }
        case "PythPull": {
            return new PythPull();
        }
        case "PythPullEMA": {
            return new PythPullEMA();
        }
        case "FixedPrice": {
            return new FixedPrice();
        }
        case "SwitchboardOnDemand": {
            return new SwitchboardOnDemand();
        }
        case "JitoRestaking": {
            return new JitoRestaking();
        }
        case "Chainlink": {
            return new Chainlink();
        }
        case "DiscountToMaturity": {
            return new DiscountToMaturity();
        }
        case "MostRecentOf": {
            return new MostRecentOf();
        }
        case "PythLazer": {
            return new PythLazer();
        }
    }
}
function layout(property) {
    const ret = borsh.rustEnum([
        borsh.struct([], "Pyth"),
        borsh.struct([], "DeprecatedPlaceholder1"),
        borsh.struct([], "SwitchboardV2"),
        borsh.struct([], "DeprecatedPlaceholder2"),
        borsh.struct([], "CToken"),
        borsh.struct([], "SplStake"),
        borsh.struct([], "KToken"),
        borsh.struct([], "PythEMA"),
        borsh.struct([], "MsolStake"),
        borsh.struct([], "KTokenToTokenA"),
        borsh.struct([], "KTokenToTokenB"),
        borsh.struct([], "JupiterLpFetch"),
        borsh.struct([], "ScopeTwap"),
        borsh.struct([], "OrcaWhirlpoolAtoB"),
        borsh.struct([], "OrcaWhirlpoolBtoA"),
        borsh.struct([], "RaydiumAmmV3AtoB"),
        borsh.struct([], "RaydiumAmmV3BtoA"),
        borsh.struct([], "JupiterLpCompute"),
        borsh.struct([], "MeteoraDlmmAtoB"),
        borsh.struct([], "MeteoraDlmmBtoA"),
        borsh.struct([], "JupiterLpScope"),
        borsh.struct([], "PythPull"),
        borsh.struct([], "PythPullEMA"),
        borsh.struct([], "FixedPrice"),
        borsh.struct([], "SwitchboardOnDemand"),
        borsh.struct([], "JitoRestaking"),
        borsh.struct([], "Chainlink"),
        borsh.struct([], "DiscountToMaturity"),
        borsh.struct([], "MostRecentOf"),
        borsh.struct([], "PythLazer"),
    ]);
    if (property !== undefined) {
        return ret.replicate(property);
    }
    return ret;
}
//# sourceMappingURL=OracleType.js.map
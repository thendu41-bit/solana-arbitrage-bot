import { Address, IAccountMeta, IInstruction, TransactionSigner } from "@solana/kit";
import * as types from "../types";
export interface LiquidatePositionArgs {
    params: types.LiquidatePositionParamsFields;
}
export interface LiquidatePositionAccounts {
    signer: TransactionSigner;
    receivingAccount: Address;
    rewardReceivingAccount: Address;
    transferAuthority: Address;
    perpetuals: Address;
    pool: Address;
    position: Address;
    custody: Address;
    custodyOracleAccount: Address;
    collateralCustody: Address;
    collateralCustodyOracleAccount: Address;
    collateralCustodyTokenAccount: Address;
    tokenProgram: Address;
    eventAuthority: Address;
    program: Address;
}
export declare const layout: import("buffer-layout").Layout<unknown>;
export declare function liquidatePosition(args: LiquidatePositionArgs, accounts: LiquidatePositionAccounts, programAddress?: Address): IInstruction<string, readonly (IAccountMeta<string> | import("@solana/kit").IAccountLookupMeta<string, string>)[]>;
//# sourceMappingURL=liquidatePosition.d.ts.map
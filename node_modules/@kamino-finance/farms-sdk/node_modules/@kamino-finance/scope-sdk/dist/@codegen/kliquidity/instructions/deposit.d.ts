import { Address, IAccountMeta, IInstruction, TransactionSigner } from "@solana/kit";
import BN from "bn.js";
export interface DepositArgs {
    tokenMaxA: BN;
    tokenMaxB: BN;
}
export interface DepositAccounts {
    user: TransactionSigner;
    strategy: Address;
    globalConfig: Address;
    pool: Address;
    position: Address;
    tickArrayLower: Address;
    tickArrayUpper: Address;
    tokenAVault: Address;
    tokenBVault: Address;
    baseVaultAuthority: Address;
    tokenAAta: Address;
    tokenBAta: Address;
    tokenAMint: Address;
    tokenBMint: Address;
    userSharesAta: Address;
    sharesMint: Address;
    sharesMintAuthority: Address;
    scopePrices: Address;
    tokenInfos: Address;
    tokenProgram: Address;
    tokenATokenProgram: Address;
    tokenBTokenProgram: Address;
    instructionSysvarAccount: Address;
}
export declare const layout: import("buffer-layout").Layout<unknown>;
export declare function deposit(args: DepositArgs, accounts: DepositAccounts, programAddress?: Address): IInstruction<string, readonly (IAccountMeta<string> | import("@solana/kit").IAccountLookupMeta<string, string>)[]>;
//# sourceMappingURL=deposit.d.ts.map
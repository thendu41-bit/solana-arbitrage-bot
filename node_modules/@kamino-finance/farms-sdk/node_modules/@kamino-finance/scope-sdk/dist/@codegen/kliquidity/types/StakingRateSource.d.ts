import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface ConstantJSON {
    kind: "Constant";
}
export declare class Constant {
    static readonly discriminator = 0;
    static readonly kind = "Constant";
    readonly discriminator = 0;
    readonly kind = "Constant";
    toJSON(): ConstantJSON;
    toEncodable(): {
        Constant: {};
    };
}
export interface ScopeJSON {
    kind: "Scope";
}
export declare class Scope {
    static readonly discriminator = 1;
    static readonly kind = "Scope";
    readonly discriminator = 1;
    readonly kind = "Scope";
    toJSON(): ScopeJSON;
    toEncodable(): {
        Scope: {};
    };
}
export declare function fromDecoded(obj: any): types.StakingRateSourceKind;
export declare function fromJSON(obj: types.StakingRateSourceJSON): types.StakingRateSourceKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=StakingRateSource.d.ts.map
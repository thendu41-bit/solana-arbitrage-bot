import BN from "bn.js";
import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export type SqrtPriceFields = [BN];
export type SqrtPriceValue = [BN];
export interface SqrtPriceJSON {
    kind: "SqrtPrice";
    value: [string];
}
export declare class SqrtPrice {
    static readonly discriminator = 0;
    static readonly kind = "SqrtPrice";
    readonly discriminator = 0;
    readonly kind = "SqrtPrice";
    readonly value: SqrtPriceValue;
    constructor(value: SqrtPriceFields);
    toJSON(): SqrtPriceJSON;
    toEncodable(): {
        SqrtPrice: {
            _0: BN;
        };
    };
}
export type Q64_64Fields = [BN];
export type Q64_64Value = [BN];
export interface Q64_64JSON {
    kind: "Q64_64";
    value: [string];
}
export declare class Q64_64 {
    static readonly discriminator = 1;
    static readonly kind = "Q64_64";
    readonly discriminator = 1;
    readonly kind = "Q64_64";
    readonly value: Q64_64Value;
    constructor(value: Q64_64Fields);
    toJSON(): Q64_64JSON;
    toEncodable(): {
        Q64_64: {
            _0: BN;
        };
    };
}
export declare function fromDecoded(obj: any): types.DexSpecificPriceKind;
export declare function fromJSON(obj: types.DexSpecificPriceJSON): types.DexSpecificPriceKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=DexSpecificPrice.d.ts.map
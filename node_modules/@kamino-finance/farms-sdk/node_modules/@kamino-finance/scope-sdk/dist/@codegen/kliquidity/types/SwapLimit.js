"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Absolute = exports.Bps = void 0;
exports.fromDecoded = fromDecoded;
exports.fromJSON = fromJSON;
exports.layout = layout;
const bn_js_1 = __importDefault(require("bn.js")); // eslint-disable-line @typescript-eslint/no-unused-vars
const borsh = __importStar(require("@coral-xyz/borsh"));
class Bps {
    static discriminator = 0;
    static kind = "Bps";
    discriminator = 0;
    kind = "Bps";
    value;
    constructor(value) {
        this.value = [value[0]];
    }
    toJSON() {
        return {
            kind: "Bps",
            value: [this.value[0].toString()],
        };
    }
    toEncodable() {
        return {
            Bps: {
                _0: this.value[0],
            },
        };
    }
}
exports.Bps = Bps;
class Absolute {
    static discriminator = 1;
    static kind = "Absolute";
    discriminator = 1;
    kind = "Absolute";
    value;
    constructor(value) {
        this.value = {
            srcAmountToSwap: value.srcAmountToSwap,
            dstAmountToVault: value.dstAmountToVault,
            aToB: value.aToB,
        };
    }
    toJSON() {
        return {
            kind: "Absolute",
            value: {
                srcAmountToSwap: this.value.srcAmountToSwap.toString(),
                dstAmountToVault: this.value.dstAmountToVault.toString(),
                aToB: this.value.aToB,
            },
        };
    }
    toEncodable() {
        return {
            Absolute: {
                srcAmountToSwap: this.value.srcAmountToSwap,
                dstAmountToVault: this.value.dstAmountToVault,
                aToB: this.value.aToB,
            },
        };
    }
}
exports.Absolute = Absolute;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function fromDecoded(obj) {
    if (typeof obj !== "object") {
        throw new Error("Invalid enum object");
    }
    if ("Bps" in obj) {
        const val = obj["Bps"];
        return new Bps([val["_0"]]);
    }
    if ("Absolute" in obj) {
        const val = obj["Absolute"];
        return new Absolute({
            srcAmountToSwap: val["srcAmountToSwap"],
            dstAmountToVault: val["dstAmountToVault"],
            aToB: val["aToB"],
        });
    }
    throw new Error("Invalid enum object");
}
function fromJSON(obj) {
    switch (obj.kind) {
        case "Bps": {
            return new Bps([new bn_js_1.default(obj.value[0])]);
        }
        case "Absolute": {
            return new Absolute({
                srcAmountToSwap: new bn_js_1.default(obj.value.srcAmountToSwap),
                dstAmountToVault: new bn_js_1.default(obj.value.dstAmountToVault),
                aToB: obj.value.aToB,
            });
        }
    }
}
function layout(property) {
    const ret = borsh.rustEnum([
        borsh.struct([borsh.u64("_0")], "Bps"),
        borsh.struct([
            borsh.u64("srcAmountToSwap"),
            borsh.u64("dstAmountToVault"),
            borsh.bool("aToB"),
        ], "Absolute"),
    ]);
    if (property !== undefined) {
        return ret.replicate(property);
    }
    return ret;
}
//# sourceMappingURL=SwapLimit.js.map
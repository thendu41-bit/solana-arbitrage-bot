import * as types from "../types";
export interface RebalanceTakeProfitStateFields {
    step: types.RebalanceTakeProfitStepKind;
}
export interface RebalanceTakeProfitStateJSON {
    step: types.RebalanceTakeProfitStepJSON;
}
export declare class RebalanceTakeProfitState {
    readonly step: types.RebalanceTakeProfitStepKind;
    constructor(fields: RebalanceTakeProfitStateFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.RebalanceTakeProfitState;
    static toEncodable(fields: RebalanceTakeProfitStateFields): {
        step: {
            Uninitialized: {};
        } | {
            TakingProfit: {};
        } | {
            Finished: {};
        };
    };
    toJSON(): RebalanceTakeProfitStateJSON;
    static fromJSON(obj: RebalanceTakeProfitStateJSON): RebalanceTakeProfitState;
    toEncodable(): {
        step: {
            Uninitialized: {};
        } | {
            TakingProfit: {};
        } | {
            Finished: {};
        };
    };
}
//# sourceMappingURL=RebalanceTakeProfitState.d.ts.map
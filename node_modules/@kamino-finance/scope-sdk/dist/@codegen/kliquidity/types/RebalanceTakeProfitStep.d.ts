import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface UninitializedJSON {
    kind: "Uninitialized";
}
export declare class Uninitialized {
    static readonly discriminator = 0;
    static readonly kind = "Uninitialized";
    readonly discriminator = 0;
    readonly kind = "Uninitialized";
    toJSON(): UninitializedJSON;
    toEncodable(): {
        Uninitialized: {};
    };
}
export interface TakingProfitJSON {
    kind: "TakingProfit";
}
export declare class TakingProfit {
    static readonly discriminator = 1;
    static readonly kind = "TakingProfit";
    readonly discriminator = 1;
    readonly kind = "TakingProfit";
    toJSON(): TakingProfitJSON;
    toEncodable(): {
        TakingProfit: {};
    };
}
export interface FinishedJSON {
    kind: "Finished";
}
export declare class Finished {
    static readonly discriminator = 2;
    static readonly kind = "Finished";
    readonly discriminator = 2;
    readonly kind = "Finished";
    toJSON(): FinishedJSON;
    toEncodable(): {
        Finished: {};
    };
}
export declare function fromDecoded(obj: any): types.RebalanceTakeProfitStepKind;
export declare function fromJSON(obj: types.RebalanceTakeProfitStepJSON): types.RebalanceTakeProfitStepKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=RebalanceTakeProfitStep.d.ts.map
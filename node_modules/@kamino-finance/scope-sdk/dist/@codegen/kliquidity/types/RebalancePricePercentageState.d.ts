import BN from "bn.js";
import * as types from "../types";
export interface RebalancePricePercentageStateFields {
    lastRebalanceLowerPoolPrice: BN;
    lastRebalanceUpperPoolPrice: BN;
}
export interface RebalancePricePercentageStateJSON {
    lastRebalanceLowerPoolPrice: string;
    lastRebalanceUpperPoolPrice: string;
}
export declare class RebalancePricePercentageState {
    readonly lastRebalanceLowerPoolPrice: BN;
    readonly lastRebalanceUpperPoolPrice: BN;
    constructor(fields: RebalancePricePercentageStateFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.RebalancePricePercentageState;
    static toEncodable(fields: RebalancePricePercentageStateFields): {
        lastRebalanceLowerPoolPrice: BN;
        lastRebalanceUpperPoolPrice: BN;
    };
    toJSON(): RebalancePricePercentageStateJSON;
    static fromJSON(obj: RebalancePricePercentageStateJSON): RebalancePricePercentageState;
    toEncodable(): {
        lastRebalanceLowerPoolPrice: BN;
        lastRebalanceUpperPoolPrice: BN;
    };
}
//# sourceMappingURL=RebalancePricePercentageState.d.ts.map
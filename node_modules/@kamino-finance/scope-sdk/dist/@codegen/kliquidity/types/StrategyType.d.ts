import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface StableJSON {
    kind: "Stable";
}
export declare class Stable {
    static readonly discriminator = 0;
    static readonly kind = "Stable";
    readonly discriminator = 0;
    readonly kind = "Stable";
    toJSON(): StableJSON;
    toEncodable(): {
        Stable: {};
    };
}
export interface PeggedJSON {
    kind: "Pegged";
}
export declare class Pegged {
    static readonly discriminator = 1;
    static readonly kind = "Pegged";
    readonly discriminator = 1;
    readonly kind = "Pegged";
    toJSON(): PeggedJSON;
    toEncodable(): {
        Pegged: {};
    };
}
export interface VolatileJSON {
    kind: "Volatile";
}
export declare class Volatile {
    static readonly discriminator = 2;
    static readonly kind = "Volatile";
    readonly discriminator = 2;
    readonly kind = "Volatile";
    toJSON(): VolatileJSON;
    toEncodable(): {
        Volatile: {};
    };
}
export declare function fromDecoded(obj: any): types.StrategyTypeKind;
export declare function fromJSON(obj: types.StrategyTypeJSON): types.StrategyTypeKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=StrategyType.d.ts.map
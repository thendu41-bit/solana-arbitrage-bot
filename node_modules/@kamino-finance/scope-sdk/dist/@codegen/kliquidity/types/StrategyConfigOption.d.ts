import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface UpdateDepositCapJSON {
    kind: "UpdateDepositCap";
}
export declare class UpdateDepositCap {
    static readonly discriminator = 0;
    static readonly kind = "UpdateDepositCap";
    readonly discriminator = 0;
    readonly kind = "UpdateDepositCap";
    toJSON(): UpdateDepositCapJSON;
    toEncodable(): {
        UpdateDepositCap: {};
    };
}
export interface UpdateDepositCapIxnJSON {
    kind: "UpdateDepositCapIxn";
}
export declare class UpdateDepositCapIxn {
    static readonly discriminator = 1;
    static readonly kind = "UpdateDepositCapIxn";
    readonly discriminator = 1;
    readonly kind = "UpdateDepositCapIxn";
    toJSON(): UpdateDepositCapIxnJSON;
    toEncodable(): {
        UpdateDepositCapIxn: {};
    };
}
export interface UpdateWithdrawalCapACapacityJSON {
    kind: "UpdateWithdrawalCapACapacity";
}
export declare class UpdateWithdrawalCapACapacity {
    static readonly discriminator = 2;
    static readonly kind = "UpdateWithdrawalCapACapacity";
    readonly discriminator = 2;
    readonly kind = "UpdateWithdrawalCapACapacity";
    toJSON(): UpdateWithdrawalCapACapacityJSON;
    toEncodable(): {
        UpdateWithdrawalCapACapacity: {};
    };
}
export interface UpdateWithdrawalCapAIntervalJSON {
    kind: "UpdateWithdrawalCapAInterval";
}
export declare class UpdateWithdrawalCapAInterval {
    static readonly discriminator = 3;
    static readonly kind = "UpdateWithdrawalCapAInterval";
    readonly discriminator = 3;
    readonly kind = "UpdateWithdrawalCapAInterval";
    toJSON(): UpdateWithdrawalCapAIntervalJSON;
    toEncodable(): {
        UpdateWithdrawalCapAInterval: {};
    };
}
export interface UpdateWithdrawalCapACurrentTotalJSON {
    kind: "UpdateWithdrawalCapACurrentTotal";
}
export declare class UpdateWithdrawalCapACurrentTotal {
    static readonly discriminator = 4;
    static readonly kind = "UpdateWithdrawalCapACurrentTotal";
    readonly discriminator = 4;
    readonly kind = "UpdateWithdrawalCapACurrentTotal";
    toJSON(): UpdateWithdrawalCapACurrentTotalJSON;
    toEncodable(): {
        UpdateWithdrawalCapACurrentTotal: {};
    };
}
export interface UpdateWithdrawalCapBCapacityJSON {
    kind: "UpdateWithdrawalCapBCapacity";
}
export declare class UpdateWithdrawalCapBCapacity {
    static readonly discriminator = 5;
    static readonly kind = "UpdateWithdrawalCapBCapacity";
    readonly discriminator = 5;
    readonly kind = "UpdateWithdrawalCapBCapacity";
    toJSON(): UpdateWithdrawalCapBCapacityJSON;
    toEncodable(): {
        UpdateWithdrawalCapBCapacity: {};
    };
}
export interface UpdateWithdrawalCapBIntervalJSON {
    kind: "UpdateWithdrawalCapBInterval";
}
export declare class UpdateWithdrawalCapBInterval {
    static readonly discriminator = 6;
    static readonly kind = "UpdateWithdrawalCapBInterval";
    readonly discriminator = 6;
    readonly kind = "UpdateWithdrawalCapBInterval";
    toJSON(): UpdateWithdrawalCapBIntervalJSON;
    toEncodable(): {
        UpdateWithdrawalCapBInterval: {};
    };
}
export interface UpdateWithdrawalCapBCurrentTotalJSON {
    kind: "UpdateWithdrawalCapBCurrentTotal";
}
export declare class UpdateWithdrawalCapBCurrentTotal {
    static readonly discriminator = 7;
    static readonly kind = "UpdateWithdrawalCapBCurrentTotal";
    readonly discriminator = 7;
    readonly kind = "UpdateWithdrawalCapBCurrentTotal";
    toJSON(): UpdateWithdrawalCapBCurrentTotalJSON;
    toEncodable(): {
        UpdateWithdrawalCapBCurrentTotal: {};
    };
}
export interface UpdateMaxDeviationBpsJSON {
    kind: "UpdateMaxDeviationBps";
}
export declare class UpdateMaxDeviationBps {
    static readonly discriminator = 8;
    static readonly kind = "UpdateMaxDeviationBps";
    readonly discriminator = 8;
    readonly kind = "UpdateMaxDeviationBps";
    toJSON(): UpdateMaxDeviationBpsJSON;
    toEncodable(): {
        UpdateMaxDeviationBps: {};
    };
}
export interface UpdateSwapVaultMaxSlippageJSON {
    kind: "UpdateSwapVaultMaxSlippage";
}
export declare class UpdateSwapVaultMaxSlippage {
    static readonly discriminator = 9;
    static readonly kind = "UpdateSwapVaultMaxSlippage";
    readonly discriminator = 9;
    readonly kind = "UpdateSwapVaultMaxSlippage";
    toJSON(): UpdateSwapVaultMaxSlippageJSON;
    toEncodable(): {
        UpdateSwapVaultMaxSlippage: {};
    };
}
export interface UpdateStrategyTypeJSON {
    kind: "UpdateStrategyType";
}
export declare class UpdateStrategyType {
    static readonly discriminator = 10;
    static readonly kind = "UpdateStrategyType";
    readonly discriminator = 10;
    readonly kind = "UpdateStrategyType";
    toJSON(): UpdateStrategyTypeJSON;
    toEncodable(): {
        UpdateStrategyType: {};
    };
}
export interface UpdateDepositFeeJSON {
    kind: "UpdateDepositFee";
}
export declare class UpdateDepositFee {
    static readonly discriminator = 11;
    static readonly kind = "UpdateDepositFee";
    readonly discriminator = 11;
    readonly kind = "UpdateDepositFee";
    toJSON(): UpdateDepositFeeJSON;
    toEncodable(): {
        UpdateDepositFee: {};
    };
}
export interface UpdateWithdrawFeeJSON {
    kind: "UpdateWithdrawFee";
}
export declare class UpdateWithdrawFee {
    static readonly discriminator = 12;
    static readonly kind = "UpdateWithdrawFee";
    readonly discriminator = 12;
    readonly kind = "UpdateWithdrawFee";
    toJSON(): UpdateWithdrawFeeJSON;
    toEncodable(): {
        UpdateWithdrawFee: {};
    };
}
export interface UpdateCollectFeesFeeJSON {
    kind: "UpdateCollectFeesFee";
}
export declare class UpdateCollectFeesFee {
    static readonly discriminator = 13;
    static readonly kind = "UpdateCollectFeesFee";
    readonly discriminator = 13;
    readonly kind = "UpdateCollectFeesFee";
    toJSON(): UpdateCollectFeesFeeJSON;
    toEncodable(): {
        UpdateCollectFeesFee: {};
    };
}
export interface UpdateReward0FeeJSON {
    kind: "UpdateReward0Fee";
}
export declare class UpdateReward0Fee {
    static readonly discriminator = 14;
    static readonly kind = "UpdateReward0Fee";
    readonly discriminator = 14;
    readonly kind = "UpdateReward0Fee";
    toJSON(): UpdateReward0FeeJSON;
    toEncodable(): {
        UpdateReward0Fee: {};
    };
}
export interface UpdateReward1FeeJSON {
    kind: "UpdateReward1Fee";
}
export declare class UpdateReward1Fee {
    static readonly discriminator = 15;
    static readonly kind = "UpdateReward1Fee";
    readonly discriminator = 15;
    readonly kind = "UpdateReward1Fee";
    toJSON(): UpdateReward1FeeJSON;
    toEncodable(): {
        UpdateReward1Fee: {};
    };
}
export interface UpdateReward2FeeJSON {
    kind: "UpdateReward2Fee";
}
export declare class UpdateReward2Fee {
    static readonly discriminator = 16;
    static readonly kind = "UpdateReward2Fee";
    readonly discriminator = 16;
    readonly kind = "UpdateReward2Fee";
    toJSON(): UpdateReward2FeeJSON;
    toEncodable(): {
        UpdateReward2Fee: {};
    };
}
export interface UpdateAdminAuthorityJSON {
    kind: "UpdateAdminAuthority";
}
export declare class UpdateAdminAuthority {
    static readonly discriminator = 17;
    static readonly kind = "UpdateAdminAuthority";
    readonly discriminator = 17;
    readonly kind = "UpdateAdminAuthority";
    toJSON(): UpdateAdminAuthorityJSON;
    toEncodable(): {
        UpdateAdminAuthority: {};
    };
}
export interface KaminoRewardIndex0TSJSON {
    kind: "KaminoRewardIndex0TS";
}
export declare class KaminoRewardIndex0TS {
    static readonly discriminator = 18;
    static readonly kind = "KaminoRewardIndex0TS";
    readonly discriminator = 18;
    readonly kind = "KaminoRewardIndex0TS";
    toJSON(): KaminoRewardIndex0TSJSON;
    toEncodable(): {
        KaminoRewardIndex0TS: {};
    };
}
export interface KaminoRewardIndex1TSJSON {
    kind: "KaminoRewardIndex1TS";
}
export declare class KaminoRewardIndex1TS {
    static readonly discriminator = 19;
    static readonly kind = "KaminoRewardIndex1TS";
    readonly discriminator = 19;
    readonly kind = "KaminoRewardIndex1TS";
    toJSON(): KaminoRewardIndex1TSJSON;
    toEncodable(): {
        KaminoRewardIndex1TS: {};
    };
}
export interface KaminoRewardIndex2TSJSON {
    kind: "KaminoRewardIndex2TS";
}
export declare class KaminoRewardIndex2TS {
    static readonly discriminator = 20;
    static readonly kind = "KaminoRewardIndex2TS";
    readonly discriminator = 20;
    readonly kind = "KaminoRewardIndex2TS";
    toJSON(): KaminoRewardIndex2TSJSON;
    toEncodable(): {
        KaminoRewardIndex2TS: {};
    };
}
export interface KaminoRewardIndex0RewardPerSecondJSON {
    kind: "KaminoRewardIndex0RewardPerSecond";
}
export declare class KaminoRewardIndex0RewardPerSecond {
    static readonly discriminator = 21;
    static readonly kind = "KaminoRewardIndex0RewardPerSecond";
    readonly discriminator = 21;
    readonly kind = "KaminoRewardIndex0RewardPerSecond";
    toJSON(): KaminoRewardIndex0RewardPerSecondJSON;
    toEncodable(): {
        KaminoRewardIndex0RewardPerSecond: {};
    };
}
export interface KaminoRewardIndex1RewardPerSecondJSON {
    kind: "KaminoRewardIndex1RewardPerSecond";
}
export declare class KaminoRewardIndex1RewardPerSecond {
    static readonly discriminator = 22;
    static readonly kind = "KaminoRewardIndex1RewardPerSecond";
    readonly discriminator = 22;
    readonly kind = "KaminoRewardIndex1RewardPerSecond";
    toJSON(): KaminoRewardIndex1RewardPerSecondJSON;
    toEncodable(): {
        KaminoRewardIndex1RewardPerSecond: {};
    };
}
export interface KaminoRewardIndex2RewardPerSecondJSON {
    kind: "KaminoRewardIndex2RewardPerSecond";
}
export declare class KaminoRewardIndex2RewardPerSecond {
    static readonly discriminator = 23;
    static readonly kind = "KaminoRewardIndex2RewardPerSecond";
    readonly discriminator = 23;
    readonly kind = "KaminoRewardIndex2RewardPerSecond";
    toJSON(): KaminoRewardIndex2RewardPerSecondJSON;
    toEncodable(): {
        KaminoRewardIndex2RewardPerSecond: {};
    };
}
export interface UpdateDepositBlockedJSON {
    kind: "UpdateDepositBlocked";
}
export declare class UpdateDepositBlocked {
    static readonly discriminator = 24;
    static readonly kind = "UpdateDepositBlocked";
    readonly discriminator = 24;
    readonly kind = "UpdateDepositBlocked";
    toJSON(): UpdateDepositBlockedJSON;
    toEncodable(): {
        UpdateDepositBlocked: {};
    };
}
export interface UpdateRaydiumProtocolPositionOrBaseVaultAuthorityJSON {
    kind: "UpdateRaydiumProtocolPositionOrBaseVaultAuthority";
}
export declare class UpdateRaydiumProtocolPositionOrBaseVaultAuthority {
    static readonly discriminator = 25;
    static readonly kind = "UpdateRaydiumProtocolPositionOrBaseVaultAuthority";
    readonly discriminator = 25;
    readonly kind = "UpdateRaydiumProtocolPositionOrBaseVaultAuthority";
    toJSON(): UpdateRaydiumProtocolPositionOrBaseVaultAuthorityJSON;
    toEncodable(): {
        UpdateRaydiumProtocolPositionOrBaseVaultAuthority: {};
    };
}
export interface UpdateRaydiumPoolConfigOrBaseVaultAuthorityJSON {
    kind: "UpdateRaydiumPoolConfigOrBaseVaultAuthority";
}
export declare class UpdateRaydiumPoolConfigOrBaseVaultAuthority {
    static readonly discriminator = 26;
    static readonly kind = "UpdateRaydiumPoolConfigOrBaseVaultAuthority";
    readonly discriminator = 26;
    readonly kind = "UpdateRaydiumPoolConfigOrBaseVaultAuthority";
    toJSON(): UpdateRaydiumPoolConfigOrBaseVaultAuthorityJSON;
    toEncodable(): {
        UpdateRaydiumPoolConfigOrBaseVaultAuthority: {};
    };
}
export interface UpdateInvestBlockedJSON {
    kind: "UpdateInvestBlocked";
}
export declare class UpdateInvestBlocked {
    static readonly discriminator = 27;
    static readonly kind = "UpdateInvestBlocked";
    readonly discriminator = 27;
    readonly kind = "UpdateInvestBlocked";
    toJSON(): UpdateInvestBlockedJSON;
    toEncodable(): {
        UpdateInvestBlocked: {};
    };
}
export interface UpdateWithdrawBlockedJSON {
    kind: "UpdateWithdrawBlocked";
}
export declare class UpdateWithdrawBlocked {
    static readonly discriminator = 28;
    static readonly kind = "UpdateWithdrawBlocked";
    readonly discriminator = 28;
    readonly kind = "UpdateWithdrawBlocked";
    toJSON(): UpdateWithdrawBlockedJSON;
    toEncodable(): {
        UpdateWithdrawBlocked: {};
    };
}
export interface UpdateLocalAdminBlockedJSON {
    kind: "UpdateLocalAdminBlocked";
}
export declare class UpdateLocalAdminBlocked {
    static readonly discriminator = 29;
    static readonly kind = "UpdateLocalAdminBlocked";
    readonly discriminator = 29;
    readonly kind = "UpdateLocalAdminBlocked";
    toJSON(): UpdateLocalAdminBlockedJSON;
    toEncodable(): {
        UpdateLocalAdminBlocked: {};
    };
}
export interface DeprecatedUpdateCollateralIdAJSON {
    kind: "DeprecatedUpdateCollateralIdA";
}
export declare class DeprecatedUpdateCollateralIdA {
    static readonly discriminator = 30;
    static readonly kind = "DeprecatedUpdateCollateralIdA";
    readonly discriminator = 30;
    readonly kind = "DeprecatedUpdateCollateralIdA";
    toJSON(): DeprecatedUpdateCollateralIdAJSON;
    toEncodable(): {
        DeprecatedUpdateCollateralIdA: {};
    };
}
export interface DeprecatedUpdateCollateralIdBJSON {
    kind: "DeprecatedUpdateCollateralIdB";
}
export declare class DeprecatedUpdateCollateralIdB {
    static readonly discriminator = 31;
    static readonly kind = "DeprecatedUpdateCollateralIdB";
    readonly discriminator = 31;
    readonly kind = "DeprecatedUpdateCollateralIdB";
    toJSON(): DeprecatedUpdateCollateralIdBJSON;
    toEncodable(): {
        DeprecatedUpdateCollateralIdB: {};
    };
}
export interface UpdateFlashVaultSwapJSON {
    kind: "UpdateFlashVaultSwap";
}
export declare class UpdateFlashVaultSwap {
    static readonly discriminator = 32;
    static readonly kind = "UpdateFlashVaultSwap";
    readonly discriminator = 32;
    readonly kind = "UpdateFlashVaultSwap";
    toJSON(): UpdateFlashVaultSwapJSON;
    toEncodable(): {
        UpdateFlashVaultSwap: {};
    };
}
export interface AllowDepositWithoutInvestJSON {
    kind: "AllowDepositWithoutInvest";
}
export declare class AllowDepositWithoutInvest {
    static readonly discriminator = 33;
    static readonly kind = "AllowDepositWithoutInvest";
    readonly discriminator = 33;
    readonly kind = "AllowDepositWithoutInvest";
    toJSON(): AllowDepositWithoutInvestJSON;
    toEncodable(): {
        AllowDepositWithoutInvest: {};
    };
}
export interface UpdateSwapVaultMaxSlippageFromRefJSON {
    kind: "UpdateSwapVaultMaxSlippageFromRef";
}
export declare class UpdateSwapVaultMaxSlippageFromRef {
    static readonly discriminator = 34;
    static readonly kind = "UpdateSwapVaultMaxSlippageFromRef";
    readonly discriminator = 34;
    readonly kind = "UpdateSwapVaultMaxSlippageFromRef";
    toJSON(): UpdateSwapVaultMaxSlippageFromRefJSON;
    toEncodable(): {
        UpdateSwapVaultMaxSlippageFromRef: {};
    };
}
export interface ResetReferencePricesJSON {
    kind: "ResetReferencePrices";
}
export declare class ResetReferencePrices {
    static readonly discriminator = 35;
    static readonly kind = "ResetReferencePrices";
    readonly discriminator = 35;
    readonly kind = "ResetReferencePrices";
    toJSON(): ResetReferencePricesJSON;
    toEncodable(): {
        ResetReferencePrices: {};
    };
}
export interface UpdateStrategyCreationStateJSON {
    kind: "UpdateStrategyCreationState";
}
export declare class UpdateStrategyCreationState {
    static readonly discriminator = 36;
    static readonly kind = "UpdateStrategyCreationState";
    readonly discriminator = 36;
    readonly kind = "UpdateStrategyCreationState";
    toJSON(): UpdateStrategyCreationStateJSON;
    toEncodable(): {
        UpdateStrategyCreationState: {};
    };
}
export interface UpdateIsCommunityJSON {
    kind: "UpdateIsCommunity";
}
export declare class UpdateIsCommunity {
    static readonly discriminator = 37;
    static readonly kind = "UpdateIsCommunity";
    readonly discriminator = 37;
    readonly kind = "UpdateIsCommunity";
    toJSON(): UpdateIsCommunityJSON;
    toEncodable(): {
        UpdateIsCommunity: {};
    };
}
export interface UpdateRebalanceTypeJSON {
    kind: "UpdateRebalanceType";
}
export declare class UpdateRebalanceType {
    static readonly discriminator = 38;
    static readonly kind = "UpdateRebalanceType";
    readonly discriminator = 38;
    readonly kind = "UpdateRebalanceType";
    toJSON(): UpdateRebalanceTypeJSON;
    toEncodable(): {
        UpdateRebalanceType: {};
    };
}
export interface UpdateRebalanceParamsJSON {
    kind: "UpdateRebalanceParams";
}
export declare class UpdateRebalanceParams {
    static readonly discriminator = 39;
    static readonly kind = "UpdateRebalanceParams";
    readonly discriminator = 39;
    readonly kind = "UpdateRebalanceParams";
    toJSON(): UpdateRebalanceParamsJSON;
    toEncodable(): {
        UpdateRebalanceParams: {};
    };
}
export interface UpdateDepositMintingMethodJSON {
    kind: "UpdateDepositMintingMethod";
}
export declare class UpdateDepositMintingMethod {
    static readonly discriminator = 40;
    static readonly kind = "UpdateDepositMintingMethod";
    readonly discriminator = 40;
    readonly kind = "UpdateDepositMintingMethod";
    toJSON(): UpdateDepositMintingMethodJSON;
    toEncodable(): {
        UpdateDepositMintingMethod: {};
    };
}
export interface UpdateLookupTableJSON {
    kind: "UpdateLookupTable";
}
export declare class UpdateLookupTable {
    static readonly discriminator = 41;
    static readonly kind = "UpdateLookupTable";
    readonly discriminator = 41;
    readonly kind = "UpdateLookupTable";
    toJSON(): UpdateLookupTableJSON;
    toEncodable(): {
        UpdateLookupTable: {};
    };
}
export interface UpdateReferencePriceTypeJSON {
    kind: "UpdateReferencePriceType";
}
export declare class UpdateReferencePriceType {
    static readonly discriminator = 42;
    static readonly kind = "UpdateReferencePriceType";
    readonly discriminator = 42;
    readonly kind = "UpdateReferencePriceType";
    toJSON(): UpdateReferencePriceTypeJSON;
    toEncodable(): {
        UpdateReferencePriceType: {};
    };
}
export interface UpdateReward0AmountJSON {
    kind: "UpdateReward0Amount";
}
export declare class UpdateReward0Amount {
    static readonly discriminator = 43;
    static readonly kind = "UpdateReward0Amount";
    readonly discriminator = 43;
    readonly kind = "UpdateReward0Amount";
    toJSON(): UpdateReward0AmountJSON;
    toEncodable(): {
        UpdateReward0Amount: {};
    };
}
export interface UpdateReward1AmountJSON {
    kind: "UpdateReward1Amount";
}
export declare class UpdateReward1Amount {
    static readonly discriminator = 44;
    static readonly kind = "UpdateReward1Amount";
    readonly discriminator = 44;
    readonly kind = "UpdateReward1Amount";
    toJSON(): UpdateReward1AmountJSON;
    toEncodable(): {
        UpdateReward1Amount: {};
    };
}
export interface UpdateReward2AmountJSON {
    kind: "UpdateReward2Amount";
}
export declare class UpdateReward2Amount {
    static readonly discriminator = 45;
    static readonly kind = "UpdateReward2Amount";
    readonly discriminator = 45;
    readonly kind = "UpdateReward2Amount";
    toJSON(): UpdateReward2AmountJSON;
    toEncodable(): {
        UpdateReward2Amount: {};
    };
}
export interface UpdateFarmJSON {
    kind: "UpdateFarm";
}
export declare class UpdateFarm {
    static readonly discriminator = 46;
    static readonly kind = "UpdateFarm";
    readonly discriminator = 46;
    readonly kind = "UpdateFarm";
    toJSON(): UpdateFarmJSON;
    toEncodable(): {
        UpdateFarm: {};
    };
}
export interface UpdateRebalancesCapCapacityJSON {
    kind: "UpdateRebalancesCapCapacity";
}
export declare class UpdateRebalancesCapCapacity {
    static readonly discriminator = 47;
    static readonly kind = "UpdateRebalancesCapCapacity";
    readonly discriminator = 47;
    readonly kind = "UpdateRebalancesCapCapacity";
    toJSON(): UpdateRebalancesCapCapacityJSON;
    toEncodable(): {
        UpdateRebalancesCapCapacity: {};
    };
}
export interface UpdateRebalancesCapIntervalJSON {
    kind: "UpdateRebalancesCapInterval";
}
export declare class UpdateRebalancesCapInterval {
    static readonly discriminator = 48;
    static readonly kind = "UpdateRebalancesCapInterval";
    readonly discriminator = 48;
    readonly kind = "UpdateRebalancesCapInterval";
    toJSON(): UpdateRebalancesCapIntervalJSON;
    toEncodable(): {
        UpdateRebalancesCapInterval: {};
    };
}
export interface UpdateRebalancesCapCurrentTotalJSON {
    kind: "UpdateRebalancesCapCurrentTotal";
}
export declare class UpdateRebalancesCapCurrentTotal {
    static readonly discriminator = 49;
    static readonly kind = "UpdateRebalancesCapCurrentTotal";
    readonly discriminator = 49;
    readonly kind = "UpdateRebalancesCapCurrentTotal";
    toJSON(): UpdateRebalancesCapCurrentTotalJSON;
    toEncodable(): {
        UpdateRebalancesCapCurrentTotal: {};
    };
}
export interface UpdateSwapUnevenAuthorityJSON {
    kind: "UpdateSwapUnevenAuthority";
}
export declare class UpdateSwapUnevenAuthority {
    static readonly discriminator = 50;
    static readonly kind = "UpdateSwapUnevenAuthority";
    readonly discriminator = 50;
    readonly kind = "UpdateSwapUnevenAuthority";
    toJSON(): UpdateSwapUnevenAuthorityJSON;
    toEncodable(): {
        UpdateSwapUnevenAuthority: {};
    };
}
export interface UpdatePendingStrategyAdminJSON {
    kind: "UpdatePendingStrategyAdmin";
}
export declare class UpdatePendingStrategyAdmin {
    static readonly discriminator = 51;
    static readonly kind = "UpdatePendingStrategyAdmin";
    readonly discriminator = 51;
    readonly kind = "UpdatePendingStrategyAdmin";
    toJSON(): UpdatePendingStrategyAdminJSON;
    toEncodable(): {
        UpdatePendingStrategyAdmin: {};
    };
}
export declare function fromDecoded(obj: any): types.StrategyConfigOptionKind;
export declare function fromJSON(obj: types.StrategyConfigOptionJSON): types.StrategyConfigOptionKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=StrategyConfigOption.d.ts.map
import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface CollateralIdJSON {
    kind: "CollateralId";
}
export declare class CollateralId {
    static readonly discriminator = 0;
    static readonly kind = "CollateralId";
    readonly discriminator = 0;
    readonly kind = "CollateralId";
    toJSON(): CollateralIdJSON;
    toEncodable(): {
        CollateralId: {};
    };
}
export interface LowerHeuristicJSON {
    kind: "LowerHeuristic";
}
export declare class LowerHeuristic {
    static readonly discriminator = 1;
    static readonly kind = "LowerHeuristic";
    readonly discriminator = 1;
    readonly kind = "LowerHeuristic";
    toJSON(): LowerHeuristicJSON;
    toEncodable(): {
        LowerHeuristic: {};
    };
}
export interface UpperHeuristicJSON {
    kind: "UpperHeuristic";
}
export declare class UpperHeuristic {
    static readonly discriminator = 2;
    static readonly kind = "UpperHeuristic";
    readonly discriminator = 2;
    readonly kind = "UpperHeuristic";
    toJSON(): UpperHeuristicJSON;
    toEncodable(): {
        UpperHeuristic: {};
    };
}
export interface ExpHeuristicJSON {
    kind: "ExpHeuristic";
}
export declare class ExpHeuristic {
    static readonly discriminator = 3;
    static readonly kind = "ExpHeuristic";
    readonly discriminator = 3;
    readonly kind = "ExpHeuristic";
    toJSON(): ExpHeuristicJSON;
    toEncodable(): {
        ExpHeuristic: {};
    };
}
export interface TwapDivergenceJSON {
    kind: "TwapDivergence";
}
export declare class TwapDivergence {
    static readonly discriminator = 4;
    static readonly kind = "TwapDivergence";
    readonly discriminator = 4;
    readonly kind = "TwapDivergence";
    toJSON(): TwapDivergenceJSON;
    toEncodable(): {
        TwapDivergence: {};
    };
}
export interface UpdateScopeTwapJSON {
    kind: "UpdateScopeTwap";
}
export declare class UpdateScopeTwap {
    static readonly discriminator = 5;
    static readonly kind = "UpdateScopeTwap";
    readonly discriminator = 5;
    readonly kind = "UpdateScopeTwap";
    toJSON(): UpdateScopeTwapJSON;
    toEncodable(): {
        UpdateScopeTwap: {};
    };
}
export interface UpdateScopeChainJSON {
    kind: "UpdateScopeChain";
}
export declare class UpdateScopeChain {
    static readonly discriminator = 6;
    static readonly kind = "UpdateScopeChain";
    readonly discriminator = 6;
    readonly kind = "UpdateScopeChain";
    toJSON(): UpdateScopeChainJSON;
    toEncodable(): {
        UpdateScopeChain: {};
    };
}
export interface UpdateNameJSON {
    kind: "UpdateName";
}
export declare class UpdateName {
    static readonly discriminator = 7;
    static readonly kind = "UpdateName";
    readonly discriminator = 7;
    readonly kind = "UpdateName";
    toJSON(): UpdateNameJSON;
    toEncodable(): {
        UpdateName: {};
    };
}
export interface UpdatePriceMaxAgeJSON {
    kind: "UpdatePriceMaxAge";
}
export declare class UpdatePriceMaxAge {
    static readonly discriminator = 8;
    static readonly kind = "UpdatePriceMaxAge";
    readonly discriminator = 8;
    readonly kind = "UpdatePriceMaxAge";
    toJSON(): UpdatePriceMaxAgeJSON;
    toEncodable(): {
        UpdatePriceMaxAge: {};
    };
}
export interface UpdateTwapMaxAgeJSON {
    kind: "UpdateTwapMaxAge";
}
export declare class UpdateTwapMaxAge {
    static readonly discriminator = 9;
    static readonly kind = "UpdateTwapMaxAge";
    readonly discriminator = 9;
    readonly kind = "UpdateTwapMaxAge";
    toJSON(): UpdateTwapMaxAgeJSON;
    toEncodable(): {
        UpdateTwapMaxAge: {};
    };
}
export interface UpdateDisabledJSON {
    kind: "UpdateDisabled";
}
export declare class UpdateDisabled {
    static readonly discriminator = 10;
    static readonly kind = "UpdateDisabled";
    readonly discriminator = 10;
    readonly kind = "UpdateDisabled";
    toJSON(): UpdateDisabledJSON;
    toEncodable(): {
        UpdateDisabled: {};
    };
}
export interface UpdateStakingRateChainJSON {
    kind: "UpdateStakingRateChain";
}
export declare class UpdateStakingRateChain {
    static readonly discriminator = 11;
    static readonly kind = "UpdateStakingRateChain";
    readonly discriminator = 11;
    readonly kind = "UpdateStakingRateChain";
    toJSON(): UpdateStakingRateChainJSON;
    toEncodable(): {
        UpdateStakingRateChain: {};
    };
}
export interface UpdateMaxIgnorableAmountAsRewardJSON {
    kind: "UpdateMaxIgnorableAmountAsReward";
}
export declare class UpdateMaxIgnorableAmountAsReward {
    static readonly discriminator = 12;
    static readonly kind = "UpdateMaxIgnorableAmountAsReward";
    readonly discriminator = 12;
    readonly kind = "UpdateMaxIgnorableAmountAsReward";
    toJSON(): UpdateMaxIgnorableAmountAsRewardJSON;
    toEncodable(): {
        UpdateMaxIgnorableAmountAsReward: {};
    };
}
export declare function fromDecoded(obj: any): types.UpdateCollateralInfoModeKind;
export declare function fromJSON(obj: types.UpdateCollateralInfoModeJSON): types.UpdateCollateralInfoModeKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=UpdateCollateralInfoMode.d.ts.map
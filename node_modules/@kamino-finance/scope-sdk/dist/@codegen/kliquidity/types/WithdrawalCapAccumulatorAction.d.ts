import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface KeepAccumulatorJSON {
    kind: "KeepAccumulator";
}
export declare class KeepAccumulator {
    static readonly discriminator = 0;
    static readonly kind = "KeepAccumulator";
    readonly discriminator = 0;
    readonly kind = "KeepAccumulator";
    toJSON(): KeepAccumulatorJSON;
    toEncodable(): {
        KeepAccumulator: {};
    };
}
export interface ResetAccumulatorJSON {
    kind: "ResetAccumulator";
}
export declare class ResetAccumulator {
    static readonly discriminator = 1;
    static readonly kind = "ResetAccumulator";
    readonly discriminator = 1;
    readonly kind = "ResetAccumulator";
    toJSON(): ResetAccumulatorJSON;
    toEncodable(): {
        ResetAccumulator: {};
    };
}
export declare function fromDecoded(obj: any): types.WithdrawalCapAccumulatorActionKind;
export declare function fromJSON(obj: types.WithdrawalCapAccumulatorActionJSON): types.WithdrawalCapAccumulatorActionKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=WithdrawalCapAccumulatorAction.d.ts.map
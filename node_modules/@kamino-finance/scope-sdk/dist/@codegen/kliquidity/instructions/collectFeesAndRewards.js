"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.collectFeesAndRewards = collectFeesAndRewards;
/* eslint-disable @typescript-eslint/no-unused-vars */
const kit_1 = require("@solana/kit");
const programId_1 = require("../programId");
function collectFeesAndRewards(accounts, programAddress = programId_1.PROGRAM_ID) {
    const keys = [
        { address: accounts.user.address, role: 3, signer: accounts.user },
        { address: accounts.strategy, role: 1 },
        { address: accounts.globalConfig, role: 0 },
        { address: accounts.baseVaultAuthority, role: 1 },
        { address: accounts.pool, role: 1 },
        { address: accounts.tickArrayLower, role: 1 },
        { address: accounts.tickArrayUpper, role: 1 },
        { address: accounts.position, role: 1 },
        { address: accounts.raydiumProtocolPositionOrBaseVaultAuthority, role: 1 },
        { address: accounts.positionTokenAccount, role: 0 },
        { address: accounts.tokenAVault, role: 1 },
        { address: accounts.poolTokenVaultA, role: 1 },
        { address: accounts.tokenBVault, role: 1 },
        { address: accounts.poolTokenVaultB, role: 1 },
        { address: accounts.treasuryFeeTokenAVault, role: 1 },
        { address: accounts.treasuryFeeTokenBVault, role: 1 },
        { address: accounts.treasuryFeeVaultAuthority, role: 0 },
        { address: accounts.reward0Vault, role: 1 },
        { address: accounts.reward1Vault, role: 1 },
        { address: accounts.reward2Vault, role: 1 },
        { address: accounts.poolRewardVault0, role: 1 },
        { address: accounts.poolRewardVault1, role: 1 },
        { address: accounts.poolRewardVault2, role: 1 },
        { address: accounts.tokenAMint, role: 0 },
        { address: accounts.tokenBMint, role: 0 },
        { address: accounts.tokenATokenProgram, role: 0 },
        { address: accounts.tokenBTokenProgram, role: 0 },
        { address: accounts.memoProgram, role: 0 },
        { address: accounts.tokenProgram, role: 0 },
        { address: accounts.tokenProgram2022, role: 0 },
        { address: accounts.poolProgram, role: 0 },
        { address: accounts.instructionSysvarAccount, role: 0 },
        (0, kit_1.isSome)(accounts.eventAuthority)
            ? { address: accounts.eventAuthority.value, role: 0 }
            : { address: programAddress, role: 0 },
    ];
    const identifier = Buffer.from([113, 18, 75, 8, 182, 31, 105, 186]);
    const data = identifier;
    const ix = { accounts: keys, programAddress, data };
    return ix;
}
//# sourceMappingURL=collectFeesAndRewards.js.map
import { Address } from "@solana/kit";
import * as types from "../types";
export interface ListFields {
    account: Address;
    itemSize: number;
    count: number;
    newAccount: Address;
    copiedCount: number;
}
export interface ListJSON {
    account: string;
    itemSize: number;
    count: number;
    newAccount: string;
    copiedCount: number;
}
export declare class List {
    readonly account: Address;
    readonly itemSize: number;
    readonly count: number;
    readonly newAccount: Address;
    readonly copiedCount: number;
    constructor(fields: ListFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.List;
    static toEncodable(fields: ListFields): {
        account: Address;
        itemSize: number;
        count: number;
        newAccount: Address;
        copiedCount: number;
    };
    toJSON(): ListJSON;
    static fromJSON(obj: ListJSON): List;
    toEncodable(): {
        account: Address;
        itemSize: number;
        count: number;
        newAccount: Address;
        copiedCount: number;
    };
}
//# sourceMappingURL=List.d.ts.map
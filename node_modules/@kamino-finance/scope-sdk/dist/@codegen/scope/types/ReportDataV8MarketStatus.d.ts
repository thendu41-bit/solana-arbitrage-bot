import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface UnknownJSON {
    kind: "Unknown";
}
export declare class Unknown {
    static readonly discriminator = 0;
    static readonly kind = "Unknown";
    readonly discriminator = 0;
    readonly kind = "Unknown";
    toJSON(): UnknownJSON;
    toEncodable(): {
        Unknown: {};
    };
}
export interface ClosedJSON {
    kind: "Closed";
}
export declare class Closed {
    static readonly discriminator = 1;
    static readonly kind = "Closed";
    readonly discriminator = 1;
    readonly kind = "Closed";
    toJSON(): ClosedJSON;
    toEncodable(): {
        Closed: {};
    };
}
export interface OpenJSON {
    kind: "Open";
}
export declare class Open {
    static readonly discriminator = 2;
    static readonly kind = "Open";
    readonly discriminator = 2;
    readonly kind = "Open";
    toJSON(): OpenJSON;
    toEncodable(): {
        Open: {};
    };
}
export declare function fromDecoded(obj: any): types.ReportDataV8MarketStatusKind;
export declare function fromJSON(obj: types.ReportDataV8MarketStatusJSON): types.ReportDataV8MarketStatusKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=ReportDataV8MarketStatus.d.ts.map
import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface TokenAJSON {
    kind: "TokenA";
}
export declare class TokenA {
    static readonly discriminator = 0;
    static readonly kind = "TokenA";
    readonly discriminator = 0;
    readonly kind = "TokenA";
    toJSON(): TokenAJSON;
    toEncodable(): {
        TokenA: {};
    };
}
export interface TokenBJSON {
    kind: "TokenB";
}
export declare class TokenB {
    static readonly discriminator = 1;
    static readonly kind = "TokenB";
    readonly discriminator = 1;
    readonly kind = "TokenB";
    toJSON(): TokenBJSON;
    toEncodable(): {
        TokenB: {};
    };
}
export declare function fromDecoded(obj: any): types.TokenTypesKind;
export declare function fromJSON(obj: types.TokenTypesJSON): types.TokenTypesKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=TokenTypes.d.ts.map
import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface NameJSON {
    kind: "Name";
}
export declare class Name {
    static readonly discriminator = 0;
    static readonly kind = "Name";
    readonly discriminator = 0;
    readonly kind = "Name";
    toJSON(): NameJSON;
    toEncodable(): {
        Name: {};
    };
}
export interface MaxPriceAgeSlotsJSON {
    kind: "MaxPriceAgeSlots";
}
export declare class MaxPriceAgeSlots {
    static readonly discriminator = 1;
    static readonly kind = "MaxPriceAgeSlots";
    readonly discriminator = 1;
    readonly kind = "MaxPriceAgeSlots";
    toJSON(): MaxPriceAgeSlotsJSON;
    toEncodable(): {
        MaxPriceAgeSlots: {};
    };
}
export interface GroupIdsJSON {
    kind: "GroupIds";
}
export declare class GroupIds {
    static readonly discriminator = 2;
    static readonly kind = "GroupIds";
    readonly discriminator = 2;
    readonly kind = "GroupIds";
    toJSON(): GroupIdsJSON;
    toEncodable(): {
        GroupIds: {};
    };
}
export declare function fromDecoded(obj: any): types.UpdateTokenMetadataModeKind;
export declare function fromJSON(obj: types.UpdateTokenMetadataModeJSON): types.UpdateTokenMetadataModeKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=UpdateTokenMetadataMode.d.ts.map
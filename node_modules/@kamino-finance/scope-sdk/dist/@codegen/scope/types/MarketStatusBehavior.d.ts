import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface AllUpdatesJSON {
    kind: "AllUpdates";
}
export declare class AllUpdates {
    static readonly discriminator = 0;
    static readonly kind = "AllUpdates";
    readonly discriminator = 0;
    readonly kind = "AllUpdates";
    toJSON(): AllUpdatesJSON;
    toEncodable(): {
        AllUpdates: {};
    };
}
export interface OpenJSON {
    kind: "Open";
}
export declare class Open {
    static readonly discriminator = 1;
    static readonly kind = "Open";
    readonly discriminator = 1;
    readonly kind = "Open";
    toJSON(): OpenJSON;
    toEncodable(): {
        Open: {};
    };
}
export interface OpenAndPrePostJSON {
    kind: "OpenAndPrePost";
}
export declare class OpenAndPrePost {
    static readonly discriminator = 2;
    static readonly kind = "OpenAndPrePost";
    readonly discriminator = 2;
    readonly kind = "OpenAndPrePost";
    toJSON(): OpenAndPrePostJSON;
    toEncodable(): {
        OpenAndPrePost: {};
    };
}
export declare function fromDecoded(obj: any): types.MarketStatusBehaviorKind;
export declare function fromJSON(obj: types.MarketStatusBehaviorJSON): types.MarketStatusBehaviorKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=MarketStatusBehavior.d.ts.map
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type AccountMeta, type AccountSignerMeta, type Address, type FixedSizeCodec, type FixedSizeDecoder, type FixedSizeEncoder, type Instruction, type InstructionWithAccounts, type InstructionWithData, type ReadonlyUint8Array, type TransactionSigner, type WritableAccount, type WritableSignerAccount } from '@solana/kit';
import { TOKEN_2022_PROGRAM_ADDRESS } from '../programs';
export declare const UPDATE_RATE_INTEREST_BEARING_MINT_DISCRIMINATOR = 33;
export declare function getUpdateRateInterestBearingMintDiscriminatorBytes(): ReadonlyUint8Array;
export declare const UPDATE_RATE_INTEREST_BEARING_MINT_INTEREST_BEARING_MINT_DISCRIMINATOR = 1;
export declare function getUpdateRateInterestBearingMintInterestBearingMintDiscriminatorBytes(): ReadonlyUint8Array;
export type UpdateRateInterestBearingMintInstruction<TProgram extends string = typeof TOKEN_2022_PROGRAM_ADDRESS, TAccountMint extends string | AccountMeta<string> = string, TAccountRateAuthority extends string | AccountMeta<string> = string, TRemainingAccounts extends readonly AccountMeta<string>[] = []> = Instruction<TProgram> & InstructionWithData<ReadonlyUint8Array> & InstructionWithAccounts<[
    TAccountMint extends string ? WritableAccount<TAccountMint> : TAccountMint,
    TAccountRateAuthority extends string ? WritableAccount<TAccountRateAuthority> : TAccountRateAuthority,
    ...TRemainingAccounts
]>;
export type UpdateRateInterestBearingMintInstructionData = {
    discriminator: number;
    interestBearingMintDiscriminator: number;
    /** The interest rate to update. */
    rate: number;
};
export type UpdateRateInterestBearingMintInstructionDataArgs = {
    /** The interest rate to update. */
    rate: number;
};
export declare function getUpdateRateInterestBearingMintInstructionDataEncoder(): FixedSizeEncoder<UpdateRateInterestBearingMintInstructionDataArgs>;
export declare function getUpdateRateInterestBearingMintInstructionDataDecoder(): FixedSizeDecoder<UpdateRateInterestBearingMintInstructionData>;
export declare function getUpdateRateInterestBearingMintInstructionDataCodec(): FixedSizeCodec<UpdateRateInterestBearingMintInstructionDataArgs, UpdateRateInterestBearingMintInstructionData>;
export type UpdateRateInterestBearingMintInput<TAccountMint extends string = string, TAccountRateAuthority extends string = string> = {
    /** The mint. */
    mint: Address<TAccountMint>;
    /** The mint rate authority. */
    rateAuthority: Address<TAccountRateAuthority> | TransactionSigner<TAccountRateAuthority>;
    rate: UpdateRateInterestBearingMintInstructionDataArgs['rate'];
    multiSigners?: Array<TransactionSigner>;
};
export declare function getUpdateRateInterestBearingMintInstruction<TAccountMint extends string, TAccountRateAuthority extends string, TProgramAddress extends Address = typeof TOKEN_2022_PROGRAM_ADDRESS>(input: UpdateRateInterestBearingMintInput<TAccountMint, TAccountRateAuthority>, config?: {
    programAddress?: TProgramAddress;
}): UpdateRateInterestBearingMintInstruction<TProgramAddress, TAccountMint, (typeof input)['rateAuthority'] extends TransactionSigner<TAccountRateAuthority> ? WritableSignerAccount<TAccountRateAuthority> & AccountSignerMeta<TAccountRateAuthority> : TAccountRateAuthority>;
export type ParsedUpdateRateInterestBearingMintInstruction<TProgram extends string = typeof TOKEN_2022_PROGRAM_ADDRESS, TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[]> = {
    programAddress: Address<TProgram>;
    accounts: {
        /** The mint. */
        mint: TAccountMetas[0];
        /** The mint rate authority. */
        rateAuthority: TAccountMetas[1];
    };
    data: UpdateRateInterestBearingMintInstructionData;
};
export declare function parseUpdateRateInterestBearingMintInstruction<TProgram extends string, TAccountMetas extends readonly AccountMeta[]>(instruction: Instruction<TProgram> & InstructionWithAccounts<TAccountMetas> & InstructionWithData<ReadonlyUint8Array>): ParsedUpdateRateInterestBearingMintInstruction<TProgram, TAccountMetas>;
//# sourceMappingURL=updateRateInterestBearingMint.d.ts.map
/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type AccountMeta, type Address, type FixedSizeCodec, type FixedSizeDecoder, type FixedSizeEncoder, type Instruction, type InstructionWithAccounts, type InstructionWithData, type ReadonlyUint8Array, type WritableAccount } from '@solana/kit';
import { TOKEN_2022_PROGRAM_ADDRESS } from '../programs';
export declare const INITIALIZE_PERMANENT_DELEGATE_DISCRIMINATOR = 35;
export declare function getInitializePermanentDelegateDiscriminatorBytes(): ReadonlyUint8Array;
export type InitializePermanentDelegateInstruction<TProgram extends string = typeof TOKEN_2022_PROGRAM_ADDRESS, TAccountMint extends string | AccountMeta<string> = string, TRemainingAccounts extends readonly AccountMeta<string>[] = []> = Instruction<TProgram> & InstructionWithData<ReadonlyUint8Array> & InstructionWithAccounts<[
    TAccountMint extends string ? WritableAccount<TAccountMint> : TAccountMint,
    ...TRemainingAccounts
]>;
export type InitializePermanentDelegateInstructionData = {
    discriminator: number;
    /** Authority that may sign for `Transfer`s and `Burn`s on any account */
    delegate: Address;
};
export type InitializePermanentDelegateInstructionDataArgs = {
    /** Authority that may sign for `Transfer`s and `Burn`s on any account */
    delegate: Address;
};
export declare function getInitializePermanentDelegateInstructionDataEncoder(): FixedSizeEncoder<InitializePermanentDelegateInstructionDataArgs>;
export declare function getInitializePermanentDelegateInstructionDataDecoder(): FixedSizeDecoder<InitializePermanentDelegateInstructionData>;
export declare function getInitializePermanentDelegateInstructionDataCodec(): FixedSizeCodec<InitializePermanentDelegateInstructionDataArgs, InitializePermanentDelegateInstructionData>;
export type InitializePermanentDelegateInput<TAccountMint extends string = string> = {
    /** The mint to initialize. */
    mint: Address<TAccountMint>;
    delegate: InitializePermanentDelegateInstructionDataArgs['delegate'];
};
export declare function getInitializePermanentDelegateInstruction<TAccountMint extends string, TProgramAddress extends Address = typeof TOKEN_2022_PROGRAM_ADDRESS>(input: InitializePermanentDelegateInput<TAccountMint>, config?: {
    programAddress?: TProgramAddress;
}): InitializePermanentDelegateInstruction<TProgramAddress, TAccountMint>;
export type ParsedInitializePermanentDelegateInstruction<TProgram extends string = typeof TOKEN_2022_PROGRAM_ADDRESS, TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[]> = {
    programAddress: Address<TProgram>;
    accounts: {
        /** The mint to initialize. */
        mint: TAccountMetas[0];
    };
    data: InitializePermanentDelegateInstructionData;
};
export declare function parseInitializePermanentDelegateInstruction<TProgram extends string, TAccountMetas extends readonly AccountMeta[]>(instruction: Instruction<TProgram> & InstructionWithAccounts<TAccountMetas> & InstructionWithData<ReadonlyUint8Array>): ParsedInitializePermanentDelegateInstruction<TProgram, TAccountMetas>;
//# sourceMappingURL=initializePermanentDelegate.d.ts.map
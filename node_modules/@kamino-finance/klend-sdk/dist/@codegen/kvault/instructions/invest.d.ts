import { Address, AccountMeta, AccountSignerMeta, Instruction, TransactionSigner } from "@solana/kit";
export declare const DISCRIMINATOR: Buffer<ArrayBuffer>;
export interface InvestAccounts {
    payer: TransactionSigner;
    payerTokenAccount: Address;
    vaultState: Address;
    tokenVault: Address;
    tokenMint: Address;
    baseVaultAuthority: Address;
    ctokenVault: Address;
    /** CPI accounts */
    reserve: Address;
    lendingMarket: Address;
    lendingMarketAuthority: Address;
    reserveLiquiditySupply: Address;
    reserveCollateralMint: Address;
    klendProgram: Address;
    reserveCollateralTokenProgram: Address;
    tokenProgram: Address;
    instructionSysvarAccount: Address;
}
export declare function invest(accounts: InvestAccounts, remainingAccounts?: Array<AccountMeta | AccountSignerMeta>, programAddress?: Address): Instruction<string, readonly (AccountMeta<string> | import("@solana/kit").AccountLookupMeta<string, string>)[]>;
//# sourceMappingURL=invest.d.ts.map
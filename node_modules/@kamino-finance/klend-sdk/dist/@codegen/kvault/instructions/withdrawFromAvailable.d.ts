import { Address, AccountMeta, AccountSignerMeta, Instruction, TransactionSigner } from "@solana/kit";
import BN from "bn.js";
export declare const DISCRIMINATOR: Buffer<ArrayBuffer>;
export interface WithdrawFromAvailableArgs {
    sharesAmount: BN;
}
export interface WithdrawFromAvailableAccounts {
    user: TransactionSigner;
    vaultState: Address;
    tokenVault: Address;
    baseVaultAuthority: Address;
    userTokenAta: Address;
    tokenMint: Address;
    userSharesAta: Address;
    sharesMint: Address;
    tokenProgram: Address;
    sharesTokenProgram: Address;
    klendProgram: Address;
    eventAuthority: Address;
    program: Address;
}
export declare const layout: import("buffer-layout").Layout<WithdrawFromAvailableArgs>;
export declare function withdrawFromAvailable(args: WithdrawFromAvailableArgs, accounts: WithdrawFromAvailableAccounts, remainingAccounts?: Array<AccountMeta | AccountSignerMeta>, programAddress?: Address): Instruction<string, readonly (AccountMeta<string> | import("@solana/kit").AccountLookupMeta<string, string>)[]>;
//# sourceMappingURL=withdrawFromAvailable.d.ts.map
import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface RegularJSON {
    kind: "Regular";
}
export declare class Regular {
    static readonly discriminator = 0;
    static readonly kind = "Regular";
    readonly discriminator = 0;
    readonly kind = "Regular";
    toJSON(): RegularJSON;
    toEncodable(): {
        Regular: {};
    };
}
export interface IsolatedCollateralJSON {
    kind: "IsolatedCollateral";
}
export declare class IsolatedCollateral {
    static readonly discriminator = 1;
    static readonly kind = "IsolatedCollateral";
    readonly discriminator = 1;
    readonly kind = "IsolatedCollateral";
    toJSON(): IsolatedCollateralJSON;
    toEncodable(): {
        IsolatedCollateral: {};
    };
}
export interface IsolatedDebtJSON {
    kind: "IsolatedDebt";
}
export declare class IsolatedDebt {
    static readonly discriminator = 2;
    static readonly kind = "IsolatedDebt";
    readonly discriminator = 2;
    readonly kind = "IsolatedDebt";
    toJSON(): IsolatedDebtJSON;
    toEncodable(): {
        IsolatedDebt: {};
    };
}
export declare function fromDecoded(obj: any): types.AssetTierKind;
export declare function fromJSON(obj: types.AssetTierJSON): types.AssetTierKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=AssetTier.d.ts.map
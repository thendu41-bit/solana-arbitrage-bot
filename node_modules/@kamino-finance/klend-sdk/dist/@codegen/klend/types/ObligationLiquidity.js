"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObligationLiquidity = void 0;
const kit_1 = require("@solana/kit"); // eslint-disable-line @typescript-eslint/no-unused-vars
const bn_js_1 = __importDefault(require("bn.js")); // eslint-disable-line @typescript-eslint/no-unused-vars
const types = __importStar(require("../types")); // eslint-disable-line @typescript-eslint/no-unused-vars
const borsh = __importStar(require("@coral-xyz/borsh"));
const utils_1 = require("../utils");
/** Obligation liquidity state */
class ObligationLiquidity {
    /** Reserve liquidity is borrowed from */
    borrowReserve;
    /** Borrow rate used for calculating interest (big scaled fraction) */
    cumulativeBorrowRateBsf;
    padding;
    /** Amount of liquidity borrowed plus interest (scaled fraction) */
    borrowedAmountSf;
    /** Liquidity market value in quote currency (scaled fraction) */
    marketValueSf;
    /** Risk adjusted liquidity market value in quote currency - DEBUG ONLY - use market_value instead */
    borrowFactorAdjustedMarketValueSf;
    /** Amount of liquidity borrowed outside of an elevation group */
    borrowedAmountOutsideElevationGroups;
    padding2;
    constructor(fields) {
        this.borrowReserve = fields.borrowReserve;
        this.cumulativeBorrowRateBsf = new types.BigFractionBytes({
            ...fields.cumulativeBorrowRateBsf,
        });
        this.padding = fields.padding;
        this.borrowedAmountSf = fields.borrowedAmountSf;
        this.marketValueSf = fields.marketValueSf;
        this.borrowFactorAdjustedMarketValueSf =
            fields.borrowFactorAdjustedMarketValueSf;
        this.borrowedAmountOutsideElevationGroups =
            fields.borrowedAmountOutsideElevationGroups;
        this.padding2 = fields.padding2;
    }
    static layout(property) {
        return borsh.struct([
            (0, utils_1.borshAddress)("borrowReserve"),
            types.BigFractionBytes.layout("cumulativeBorrowRateBsf"),
            borsh.u64("padding"),
            borsh.u128("borrowedAmountSf"),
            borsh.u128("marketValueSf"),
            borsh.u128("borrowFactorAdjustedMarketValueSf"),
            borsh.u64("borrowedAmountOutsideElevationGroups"),
            borsh.array(borsh.u64(), 7, "padding2"),
        ], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new ObligationLiquidity({
            borrowReserve: obj.borrowReserve,
            cumulativeBorrowRateBsf: types.BigFractionBytes.fromDecoded(obj.cumulativeBorrowRateBsf),
            padding: obj.padding,
            borrowedAmountSf: obj.borrowedAmountSf,
            marketValueSf: obj.marketValueSf,
            borrowFactorAdjustedMarketValueSf: obj.borrowFactorAdjustedMarketValueSf,
            borrowedAmountOutsideElevationGroups: obj.borrowedAmountOutsideElevationGroups,
            padding2: obj.padding2,
        });
    }
    static toEncodable(fields) {
        return {
            borrowReserve: fields.borrowReserve,
            cumulativeBorrowRateBsf: types.BigFractionBytes.toEncodable(fields.cumulativeBorrowRateBsf),
            padding: fields.padding,
            borrowedAmountSf: fields.borrowedAmountSf,
            marketValueSf: fields.marketValueSf,
            borrowFactorAdjustedMarketValueSf: fields.borrowFactorAdjustedMarketValueSf,
            borrowedAmountOutsideElevationGroups: fields.borrowedAmountOutsideElevationGroups,
            padding2: fields.padding2,
        };
    }
    toJSON() {
        return {
            borrowReserve: this.borrowReserve,
            cumulativeBorrowRateBsf: this.cumulativeBorrowRateBsf.toJSON(),
            padding: this.padding.toString(),
            borrowedAmountSf: this.borrowedAmountSf.toString(),
            marketValueSf: this.marketValueSf.toString(),
            borrowFactorAdjustedMarketValueSf: this.borrowFactorAdjustedMarketValueSf.toString(),
            borrowedAmountOutsideElevationGroups: this.borrowedAmountOutsideElevationGroups.toString(),
            padding2: this.padding2.map((item) => item.toString()),
        };
    }
    static fromJSON(obj) {
        return new ObligationLiquidity({
            borrowReserve: (0, kit_1.address)(obj.borrowReserve),
            cumulativeBorrowRateBsf: types.BigFractionBytes.fromJSON(obj.cumulativeBorrowRateBsf),
            padding: new bn_js_1.default(obj.padding),
            borrowedAmountSf: new bn_js_1.default(obj.borrowedAmountSf),
            marketValueSf: new bn_js_1.default(obj.marketValueSf),
            borrowFactorAdjustedMarketValueSf: new bn_js_1.default(obj.borrowFactorAdjustedMarketValueSf),
            borrowedAmountOutsideElevationGroups: new bn_js_1.default(obj.borrowedAmountOutsideElevationGroups),
            padding2: obj.padding2.map((item) => new bn_js_1.default(item)),
        });
    }
    toEncodable() {
        return ObligationLiquidity.toEncodable(this);
    }
}
exports.ObligationLiquidity = ObligationLiquidity;
//# sourceMappingURL=ObligationLiquidity.js.map
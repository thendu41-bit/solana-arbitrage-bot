"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateObligationOrderCreationEnabled = exports.UpdateImmutableFlag = exports.UpdateObligationOrderExecutionEnabled = exports.UpdateInitialDepositAmount = exports.UpdateIndividualAutodeleverageMarginCallPeriodSecs = exports.UpdateName = exports.UpdatePaddingFields = exports.UpdateMinValueBfSkipPriorityLiqCheck = exports.UpdateMinValueLtvSkipPriorityLiqCheck = exports.UpdateMinNetValueObligationPostAction = exports.UpdateBorrowingDisabled = exports.UpdateAutodeleverageEnabled = exports.UpdatePriceRefreshTriggerToMaxAgePct = exports.DeprecatedUpdateMultiplierPoints = exports.UpdateReferralFeeBps = exports.UpdateElevationGroup = exports.UpdateInsolvencyRiskLtv = exports.UpdateMinFullLiquidationThreshold = exports.UpdateRiskCouncil = exports.UpdateGlobalAllowedBorrow = exports.DeprecatedUpdateGlobalUnhealthyBorrow = exports.UpdateLiquidationMaxValue = exports.UpdateLiquidationCloseFactor = exports.UpdateEmergencyMode = exports.UpdateOwner = void 0;
exports.fromDecoded = fromDecoded;
exports.fromJSON = fromJSON;
exports.layout = layout;
const borsh = __importStar(require("@coral-xyz/borsh"));
class UpdateOwner {
    static discriminator = 0;
    static kind = "UpdateOwner";
    discriminator = 0;
    kind = "UpdateOwner";
    toJSON() {
        return {
            kind: "UpdateOwner",
        };
    }
    toEncodable() {
        return {
            UpdateOwner: {},
        };
    }
}
exports.UpdateOwner = UpdateOwner;
class UpdateEmergencyMode {
    static discriminator = 1;
    static kind = "UpdateEmergencyMode";
    discriminator = 1;
    kind = "UpdateEmergencyMode";
    toJSON() {
        return {
            kind: "UpdateEmergencyMode",
        };
    }
    toEncodable() {
        return {
            UpdateEmergencyMode: {},
        };
    }
}
exports.UpdateEmergencyMode = UpdateEmergencyMode;
class UpdateLiquidationCloseFactor {
    static discriminator = 2;
    static kind = "UpdateLiquidationCloseFactor";
    discriminator = 2;
    kind = "UpdateLiquidationCloseFactor";
    toJSON() {
        return {
            kind: "UpdateLiquidationCloseFactor",
        };
    }
    toEncodable() {
        return {
            UpdateLiquidationCloseFactor: {},
        };
    }
}
exports.UpdateLiquidationCloseFactor = UpdateLiquidationCloseFactor;
class UpdateLiquidationMaxValue {
    static discriminator = 3;
    static kind = "UpdateLiquidationMaxValue";
    discriminator = 3;
    kind = "UpdateLiquidationMaxValue";
    toJSON() {
        return {
            kind: "UpdateLiquidationMaxValue",
        };
    }
    toEncodable() {
        return {
            UpdateLiquidationMaxValue: {},
        };
    }
}
exports.UpdateLiquidationMaxValue = UpdateLiquidationMaxValue;
class DeprecatedUpdateGlobalUnhealthyBorrow {
    static discriminator = 4;
    static kind = "DeprecatedUpdateGlobalUnhealthyBorrow";
    discriminator = 4;
    kind = "DeprecatedUpdateGlobalUnhealthyBorrow";
    toJSON() {
        return {
            kind: "DeprecatedUpdateGlobalUnhealthyBorrow",
        };
    }
    toEncodable() {
        return {
            DeprecatedUpdateGlobalUnhealthyBorrow: {},
        };
    }
}
exports.DeprecatedUpdateGlobalUnhealthyBorrow = DeprecatedUpdateGlobalUnhealthyBorrow;
class UpdateGlobalAllowedBorrow {
    static discriminator = 5;
    static kind = "UpdateGlobalAllowedBorrow";
    discriminator = 5;
    kind = "UpdateGlobalAllowedBorrow";
    toJSON() {
        return {
            kind: "UpdateGlobalAllowedBorrow",
        };
    }
    toEncodable() {
        return {
            UpdateGlobalAllowedBorrow: {},
        };
    }
}
exports.UpdateGlobalAllowedBorrow = UpdateGlobalAllowedBorrow;
class UpdateRiskCouncil {
    static discriminator = 6;
    static kind = "UpdateRiskCouncil";
    discriminator = 6;
    kind = "UpdateRiskCouncil";
    toJSON() {
        return {
            kind: "UpdateRiskCouncil",
        };
    }
    toEncodable() {
        return {
            UpdateRiskCouncil: {},
        };
    }
}
exports.UpdateRiskCouncil = UpdateRiskCouncil;
class UpdateMinFullLiquidationThreshold {
    static discriminator = 7;
    static kind = "UpdateMinFullLiquidationThreshold";
    discriminator = 7;
    kind = "UpdateMinFullLiquidationThreshold";
    toJSON() {
        return {
            kind: "UpdateMinFullLiquidationThreshold",
        };
    }
    toEncodable() {
        return {
            UpdateMinFullLiquidationThreshold: {},
        };
    }
}
exports.UpdateMinFullLiquidationThreshold = UpdateMinFullLiquidationThreshold;
class UpdateInsolvencyRiskLtv {
    static discriminator = 8;
    static kind = "UpdateInsolvencyRiskLtv";
    discriminator = 8;
    kind = "UpdateInsolvencyRiskLtv";
    toJSON() {
        return {
            kind: "UpdateInsolvencyRiskLtv",
        };
    }
    toEncodable() {
        return {
            UpdateInsolvencyRiskLtv: {},
        };
    }
}
exports.UpdateInsolvencyRiskLtv = UpdateInsolvencyRiskLtv;
class UpdateElevationGroup {
    static discriminator = 9;
    static kind = "UpdateElevationGroup";
    discriminator = 9;
    kind = "UpdateElevationGroup";
    toJSON() {
        return {
            kind: "UpdateElevationGroup",
        };
    }
    toEncodable() {
        return {
            UpdateElevationGroup: {},
        };
    }
}
exports.UpdateElevationGroup = UpdateElevationGroup;
class UpdateReferralFeeBps {
    static discriminator = 10;
    static kind = "UpdateReferralFeeBps";
    discriminator = 10;
    kind = "UpdateReferralFeeBps";
    toJSON() {
        return {
            kind: "UpdateReferralFeeBps",
        };
    }
    toEncodable() {
        return {
            UpdateReferralFeeBps: {},
        };
    }
}
exports.UpdateReferralFeeBps = UpdateReferralFeeBps;
class DeprecatedUpdateMultiplierPoints {
    static discriminator = 11;
    static kind = "DeprecatedUpdateMultiplierPoints";
    discriminator = 11;
    kind = "DeprecatedUpdateMultiplierPoints";
    toJSON() {
        return {
            kind: "DeprecatedUpdateMultiplierPoints",
        };
    }
    toEncodable() {
        return {
            DeprecatedUpdateMultiplierPoints: {},
        };
    }
}
exports.DeprecatedUpdateMultiplierPoints = DeprecatedUpdateMultiplierPoints;
class UpdatePriceRefreshTriggerToMaxAgePct {
    static discriminator = 12;
    static kind = "UpdatePriceRefreshTriggerToMaxAgePct";
    discriminator = 12;
    kind = "UpdatePriceRefreshTriggerToMaxAgePct";
    toJSON() {
        return {
            kind: "UpdatePriceRefreshTriggerToMaxAgePct",
        };
    }
    toEncodable() {
        return {
            UpdatePriceRefreshTriggerToMaxAgePct: {},
        };
    }
}
exports.UpdatePriceRefreshTriggerToMaxAgePct = UpdatePriceRefreshTriggerToMaxAgePct;
class UpdateAutodeleverageEnabled {
    static discriminator = 13;
    static kind = "UpdateAutodeleverageEnabled";
    discriminator = 13;
    kind = "UpdateAutodeleverageEnabled";
    toJSON() {
        return {
            kind: "UpdateAutodeleverageEnabled",
        };
    }
    toEncodable() {
        return {
            UpdateAutodeleverageEnabled: {},
        };
    }
}
exports.UpdateAutodeleverageEnabled = UpdateAutodeleverageEnabled;
class UpdateBorrowingDisabled {
    static discriminator = 14;
    static kind = "UpdateBorrowingDisabled";
    discriminator = 14;
    kind = "UpdateBorrowingDisabled";
    toJSON() {
        return {
            kind: "UpdateBorrowingDisabled",
        };
    }
    toEncodable() {
        return {
            UpdateBorrowingDisabled: {},
        };
    }
}
exports.UpdateBorrowingDisabled = UpdateBorrowingDisabled;
class UpdateMinNetValueObligationPostAction {
    static discriminator = 15;
    static kind = "UpdateMinNetValueObligationPostAction";
    discriminator = 15;
    kind = "UpdateMinNetValueObligationPostAction";
    toJSON() {
        return {
            kind: "UpdateMinNetValueObligationPostAction",
        };
    }
    toEncodable() {
        return {
            UpdateMinNetValueObligationPostAction: {},
        };
    }
}
exports.UpdateMinNetValueObligationPostAction = UpdateMinNetValueObligationPostAction;
class UpdateMinValueLtvSkipPriorityLiqCheck {
    static discriminator = 16;
    static kind = "UpdateMinValueLtvSkipPriorityLiqCheck";
    discriminator = 16;
    kind = "UpdateMinValueLtvSkipPriorityLiqCheck";
    toJSON() {
        return {
            kind: "UpdateMinValueLtvSkipPriorityLiqCheck",
        };
    }
    toEncodable() {
        return {
            UpdateMinValueLtvSkipPriorityLiqCheck: {},
        };
    }
}
exports.UpdateMinValueLtvSkipPriorityLiqCheck = UpdateMinValueLtvSkipPriorityLiqCheck;
class UpdateMinValueBfSkipPriorityLiqCheck {
    static discriminator = 17;
    static kind = "UpdateMinValueBfSkipPriorityLiqCheck";
    discriminator = 17;
    kind = "UpdateMinValueBfSkipPriorityLiqCheck";
    toJSON() {
        return {
            kind: "UpdateMinValueBfSkipPriorityLiqCheck",
        };
    }
    toEncodable() {
        return {
            UpdateMinValueBfSkipPriorityLiqCheck: {},
        };
    }
}
exports.UpdateMinValueBfSkipPriorityLiqCheck = UpdateMinValueBfSkipPriorityLiqCheck;
class UpdatePaddingFields {
    static discriminator = 18;
    static kind = "UpdatePaddingFields";
    discriminator = 18;
    kind = "UpdatePaddingFields";
    toJSON() {
        return {
            kind: "UpdatePaddingFields",
        };
    }
    toEncodable() {
        return {
            UpdatePaddingFields: {},
        };
    }
}
exports.UpdatePaddingFields = UpdatePaddingFields;
class UpdateName {
    static discriminator = 19;
    static kind = "UpdateName";
    discriminator = 19;
    kind = "UpdateName";
    toJSON() {
        return {
            kind: "UpdateName",
        };
    }
    toEncodable() {
        return {
            UpdateName: {},
        };
    }
}
exports.UpdateName = UpdateName;
class UpdateIndividualAutodeleverageMarginCallPeriodSecs {
    static discriminator = 20;
    static kind = "UpdateIndividualAutodeleverageMarginCallPeriodSecs";
    discriminator = 20;
    kind = "UpdateIndividualAutodeleverageMarginCallPeriodSecs";
    toJSON() {
        return {
            kind: "UpdateIndividualAutodeleverageMarginCallPeriodSecs",
        };
    }
    toEncodable() {
        return {
            UpdateIndividualAutodeleverageMarginCallPeriodSecs: {},
        };
    }
}
exports.UpdateIndividualAutodeleverageMarginCallPeriodSecs = UpdateIndividualAutodeleverageMarginCallPeriodSecs;
class UpdateInitialDepositAmount {
    static discriminator = 21;
    static kind = "UpdateInitialDepositAmount";
    discriminator = 21;
    kind = "UpdateInitialDepositAmount";
    toJSON() {
        return {
            kind: "UpdateInitialDepositAmount",
        };
    }
    toEncodable() {
        return {
            UpdateInitialDepositAmount: {},
        };
    }
}
exports.UpdateInitialDepositAmount = UpdateInitialDepositAmount;
class UpdateObligationOrderExecutionEnabled {
    static discriminator = 22;
    static kind = "UpdateObligationOrderExecutionEnabled";
    discriminator = 22;
    kind = "UpdateObligationOrderExecutionEnabled";
    toJSON() {
        return {
            kind: "UpdateObligationOrderExecutionEnabled",
        };
    }
    toEncodable() {
        return {
            UpdateObligationOrderExecutionEnabled: {},
        };
    }
}
exports.UpdateObligationOrderExecutionEnabled = UpdateObligationOrderExecutionEnabled;
class UpdateImmutableFlag {
    static discriminator = 23;
    static kind = "UpdateImmutableFlag";
    discriminator = 23;
    kind = "UpdateImmutableFlag";
    toJSON() {
        return {
            kind: "UpdateImmutableFlag",
        };
    }
    toEncodable() {
        return {
            UpdateImmutableFlag: {},
        };
    }
}
exports.UpdateImmutableFlag = UpdateImmutableFlag;
class UpdateObligationOrderCreationEnabled {
    static discriminator = 24;
    static kind = "UpdateObligationOrderCreationEnabled";
    discriminator = 24;
    kind = "UpdateObligationOrderCreationEnabled";
    toJSON() {
        return {
            kind: "UpdateObligationOrderCreationEnabled",
        };
    }
    toEncodable() {
        return {
            UpdateObligationOrderCreationEnabled: {},
        };
    }
}
exports.UpdateObligationOrderCreationEnabled = UpdateObligationOrderCreationEnabled;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function fromDecoded(obj) {
    if (typeof obj !== "object") {
        throw new Error("Invalid enum object");
    }
    if ("UpdateOwner" in obj) {
        return new UpdateOwner();
    }
    if ("UpdateEmergencyMode" in obj) {
        return new UpdateEmergencyMode();
    }
    if ("UpdateLiquidationCloseFactor" in obj) {
        return new UpdateLiquidationCloseFactor();
    }
    if ("UpdateLiquidationMaxValue" in obj) {
        return new UpdateLiquidationMaxValue();
    }
    if ("DeprecatedUpdateGlobalUnhealthyBorrow" in obj) {
        return new DeprecatedUpdateGlobalUnhealthyBorrow();
    }
    if ("UpdateGlobalAllowedBorrow" in obj) {
        return new UpdateGlobalAllowedBorrow();
    }
    if ("UpdateRiskCouncil" in obj) {
        return new UpdateRiskCouncil();
    }
    if ("UpdateMinFullLiquidationThreshold" in obj) {
        return new UpdateMinFullLiquidationThreshold();
    }
    if ("UpdateInsolvencyRiskLtv" in obj) {
        return new UpdateInsolvencyRiskLtv();
    }
    if ("UpdateElevationGroup" in obj) {
        return new UpdateElevationGroup();
    }
    if ("UpdateReferralFeeBps" in obj) {
        return new UpdateReferralFeeBps();
    }
    if ("DeprecatedUpdateMultiplierPoints" in obj) {
        return new DeprecatedUpdateMultiplierPoints();
    }
    if ("UpdatePriceRefreshTriggerToMaxAgePct" in obj) {
        return new UpdatePriceRefreshTriggerToMaxAgePct();
    }
    if ("UpdateAutodeleverageEnabled" in obj) {
        return new UpdateAutodeleverageEnabled();
    }
    if ("UpdateBorrowingDisabled" in obj) {
        return new UpdateBorrowingDisabled();
    }
    if ("UpdateMinNetValueObligationPostAction" in obj) {
        return new UpdateMinNetValueObligationPostAction();
    }
    if ("UpdateMinValueLtvSkipPriorityLiqCheck" in obj) {
        return new UpdateMinValueLtvSkipPriorityLiqCheck();
    }
    if ("UpdateMinValueBfSkipPriorityLiqCheck" in obj) {
        return new UpdateMinValueBfSkipPriorityLiqCheck();
    }
    if ("UpdatePaddingFields" in obj) {
        return new UpdatePaddingFields();
    }
    if ("UpdateName" in obj) {
        return new UpdateName();
    }
    if ("UpdateIndividualAutodeleverageMarginCallPeriodSecs" in obj) {
        return new UpdateIndividualAutodeleverageMarginCallPeriodSecs();
    }
    if ("UpdateInitialDepositAmount" in obj) {
        return new UpdateInitialDepositAmount();
    }
    if ("UpdateObligationOrderExecutionEnabled" in obj) {
        return new UpdateObligationOrderExecutionEnabled();
    }
    if ("UpdateImmutableFlag" in obj) {
        return new UpdateImmutableFlag();
    }
    if ("UpdateObligationOrderCreationEnabled" in obj) {
        return new UpdateObligationOrderCreationEnabled();
    }
    throw new Error("Invalid enum object");
}
function fromJSON(obj) {
    switch (obj.kind) {
        case "UpdateOwner": {
            return new UpdateOwner();
        }
        case "UpdateEmergencyMode": {
            return new UpdateEmergencyMode();
        }
        case "UpdateLiquidationCloseFactor": {
            return new UpdateLiquidationCloseFactor();
        }
        case "UpdateLiquidationMaxValue": {
            return new UpdateLiquidationMaxValue();
        }
        case "DeprecatedUpdateGlobalUnhealthyBorrow": {
            return new DeprecatedUpdateGlobalUnhealthyBorrow();
        }
        case "UpdateGlobalAllowedBorrow": {
            return new UpdateGlobalAllowedBorrow();
        }
        case "UpdateRiskCouncil": {
            return new UpdateRiskCouncil();
        }
        case "UpdateMinFullLiquidationThreshold": {
            return new UpdateMinFullLiquidationThreshold();
        }
        case "UpdateInsolvencyRiskLtv": {
            return new UpdateInsolvencyRiskLtv();
        }
        case "UpdateElevationGroup": {
            return new UpdateElevationGroup();
        }
        case "UpdateReferralFeeBps": {
            return new UpdateReferralFeeBps();
        }
        case "DeprecatedUpdateMultiplierPoints": {
            return new DeprecatedUpdateMultiplierPoints();
        }
        case "UpdatePriceRefreshTriggerToMaxAgePct": {
            return new UpdatePriceRefreshTriggerToMaxAgePct();
        }
        case "UpdateAutodeleverageEnabled": {
            return new UpdateAutodeleverageEnabled();
        }
        case "UpdateBorrowingDisabled": {
            return new UpdateBorrowingDisabled();
        }
        case "UpdateMinNetValueObligationPostAction": {
            return new UpdateMinNetValueObligationPostAction();
        }
        case "UpdateMinValueLtvSkipPriorityLiqCheck": {
            return new UpdateMinValueLtvSkipPriorityLiqCheck();
        }
        case "UpdateMinValueBfSkipPriorityLiqCheck": {
            return new UpdateMinValueBfSkipPriorityLiqCheck();
        }
        case "UpdatePaddingFields": {
            return new UpdatePaddingFields();
        }
        case "UpdateName": {
            return new UpdateName();
        }
        case "UpdateIndividualAutodeleverageMarginCallPeriodSecs": {
            return new UpdateIndividualAutodeleverageMarginCallPeriodSecs();
        }
        case "UpdateInitialDepositAmount": {
            return new UpdateInitialDepositAmount();
        }
        case "UpdateObligationOrderExecutionEnabled": {
            return new UpdateObligationOrderExecutionEnabled();
        }
        case "UpdateImmutableFlag": {
            return new UpdateImmutableFlag();
        }
        case "UpdateObligationOrderCreationEnabled": {
            return new UpdateObligationOrderCreationEnabled();
        }
    }
}
function layout(property) {
    const ret = borsh.rustEnum([
        borsh.struct([], "UpdateOwner"),
        borsh.struct([], "UpdateEmergencyMode"),
        borsh.struct([], "UpdateLiquidationCloseFactor"),
        borsh.struct([], "UpdateLiquidationMaxValue"),
        borsh.struct([], "DeprecatedUpdateGlobalUnhealthyBorrow"),
        borsh.struct([], "UpdateGlobalAllowedBorrow"),
        borsh.struct([], "UpdateRiskCouncil"),
        borsh.struct([], "UpdateMinFullLiquidationThreshold"),
        borsh.struct([], "UpdateInsolvencyRiskLtv"),
        borsh.struct([], "UpdateElevationGroup"),
        borsh.struct([], "UpdateReferralFeeBps"),
        borsh.struct([], "DeprecatedUpdateMultiplierPoints"),
        borsh.struct([], "UpdatePriceRefreshTriggerToMaxAgePct"),
        borsh.struct([], "UpdateAutodeleverageEnabled"),
        borsh.struct([], "UpdateBorrowingDisabled"),
        borsh.struct([], "UpdateMinNetValueObligationPostAction"),
        borsh.struct([], "UpdateMinValueLtvSkipPriorityLiqCheck"),
        borsh.struct([], "UpdateMinValueBfSkipPriorityLiqCheck"),
        borsh.struct([], "UpdatePaddingFields"),
        borsh.struct([], "UpdateName"),
        borsh.struct([], "UpdateIndividualAutodeleverageMarginCallPeriodSecs"),
        borsh.struct([], "UpdateInitialDepositAmount"),
        borsh.struct([], "UpdateObligationOrderExecutionEnabled"),
        borsh.struct([], "UpdateImmutableFlag"),
        borsh.struct([], "UpdateObligationOrderCreationEnabled"),
    ]);
    if (property !== undefined) {
        return ret.replicate(property);
    }
    return ret;
}
//# sourceMappingURL=UpdateLendingMarketMode.js.map
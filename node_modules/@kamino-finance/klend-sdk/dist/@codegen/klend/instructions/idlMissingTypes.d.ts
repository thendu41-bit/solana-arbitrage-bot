import { Address, AccountMeta, AccountSignerMeta, Instruction, TransactionSigner } from "@solana/kit";
import * as types from "../types";
export declare const DISCRIMINATOR: Buffer<ArrayBuffer>;
export interface IdlMissingTypesArgs {
    reserveFarmKind: types.ReserveFarmKindKind;
    assetTier: types.AssetTierKind;
    feeCalculation: types.FeeCalculationKind;
    reserveStatus: types.ReserveStatusKind;
    updateConfigMode: types.UpdateConfigModeKind;
    updateLendingMarketConfigValue: types.UpdateLendingMarketConfigValueKind;
    updateLendingMarketConfigMode: types.UpdateLendingMarketModeKind;
}
export interface IdlMissingTypesAccounts {
    signer: TransactionSigner;
    globalConfig: Address;
    lendingMarket: Address;
    reserve: Address;
}
export declare const layout: import("buffer-layout").Layout<unknown>;
export declare function idlMissingTypes(args: IdlMissingTypesArgs, accounts: IdlMissingTypesAccounts, remainingAccounts?: Array<AccountMeta | AccountSignerMeta>, programAddress?: Address): Instruction<string, readonly (AccountMeta<string> | import("@solana/kit").AccountLookupMeta<string, string>)[]>;
//# sourceMappingURL=idlMissingTypes.d.ts.map
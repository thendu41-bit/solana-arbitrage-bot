import Decimal from 'decimal.js';
import { Address } from '@solana/kit';
export interface ReserveAllocationOverview {
    targetWeight: Decimal;
    tokenAllocationCap: Decimal;
    ctokenAllocation: Decimal;
}
export interface VaultAllocationResult {
    targetUnallocatedAmount: Decimal;
    targetReservesAllocation: Map<Address, Decimal>;
}
/**
 * Computes the allocation of vault funds across reserves based on weights and caps
 * @param vaultAUM - Total AUM of the vault
 * @param vaultUnallocatedWeight - Weight for unallocated funds
 * @param vaultUnallocatedCap - Maximum amount that can remain unallocated
 * @param initialVaultAllocations - Map of reserve addresses to their allocation configurations
 * @returns Object containing target unallocated amount and target allocations per reserve
 */
export declare function computeReservesAllocation(vaultAUM: Decimal, vaultUnallocatedWeight: Decimal, vaultUnallocatedCap: Decimal, initialVaultAllocations: Map<Address, ReserveAllocationOverview>): VaultAllocationResult;
//# sourceMappingURL=vaultAllocation.d.ts.map
/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
declare const BASE_PATH: string;
interface ConfigurationParameters {
    basePath?: string;
    fetchApi?: FetchAPI;
    middleware?: Middleware[];
    queryParamsStringify?: (params: HTTPQuery) => string;
    username?: string;
    password?: string;
    apiKey?: string | Promise<string> | ((name: string) => string | Promise<string>);
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>);
    headers?: HTTPHeaders;
    credentials?: RequestCredentials;
}
declare class Configuration {
    private configuration;
    constructor(configuration?: ConfigurationParameters);
    set config(configuration: Configuration);
    get basePath(): string;
    get fetchApi(): FetchAPI | undefined;
    get middleware(): Middleware[];
    get queryParamsStringify(): (params: HTTPQuery) => string;
    get username(): string | undefined;
    get password(): string | undefined;
    get apiKey(): ((name: string) => string | Promise<string>) | undefined;
    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined;
    get headers(): HTTPHeaders | undefined;
    get credentials(): RequestCredentials | undefined;
}
declare const DefaultConfig: Configuration;
/**
 * This is the base class for all generated API classes.
 */
declare class BaseAPI {
    protected configuration: Configuration;
    private static readonly jsonRegex;
    private middleware;
    constructor(configuration?: Configuration);
    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]): T;
    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>): T;
    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>): T;
    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */
    protected isJsonMime(mime: string | null | undefined): boolean;
    protected request(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction): Promise<Response>;
    private createFetchParams;
    private fetchApi;
    /**
     * Create a shallow clone of `this` by constructing a new instance
     * and then shallow cloning data members.
     */
    private clone;
}
declare class ResponseError extends Error {
    response: Response;
    name: "ResponseError";
    constructor(response: Response, msg?: string);
}
declare class FetchError extends Error {
    cause: Error;
    name: "FetchError";
    constructor(cause: Error, msg?: string);
}
declare class RequiredError extends Error {
    field: string;
    name: "RequiredError";
    constructor(field: string, msg?: string);
}
declare const COLLECTION_FORMATS: {
    csv: string;
    ssv: string;
    tsv: string;
    pipes: string;
};
type FetchAPI = WindowOrWorkerGlobalScope['fetch'];
type Json = any;
type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';
type HTTPHeaders = {
    [key: string]: string;
};
type HTTPQuery = {
    [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | Set<string | number | null | boolean> | HTTPQuery;
};
type HTTPBody = Json | FormData | URLSearchParams;
type HTTPRequestInit = {
    headers?: HTTPHeaders;
    method: HTTPMethod;
    credentials?: RequestCredentials;
    body?: HTTPBody;
};
type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';
type InitOverrideFunction = (requestContext: {
    init: HTTPRequestInit;
    context: RequestOpts;
}) => Promise<RequestInit>;
interface FetchParams {
    url: string;
    init: RequestInit;
}
interface RequestOpts {
    path: string;
    method: HTTPMethod;
    headers: HTTPHeaders;
    query?: HTTPQuery;
    body?: HTTPBody;
}
declare function exists(json: any, key: string): boolean;
declare function querystring(params: HTTPQuery, prefix?: string): string;
declare function mapValues(data: any, fn: (item: any) => any): {};
declare function canConsumeForm(consumes: Consume[]): boolean;
interface Consume {
    contentType: string;
}
interface RequestContext {
    fetch: FetchAPI;
    url: string;
    init: RequestInit;
}
interface ResponseContext {
    fetch: FetchAPI;
    url: string;
    init: RequestInit;
    response: Response;
}
interface ErrorContext {
    fetch: FetchAPI;
    url: string;
    init: RequestInit;
    error: unknown;
    response?: Response;
}
interface Middleware {
    pre?(context: RequestContext): Promise<FetchParams | void>;
    post?(context: ResponseContext): Promise<Response | void>;
    onError?(context: ErrorContext): Promise<Response | void>;
}
interface ApiResponse<T> {
    raw: Response;
    value(): Promise<T>;
}
interface ResponseTransformer<T> {
    (json: any): T;
}
declare class JSONApiResponse<T> {
    raw: Response;
    private transformer;
    constructor(raw: Response, transformer?: ResponseTransformer<T>);
    value(): Promise<T>;
}
declare class VoidApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<void>;
}
declare class BlobApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<Blob>;
}
declare class TextApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<string>;
}

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface AccountMeta
 */
interface AccountMeta {
    /**
     *
     * @type {string}
     * @memberof AccountMeta
     */
    pubkey: string;
    /**
     *
     * @type {boolean}
     * @memberof AccountMeta
     */
    isSigner: boolean;
    /**
     *
     * @type {boolean}
     * @memberof AccountMeta
     */
    isWritable: boolean;
}
/**
 * Check if a given object implements the AccountMeta interface.
 */
declare function instanceOfAccountMeta(value: object): boolean;
declare function AccountMetaFromJSON(json: any): AccountMeta;
declare function AccountMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountMeta;
declare function AccountMetaToJSON(value?: AccountMeta | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface IndexedRouteMapResponse
 */
interface IndexedRouteMapResponse {
    /**
     * All the mints that are indexed to match in indexedRouteMap
     * @type {Array<string>}
     * @memberof IndexedRouteMapResponse
     */
    mintKeys: Array<string>;
    /**
     * All the possible route and their corresponding output mints
     * @type {{ [key: string]: Array<number>; }}
     * @memberof IndexedRouteMapResponse
     */
    indexedRouteMap: {
        [key: string]: Array<number>;
    };
}
/**
 * Check if a given object implements the IndexedRouteMapResponse interface.
 */
declare function instanceOfIndexedRouteMapResponse(value: object): boolean;
declare function IndexedRouteMapResponseFromJSON(json: any): IndexedRouteMapResponse;
declare function IndexedRouteMapResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexedRouteMapResponse;
declare function IndexedRouteMapResponseToJSON(value?: IndexedRouteMapResponse | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Instruction
 */
interface Instruction {
    /**
     *
     * @type {string}
     * @memberof Instruction
     */
    programId: string;
    /**
     *
     * @type {Array<AccountMeta>}
     * @memberof Instruction
     */
    accounts: Array<AccountMeta>;
    /**
     *
     * @type {string}
     * @memberof Instruction
     */
    data: string;
}
/**
 * Check if a given object implements the Instruction interface.
 */
declare function instanceOfInstruction(value: object): boolean;
declare function InstructionFromJSON(json: any): Instruction;
declare function InstructionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Instruction;
declare function InstructionToJSON(value?: Instruction | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PlatformFee
 */
interface PlatformFee {
    /**
     *
     * @type {string}
     * @memberof PlatformFee
     */
    amount: string;
    /**
     *
     * @type {number}
     * @memberof PlatformFee
     */
    feeBps: number;
}
/**
 * Check if a given object implements the PlatformFee interface.
 */
declare function instanceOfPlatformFee(value: object): boolean;
declare function PlatformFeeFromJSON(json: any): PlatformFee;
declare function PlatformFeeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlatformFee;
declare function PlatformFeeToJSON(value?: PlatformFee | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PriorityFeeWithMaxLamports
 */
interface PriorityFeeWithMaxLamports {
    /**
     *
     * @type {boolean}
     * @memberof PriorityFeeWithMaxLamports
     */
    global?: boolean;
    /**
     *
     * @type {number}
     * @memberof PriorityFeeWithMaxLamports
     */
    maxLamports?: number;
    /**
     *
     * @type {string}
     * @memberof PriorityFeeWithMaxLamports
     */
    priorityLevel?: PriorityFeeWithMaxLamportsPriorityLevelEnum;
}
/**
 * @export
 */
declare const PriorityFeeWithMaxLamportsPriorityLevelEnum: {
    readonly Medium: "medium";
    readonly High: "high";
    readonly VeryHigh: "veryHigh";
};
type PriorityFeeWithMaxLamportsPriorityLevelEnum = typeof PriorityFeeWithMaxLamportsPriorityLevelEnum[keyof typeof PriorityFeeWithMaxLamportsPriorityLevelEnum];
/**
 * Check if a given object implements the PriorityFeeWithMaxLamports interface.
 */
declare function instanceOfPriorityFeeWithMaxLamports(value: object): boolean;
declare function PriorityFeeWithMaxLamportsFromJSON(json: any): PriorityFeeWithMaxLamports;
declare function PriorityFeeWithMaxLamportsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PriorityFeeWithMaxLamports;
declare function PriorityFeeWithMaxLamportsToJSON(value?: PriorityFeeWithMaxLamports | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SwapInfo
 */
interface SwapInfo {
    /**
     *
     * @type {string}
     * @memberof SwapInfo
     */
    ammKey: string;
    /**
     *
     * @type {string}
     * @memberof SwapInfo
     */
    label: string;
    /**
     *
     * @type {string}
     * @memberof SwapInfo
     */
    inputMint: string;
    /**
     *
     * @type {string}
     * @memberof SwapInfo
     */
    outputMint: string;
    /**
     *
     * @type {string}
     * @memberof SwapInfo
     */
    inAmount: string;
    /**
     *
     * @type {string}
     * @memberof SwapInfo
     */
    outAmount: string;
    /**
     *
     * @type {string}
     * @memberof SwapInfo
     */
    feeAmount: string;
    /**
     *
     * @type {string}
     * @memberof SwapInfo
     */
    feeMint: string;
}
/**
 * Check if a given object implements the SwapInfo interface.
 */
declare function instanceOfSwapInfo(value: object): boolean;
declare function SwapInfoFromJSON(json: any): SwapInfo;
declare function SwapInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapInfo;
declare function SwapInfoToJSON(value?: SwapInfo | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface RoutePlanStep
 */
interface RoutePlanStep {
    /**
     *
     * @type {SwapInfo}
     * @memberof RoutePlanStep
     */
    swapInfo: SwapInfo;
    /**
     *
     * @type {number}
     * @memberof RoutePlanStep
     */
    percent: number;
}
/**
 * Check if a given object implements the RoutePlanStep interface.
 */
declare function instanceOfRoutePlanStep(value: object): boolean;
declare function RoutePlanStepFromJSON(json: any): RoutePlanStep;
declare function RoutePlanStepFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoutePlanStep;
declare function RoutePlanStepToJSON(value?: RoutePlanStep | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
declare const SwapMode: {
    readonly ExactIn: "ExactIn";
    readonly ExactOut: "ExactOut";
};
type SwapMode = typeof SwapMode[keyof typeof SwapMode];
declare function SwapModeFromJSON(json: any): SwapMode;
declare function SwapModeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapMode;
declare function SwapModeToJSON(value?: SwapMode | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface QuoteResponse
 */
interface QuoteResponse {
    /**
     *
     * @type {string}
     * @memberof QuoteResponse
     */
    inputMint: string;
    /**
     *
     * @type {string}
     * @memberof QuoteResponse
     */
    inAmount: string;
    /**
     *
     * @type {string}
     * @memberof QuoteResponse
     */
    outputMint: string;
    /**
     *
     * @type {string}
     * @memberof QuoteResponse
     */
    outAmount: string;
    /**
     *
     * @type {string}
     * @memberof QuoteResponse
     */
    otherAmountThreshold: string;
    /**
     *
     * @type {SwapMode}
     * @memberof QuoteResponse
     */
    swapMode: SwapMode;
    /**
     *
     * @type {number}
     * @memberof QuoteResponse
     */
    slippageBps: number;
    /**
     *
     * @type {number}
     * @memberof QuoteResponse
     */
    computedAutoSlippage?: number;
    /**
     *
     * @type {PlatformFee}
     * @memberof QuoteResponse
     */
    platformFee?: PlatformFee;
    /**
     *
     * @type {string}
     * @memberof QuoteResponse
     */
    priceImpactPct: string;
    /**
     *
     * @type {Array<RoutePlanStep>}
     * @memberof QuoteResponse
     */
    routePlan: Array<RoutePlanStep>;
    /**
     *
     * @type {number}
     * @memberof QuoteResponse
     */
    contextSlot?: number;
    /**
     *
     * @type {number}
     * @memberof QuoteResponse
     */
    timeTaken?: number;
    /**
     *
     * @type {string}
     * @memberof QuoteResponse
     */
    swapUsdValue?: string;
    /**
     *
     * @type {boolean}
     * @memberof QuoteResponse
     */
    simplerRouteUsed?: boolean;
}
/**
 * Check if a given object implements the QuoteResponse interface.
 */
declare function instanceOfQuoteResponse(value: object): boolean;
declare function QuoteResponseFromJSON(json: any): QuoteResponse;
declare function QuoteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteResponse;
declare function QuoteResponseToJSON(value?: QuoteResponse | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SwapInstructionsResponse
 */
interface SwapInstructionsResponse {
    /**
     *
     * @type {Instruction}
     * @memberof SwapInstructionsResponse
     */
    tokenLedgerInstruction?: Instruction;
    /**
     * The necessary instructions to setup the compute budget.
     * @type {Array<Instruction>}
     * @memberof SwapInstructionsResponse
     */
    computeBudgetInstructions: Array<Instruction>;
    /**
     * Setup missing ATA for the users.
     * @type {Array<Instruction>}
     * @memberof SwapInstructionsResponse
     */
    setupInstructions: Array<Instruction>;
    /**
     *
     * @type {Instruction}
     * @memberof SwapInstructionsResponse
     */
    swapInstruction: Instruction;
    /**
     *
     * @type {Instruction}
     * @memberof SwapInstructionsResponse
     */
    cleanupInstruction?: Instruction;
    /**
     * The lookup table addresses that you can use if you are using versioned transaction.
     * @type {Array<string>}
     * @memberof SwapInstructionsResponse
     */
    addressLookupTableAddresses: Array<string>;
}
/**
 * Check if a given object implements the SwapInstructionsResponse interface.
 */
declare function instanceOfSwapInstructionsResponse(value: object): boolean;
declare function SwapInstructionsResponseFromJSON(json: any): SwapInstructionsResponse;
declare function SwapInstructionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapInstructionsResponse;
declare function SwapInstructionsResponseToJSON(value?: SwapInstructionsResponse | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The compute unit price to prioritize the transaction, the additional fee will be `computeUnitLimit (1400000) * computeUnitPriceMicroLamports`. If `auto` is used, Jupiter will automatically set a priority fee and it will be capped at 5,000,000 lamports / 0.005 SOL.
 * @export
 * @interface SwapRequestComputeUnitPriceMicroLamports
 */
interface SwapRequestComputeUnitPriceMicroLamports {
}
/**
 * Check if a given object implements the SwapRequestComputeUnitPriceMicroLamports interface.
 */
declare function instanceOfSwapRequestComputeUnitPriceMicroLamports(value: object): boolean;
declare function SwapRequestComputeUnitPriceMicroLamportsFromJSON(json: any): SwapRequestComputeUnitPriceMicroLamports;
declare function SwapRequestComputeUnitPriceMicroLamportsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapRequestComputeUnitPriceMicroLamports;
declare function SwapRequestComputeUnitPriceMicroLamportsToJSON(value?: SwapRequestComputeUnitPriceMicroLamports | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SwapRequestDynamicSlippage
 */
interface SwapRequestDynamicSlippage {
    /**
     *
     * @type {number}
     * @memberof SwapRequestDynamicSlippage
     */
    minBps?: number;
    /**
     *
     * @type {number}
     * @memberof SwapRequestDynamicSlippage
     */
    maxBps?: number;
}
/**
 * Check if a given object implements the SwapRequestDynamicSlippage interface.
 */
declare function instanceOfSwapRequestDynamicSlippage(value: object): boolean;
declare function SwapRequestDynamicSlippageFromJSON(json: any): SwapRequestDynamicSlippage;
declare function SwapRequestDynamicSlippageFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapRequestDynamicSlippage;
declare function SwapRequestDynamicSlippageToJSON(value?: SwapRequestDynamicSlippage | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * \* PriorityFeeWithMaxLamports is impossible to be typed. Prioritization fee lamports paid for the transaction in addition to the signatures fee. Mutually exclusive with compute_unit_price_micro_lamports. If `auto` is used, Jupiter will automatically set a priority fee and it will be capped at 5,000,000 lamports / 0.005 SOL.
 * @export
 * @interface SwapRequestPrioritizationFeeLamports
 */
interface SwapRequestPrioritizationFeeLamports {
}
/**
 * Check if a given object implements the SwapRequestPrioritizationFeeLamports interface.
 */
declare function instanceOfSwapRequestPrioritizationFeeLamports(value: object): boolean;
declare function SwapRequestPrioritizationFeeLamportsFromJSON(json: any): SwapRequestPrioritizationFeeLamports;
declare function SwapRequestPrioritizationFeeLamportsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapRequestPrioritizationFeeLamports;
declare function SwapRequestPrioritizationFeeLamportsToJSON(value?: SwapRequestPrioritizationFeeLamports | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SwapRequest
 */
interface SwapRequest {
    /**
     * The user public key.
     * @type {string}
     * @memberof SwapRequest
     */
    userPublicKey: string;
    /**
     * Allow a custom payer to pay for the transaction.
     * @type {string}
     * @memberof SwapRequest
     */
    payer?: string;
    /**
     * Default is true. If true, will automatically wrap/unwrap SOL. If false, it will use wSOL token account.  Will be ignored if `destinationTokenAccount` is set because the `destinationTokenAccount` may belong to a different user that we have no authority to close.
     * @type {boolean}
     * @memberof SwapRequest
     */
    wrapAndUnwrapSol?: boolean;
    /**
     * Default is true. This enables the usage of shared program accountns. That means no intermediate token accounts or open orders accounts need to be created for the users. But it also means that the likelihood of hot accounts is higher.
     * @type {boolean}
     * @memberof SwapRequest
     */
    useSharedAccounts?: boolean;
    /**
     * Fee token account, same as the output token for ExactIn and as the input token for ExactOut, it is derived using the seeds = ["referral_ata", referral_account, mint] and the `REFER4ZgmyYx9c6He5XfaTMiGfdLwRnkV4RPp9t9iF3` referral contract (only pass in if you set a feeBps and make sure that the feeAccount has been created).
     * @type {string}
     * @memberof SwapRequest
     */
    feeAccount?: string;
    /**
     *
     * @type {SwapRequestComputeUnitPriceMicroLamports}
     * @memberof SwapRequest
     */
    computeUnitPriceMicroLamports?: SwapRequestComputeUnitPriceMicroLamports;
    /**
     *
     * @type {SwapRequestPrioritizationFeeLamports}
     * @memberof SwapRequest
     */
    prioritizationFeeLamports?: SwapRequestPrioritizationFeeLamports;
    /**
     * Default is false. Request a legacy transaction rather than the default versioned transaction, needs to be paired with a quote using asLegacyTransaction otherwise the transaction might be too large.
     * @type {boolean}
     * @memberof SwapRequest
     */
    asLegacyTransaction?: boolean;
    /**
     * Default is false. This is useful when the instruction before the swap has a transfer that increases the input token amount. Then, the swap will just use the difference between the token ledger token amount and post token amount.
     * @type {boolean}
     * @memberof SwapRequest
     */
    useTokenLedger?: boolean;
    /**
     * Public key of the token account that will be used to receive the token out of the swap. If not provided, the user's ATA will be used. If provided, we assume that the token account is already initialized.
     * @type {string}
     * @memberof SwapRequest
     */
    destinationTokenAccount?: string;
    /**
     * When enabled, it will do a swap simulation to get the compute unit used and set it in ComputeBudget's compute unit limit. This will increase latency slightly since there will be one extra RPC call to simulate this. Default is `false`.
     * @type {boolean}
     * @memberof SwapRequest
     */
    dynamicComputeUnitLimit?: boolean;
    /**
     * When enabled, it will not do any rpc calls check on user's accounts. Enable it only when you already setup all the accounts needed for the trasaction, like wrapping or unwrapping sol, destination account is already created.
     * @type {boolean}
     * @memberof SwapRequest
     */
    skipUserAccountsRpcCalls?: boolean;
    /**
     * The program authority id [0;7], load balanced across the available set by default
     * @type {number}
     * @memberof SwapRequest
     */
    programAuthorityId?: number;
    /**
     * Default is false. Enabling it would reduce use an optimized way to open WSOL that reduce compute unit.
     * @type {boolean}
     * @memberof SwapRequest
     */
    allowOptimizedWrappedSolTokenAccount?: boolean;
    /**
     *
     * @type {SwapRequestDynamicSlippage}
     * @memberof SwapRequest
     */
    dynamicSlippage?: SwapRequestDynamicSlippage;
    /**
     * Optional. When passed in, Swap object will be returned with your desired slots to epxiry.
     * @type {number}
     * @memberof SwapRequest
     */
    blockhashSlotsToExpiry?: number;
    /**
     * Optional. Default to false. Request Swap object to be returned with the correct blockhash prior to Agave 2.0.
     * @type {boolean}
     * @memberof SwapRequest
     */
    correctLastValidBlockHeight?: boolean;
    /**
     * Optional. Default to false. Add consensus account to (hopefully) prevent MEV attacks
     * @type {boolean}
     * @memberof SwapRequest
     */
    addConsensusAccount?: boolean;
    /**
     *
     * @type {QuoteResponse}
     * @memberof SwapRequest
     */
    quoteResponse: QuoteResponse;
}
/**
 * Check if a given object implements the SwapRequest interface.
 */
declare function instanceOfSwapRequest(value: object): boolean;
declare function SwapRequestFromJSON(json: any): SwapRequest;
declare function SwapRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapRequest;
declare function SwapRequestToJSON(value?: SwapRequest | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SwapResponseDynamicSlippageReport
 */
interface SwapResponseDynamicSlippageReport {
    /**
     *
     * @type {string}
     * @memberof SwapResponseDynamicSlippageReport
     */
    amplificationRatio?: string;
    /**
     *
     * @type {number}
     * @memberof SwapResponseDynamicSlippageReport
     */
    otherAmount?: number;
    /**
     *
     * @type {number}
     * @memberof SwapResponseDynamicSlippageReport
     */
    simulatedIncurredSlippageBps?: number;
    /**
     *
     * @type {number}
     * @memberof SwapResponseDynamicSlippageReport
     */
    slippageBps?: number;
    /**
     *
     * @type {string}
     * @memberof SwapResponseDynamicSlippageReport
     */
    categoryName?: SwapResponseDynamicSlippageReportCategoryNameEnum;
    /**
     *
     * @type {number}
     * @memberof SwapResponseDynamicSlippageReport
     */
    heuristicMaxSlippageBps?: number;
}
/**
 * @export
 */
declare const SwapResponseDynamicSlippageReportCategoryNameEnum: {
    readonly Stable: "stable";
    readonly Lst: "lst";
    readonly Bluechip: "bluechip";
    readonly Verified: "verified";
};
type SwapResponseDynamicSlippageReportCategoryNameEnum = typeof SwapResponseDynamicSlippageReportCategoryNameEnum[keyof typeof SwapResponseDynamicSlippageReportCategoryNameEnum];
/**
 * Check if a given object implements the SwapResponseDynamicSlippageReport interface.
 */
declare function instanceOfSwapResponseDynamicSlippageReport(value: object): boolean;
declare function SwapResponseDynamicSlippageReportFromJSON(json: any): SwapResponseDynamicSlippageReport;
declare function SwapResponseDynamicSlippageReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapResponseDynamicSlippageReport;
declare function SwapResponseDynamicSlippageReportToJSON(value?: SwapResponseDynamicSlippageReport | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SwapResponsePrioritizationTypeComputeBudget
 */
interface SwapResponsePrioritizationTypeComputeBudget {
    /**
     *
     * @type {number}
     * @memberof SwapResponsePrioritizationTypeComputeBudget
     */
    estimatedMicroLamports?: number;
    /**
     *
     * @type {number}
     * @memberof SwapResponsePrioritizationTypeComputeBudget
     */
    microLamports?: number;
}
/**
 * Check if a given object implements the SwapResponsePrioritizationTypeComputeBudget interface.
 */
declare function instanceOfSwapResponsePrioritizationTypeComputeBudget(value: object): boolean;
declare function SwapResponsePrioritizationTypeComputeBudgetFromJSON(json: any): SwapResponsePrioritizationTypeComputeBudget;
declare function SwapResponsePrioritizationTypeComputeBudgetFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapResponsePrioritizationTypeComputeBudget;
declare function SwapResponsePrioritizationTypeComputeBudgetToJSON(value?: SwapResponsePrioritizationTypeComputeBudget | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SwapResponsePrioritizationTypeJito
 */
interface SwapResponsePrioritizationTypeJito {
    /**
     *
     * @type {number}
     * @memberof SwapResponsePrioritizationTypeJito
     */
    lamports?: number;
}
/**
 * Check if a given object implements the SwapResponsePrioritizationTypeJito interface.
 */
declare function instanceOfSwapResponsePrioritizationTypeJito(value: object): boolean;
declare function SwapResponsePrioritizationTypeJitoFromJSON(json: any): SwapResponsePrioritizationTypeJito;
declare function SwapResponsePrioritizationTypeJitoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapResponsePrioritizationTypeJito;
declare function SwapResponsePrioritizationTypeJitoToJSON(value?: SwapResponsePrioritizationTypeJito | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * The type of prioritization used for the swap, either Jito or ComputeBudget.
 * @export
 * @interface SwapResponsePrioritizationType
 */
interface SwapResponsePrioritizationType {
    /**
     *
     * @type {SwapResponsePrioritizationTypeJito}
     * @memberof SwapResponsePrioritizationType
     */
    jito?: SwapResponsePrioritizationTypeJito;
    /**
     *
     * @type {SwapResponsePrioritizationTypeComputeBudget}
     * @memberof SwapResponsePrioritizationType
     */
    computeBudget?: SwapResponsePrioritizationTypeComputeBudget;
}
/**
 * Check if a given object implements the SwapResponsePrioritizationType interface.
 */
declare function instanceOfSwapResponsePrioritizationType(value: object): boolean;
declare function SwapResponsePrioritizationTypeFromJSON(json: any): SwapResponsePrioritizationType;
declare function SwapResponsePrioritizationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapResponsePrioritizationType;
declare function SwapResponsePrioritizationTypeToJSON(value?: SwapResponsePrioritizationType | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface SwapResponse
 */
interface SwapResponse {
    /**
     *
     * @type {string}
     * @memberof SwapResponse
     */
    swapTransaction: string;
    /**
     *
     * @type {number}
     * @memberof SwapResponse
     */
    lastValidBlockHeight: number;
    /**
     *
     * @type {number}
     * @memberof SwapResponse
     */
    prioritizationFeeLamports: number;
    /**
     *
     * @type {SwapResponsePrioritizationType}
     * @memberof SwapResponse
     */
    prioritizationType?: SwapResponsePrioritizationType;
    /**
     *
     * @type {SwapResponseDynamicSlippageReport}
     * @memberof SwapResponse
     */
    dynamicSlippageReport?: SwapResponseDynamicSlippageReport;
}
/**
 * Check if a given object implements the SwapResponse interface.
 */
declare function instanceOfSwapResponse(value: object): boolean;
declare function SwapResponseFromJSON(json: any): SwapResponse;
declare function SwapResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapResponse;
declare function SwapResponseToJSON(value?: SwapResponse | null): any;

/**
 * Jupiter API v6
 * The core of [jup.ag](https://jup.ag). Easily get a quote and swap through Jupiter API.  ### Rate Limit We update our rate limit from time to time depending on the load of our servers. We recommend running your own instance of the API if you want to have high rate limit, here to learn how to run the [self-hosted API](https://station.jup.ag/docs/apis/self-hosted).  ### API Wrapper - Typescript [@jup-ag/api](https://github.com/jup-ag/jupiter-quote-api-node)  ### Data types - Public keys are base58 encoded strings - raw data such as Vec<u8\\> are base64 encoded strings
 *
 * The version of the OpenAPI document: 6.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface IndexedRouteMapGetRequest {
    onlyDirectRoutes?: boolean;
}
interface QuoteGetRequest {
    inputMint: string;
    outputMint: string;
    amount: number;
    slippageBps?: number;
    dynamicSlippage?: boolean;
    autoSlippage?: boolean;
    autoSlippageCollisionUsdValue?: number;
    computeAutoSlippage?: boolean;
    maxAutoSlippageBps?: number;
    swapMode?: QuoteGetSwapModeEnum;
    dexes?: Array<string>;
    excludeDexes?: Array<string>;
    restrictIntermediateTokens?: boolean;
    onlyDirectRoutes?: boolean;
    asLegacyTransaction?: boolean;
    platformFeeBps?: number;
    maxAccounts?: number;
    minimizeSlippage?: boolean;
    preferLiquidDexes?: boolean;
    tokenCategoryBasedIntermediateTokens?: boolean;
    preferSimpleRouting?: boolean;
}
interface SwapInstructionsPostRequest {
    swapRequest: SwapRequest;
}
interface SwapPostRequest {
    swapRequest: SwapRequest;
}
/**
 *
 */
declare class DefaultApi extends BaseAPI {
    /**
     * DEPRECATED, please use /tokens for tradable mints. Returns a hash map, input mint as key and an array of valid output mint as values, token mints are indexed to reduce the file size
     * GET /indexed-route-map
     * @deprecated
     */
    indexedRouteMapGetRaw(requestParameters: IndexedRouteMapGetRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<IndexedRouteMapResponse>>;
    /**
     * DEPRECATED, please use /tokens for tradable mints. Returns a hash map, input mint as key and an array of valid output mint as values, token mints are indexed to reduce the file size
     * GET /indexed-route-map
     * @deprecated
     */
    indexedRouteMapGet(requestParameters?: IndexedRouteMapGetRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<IndexedRouteMapResponse>;
    /**
     * Returns a hash, which key is the program id and value is the label. This is used to help map error from transaction by identifying the fault program id. With that, we can use the `excludeDexes` or `dexes` parameter.
     * GET /program-id-to-label
     */
    programIdToLabelGetRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<{
        [key: string]: string;
    }>>;
    /**
     * Returns a hash, which key is the program id and value is the label. This is used to help map error from transaction by identifying the fault program id. With that, we can use the `excludeDexes` or `dexes` parameter.
     * GET /program-id-to-label
     */
    programIdToLabelGet(initOverrides?: RequestInit | InitOverrideFunction): Promise<{
        [key: string]: string;
    }>;
    /**
     * Sends a GET request to the Jupiter API to get the best priced quote.
     * GET /quote
     */
    quoteGetRaw(requestParameters: QuoteGetRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<QuoteResponse>>;
    /**
     * Sends a GET request to the Jupiter API to get the best priced quote.
     * GET /quote
     */
    quoteGet(requestParameters: QuoteGetRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<QuoteResponse>;
    /**
     * Returns instructions that you can use from the quote you get from `/quote`.
     * POST /swap-instructions
     */
    swapInstructionsPostRaw(requestParameters: SwapInstructionsPostRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SwapInstructionsResponse>>;
    /**
     * Returns instructions that you can use from the quote you get from `/quote`.
     * POST /swap-instructions
     */
    swapInstructionsPost(requestParameters: SwapInstructionsPostRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SwapInstructionsResponse>;
    /**
     * Returns a transaction that you can use from the quote you get from `/quote`.
     * POST /swap
     */
    swapPostRaw(requestParameters: SwapPostRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<SwapResponse>>;
    /**
     * Returns a transaction that you can use from the quote you get from `/quote`.
     * POST /swap
     */
    swapPost(requestParameters: SwapPostRequest, initOverrides?: RequestInit | InitOverrideFunction): Promise<SwapResponse>;
    /**
     * Returns a list of all the tradable mints
     * GET /tokens
     */
    tokensGetRaw(initOverrides?: RequestInit | InitOverrideFunction): Promise<ApiResponse<Array<string>>>;
    /**
     * Returns a list of all the tradable mints
     * GET /tokens
     */
    tokensGet(initOverrides?: RequestInit | InitOverrideFunction): Promise<Array<string>>;
}
/**
 * @export
 */
declare const QuoteGetSwapModeEnum: {
    readonly ExactIn: "ExactIn";
    readonly ExactOut: "ExactOut";
};
type QuoteGetSwapModeEnum = typeof QuoteGetSwapModeEnum[keyof typeof QuoteGetSwapModeEnum];

declare const createJupiterApiClient: (config?: ConfigurationParameters) => DefaultApi;

export { AccountMeta, AccountMetaFromJSON, AccountMetaFromJSONTyped, AccountMetaToJSON, ApiResponse, BASE_PATH, BaseAPI, BlobApiResponse, COLLECTION_FORMATS, Configuration, ConfigurationParameters, Consume, DefaultApi, DefaultConfig, ErrorContext, FetchAPI, FetchError, FetchParams, HTTPBody, HTTPHeaders, HTTPMethod, HTTPQuery, HTTPRequestInit, IndexedRouteMapGetRequest, IndexedRouteMapResponse, IndexedRouteMapResponseFromJSON, IndexedRouteMapResponseFromJSONTyped, IndexedRouteMapResponseToJSON, InitOverrideFunction, Instruction, InstructionFromJSON, InstructionFromJSONTyped, InstructionToJSON, JSONApiResponse, Json, Middleware, ModelPropertyNaming, PlatformFee, PlatformFeeFromJSON, PlatformFeeFromJSONTyped, PlatformFeeToJSON, PriorityFeeWithMaxLamports, PriorityFeeWithMaxLamportsFromJSON, PriorityFeeWithMaxLamportsFromJSONTyped, PriorityFeeWithMaxLamportsPriorityLevelEnum, PriorityFeeWithMaxLamportsToJSON, QuoteGetRequest, QuoteGetSwapModeEnum, QuoteResponse, QuoteResponseFromJSON, QuoteResponseFromJSONTyped, QuoteResponseToJSON, RequestContext, RequestOpts, RequiredError, ResponseContext, ResponseError, ResponseTransformer, RoutePlanStep, RoutePlanStepFromJSON, RoutePlanStepFromJSONTyped, RoutePlanStepToJSON, SwapInfo, SwapInfoFromJSON, SwapInfoFromJSONTyped, SwapInfoToJSON, SwapInstructionsPostRequest, SwapInstructionsResponse, SwapInstructionsResponseFromJSON, SwapInstructionsResponseFromJSONTyped, SwapInstructionsResponseToJSON, SwapMode, SwapModeFromJSON, SwapModeFromJSONTyped, SwapModeToJSON, SwapPostRequest, SwapRequest, SwapRequestComputeUnitPriceMicroLamports, SwapRequestComputeUnitPriceMicroLamportsFromJSON, SwapRequestComputeUnitPriceMicroLamportsFromJSONTyped, SwapRequestComputeUnitPriceMicroLamportsToJSON, SwapRequestDynamicSlippage, SwapRequestDynamicSlippageFromJSON, SwapRequestDynamicSlippageFromJSONTyped, SwapRequestDynamicSlippageToJSON, SwapRequestFromJSON, SwapRequestFromJSONTyped, SwapRequestPrioritizationFeeLamports, SwapRequestPrioritizationFeeLamportsFromJSON, SwapRequestPrioritizationFeeLamportsFromJSONTyped, SwapRequestPrioritizationFeeLamportsToJSON, SwapRequestToJSON, SwapResponse, SwapResponseDynamicSlippageReport, SwapResponseDynamicSlippageReportCategoryNameEnum, SwapResponseDynamicSlippageReportFromJSON, SwapResponseDynamicSlippageReportFromJSONTyped, SwapResponseDynamicSlippageReportToJSON, SwapResponseFromJSON, SwapResponseFromJSONTyped, SwapResponsePrioritizationType, SwapResponsePrioritizationTypeComputeBudget, SwapResponsePrioritizationTypeComputeBudgetFromJSON, SwapResponsePrioritizationTypeComputeBudgetFromJSONTyped, SwapResponsePrioritizationTypeComputeBudgetToJSON, SwapResponsePrioritizationTypeFromJSON, SwapResponsePrioritizationTypeFromJSONTyped, SwapResponsePrioritizationTypeJito, SwapResponsePrioritizationTypeJitoFromJSON, SwapResponsePrioritizationTypeJitoFromJSONTyped, SwapResponsePrioritizationTypeJitoToJSON, SwapResponsePrioritizationTypeToJSON, SwapResponseToJSON, TextApiResponse, VoidApiResponse, canConsumeForm, createJupiterApiClient, exists, instanceOfAccountMeta, instanceOfIndexedRouteMapResponse, instanceOfInstruction, instanceOfPlatformFee, instanceOfPriorityFeeWithMaxLamports, instanceOfQuoteResponse, instanceOfRoutePlanStep, instanceOfSwapInfo, instanceOfSwapInstructionsResponse, instanceOfSwapRequest, instanceOfSwapRequestComputeUnitPriceMicroLamports, instanceOfSwapRequestDynamicSlippage, instanceOfSwapRequestPrioritizationFeeLamports, instanceOfSwapResponse, instanceOfSwapResponseDynamicSlippageReport, instanceOfSwapResponsePrioritizationType, instanceOfSwapResponsePrioritizationTypeComputeBudget, instanceOfSwapResponsePrioritizationTypeJito, mapValues, querystring };

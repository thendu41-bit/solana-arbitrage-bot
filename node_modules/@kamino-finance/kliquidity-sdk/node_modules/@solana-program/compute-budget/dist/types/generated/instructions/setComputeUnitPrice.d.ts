/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type AccountMeta, type Address, type FixedSizeCodec, type FixedSizeDecoder, type FixedSizeEncoder, type Instruction, type InstructionWithAccounts, type InstructionWithData, type ReadonlyUint8Array } from '@solana/kit';
import { COMPUTE_BUDGET_PROGRAM_ADDRESS } from '../programs';
export declare const SET_COMPUTE_UNIT_PRICE_DISCRIMINATOR = 3;
export declare function getSetComputeUnitPriceDiscriminatorBytes(): ReadonlyUint8Array;
export type SetComputeUnitPriceInstruction<TProgram extends string = typeof COMPUTE_BUDGET_PROGRAM_ADDRESS, TRemainingAccounts extends readonly AccountMeta<string>[] = []> = Instruction<TProgram> & InstructionWithData<ReadonlyUint8Array> & InstructionWithAccounts<TRemainingAccounts>;
export type SetComputeUnitPriceInstructionData = {
    discriminator: number;
    /** Transaction compute unit price used for prioritization fees. */
    microLamports: bigint;
};
export type SetComputeUnitPriceInstructionDataArgs = {
    /** Transaction compute unit price used for prioritization fees. */
    microLamports: number | bigint;
};
export declare function getSetComputeUnitPriceInstructionDataEncoder(): FixedSizeEncoder<SetComputeUnitPriceInstructionDataArgs>;
export declare function getSetComputeUnitPriceInstructionDataDecoder(): FixedSizeDecoder<SetComputeUnitPriceInstructionData>;
export declare function getSetComputeUnitPriceInstructionDataCodec(): FixedSizeCodec<SetComputeUnitPriceInstructionDataArgs, SetComputeUnitPriceInstructionData>;
export type SetComputeUnitPriceInput = {
    microLamports: SetComputeUnitPriceInstructionDataArgs['microLamports'];
};
export declare function getSetComputeUnitPriceInstruction<TProgramAddress extends Address = typeof COMPUTE_BUDGET_PROGRAM_ADDRESS>(input: SetComputeUnitPriceInput, config?: {
    programAddress?: TProgramAddress;
}): SetComputeUnitPriceInstruction<TProgramAddress>;
export type ParsedSetComputeUnitPriceInstruction<TProgram extends string = typeof COMPUTE_BUDGET_PROGRAM_ADDRESS> = {
    programAddress: Address<TProgram>;
    data: SetComputeUnitPriceInstructionData;
};
export declare function parseSetComputeUnitPriceInstruction<TProgram extends string>(instruction: Instruction<TProgram> & InstructionWithData<ReadonlyUint8Array>): ParsedSetComputeUnitPriceInstruction<TProgram>;
//# sourceMappingURL=setComputeUnitPrice.d.ts.map
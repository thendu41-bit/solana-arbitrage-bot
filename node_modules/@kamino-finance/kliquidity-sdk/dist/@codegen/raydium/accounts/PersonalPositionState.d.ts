import { Address, GetAccountInfoApi, GetMultipleAccountsApi, Rpc } from "@solana/kit";
import BN from "bn.js";
import * as types from "../types";
export interface PersonalPositionStateFields {
    bump: number;
    nftMint: Address;
    poolId: Address;
    tickLowerIndex: number;
    tickUpperIndex: number;
    liquidity: BN;
    feeGrowthInside0LastX64: BN;
    feeGrowthInside1LastX64: BN;
    tokenFeesOwed0: BN;
    tokenFeesOwed1: BN;
    rewardInfos: Array<types.PositionRewardInfoFields>;
    padding: Array<BN>;
}
export interface PersonalPositionStateJSON {
    bump: number;
    nftMint: string;
    poolId: string;
    tickLowerIndex: number;
    tickUpperIndex: number;
    liquidity: string;
    feeGrowthInside0LastX64: string;
    feeGrowthInside1LastX64: string;
    tokenFeesOwed0: string;
    tokenFeesOwed1: string;
    rewardInfos: Array<types.PositionRewardInfoJSON>;
    padding: Array<string>;
}
export declare class PersonalPositionState {
    readonly bump: number;
    readonly nftMint: Address;
    readonly poolId: Address;
    readonly tickLowerIndex: number;
    readonly tickUpperIndex: number;
    readonly liquidity: BN;
    readonly feeGrowthInside0LastX64: BN;
    readonly feeGrowthInside1LastX64: BN;
    readonly tokenFeesOwed0: BN;
    readonly tokenFeesOwed1: BN;
    readonly rewardInfos: Array<types.PositionRewardInfo>;
    readonly padding: Array<BN>;
    static readonly discriminator: Buffer<ArrayBuffer>;
    static readonly layout: import("buffer-layout").Layout<PersonalPositionState>;
    constructor(fields: PersonalPositionStateFields);
    static fetch(rpc: Rpc<GetAccountInfoApi>, address: Address, programId?: Address): Promise<PersonalPositionState | null>;
    static fetchMultiple(rpc: Rpc<GetMultipleAccountsApi>, addresses: Address[], programId?: Address): Promise<Array<PersonalPositionState | null>>;
    static decode(data: Buffer): PersonalPositionState;
    toJSON(): PersonalPositionStateJSON;
    static fromJSON(obj: PersonalPositionStateJSON): PersonalPositionState;
}
//# sourceMappingURL=PersonalPositionState.d.ts.map
import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface OpenPositionOrIncreaseLiquidityJSON {
    kind: "OpenPositionOrIncreaseLiquidity";
}
export declare class OpenPositionOrIncreaseLiquidity {
    static readonly discriminator = 0;
    static readonly kind = "OpenPositionOrIncreaseLiquidity";
    readonly discriminator = 0;
    readonly kind = "OpenPositionOrIncreaseLiquidity";
    toJSON(): OpenPositionOrIncreaseLiquidityJSON;
    toEncodable(): {
        OpenPositionOrIncreaseLiquidity: {};
    };
}
export interface DecreaseLiquidityJSON {
    kind: "DecreaseLiquidity";
}
export declare class DecreaseLiquidity {
    static readonly discriminator = 1;
    static readonly kind = "DecreaseLiquidity";
    readonly discriminator = 1;
    readonly kind = "DecreaseLiquidity";
    toJSON(): DecreaseLiquidityJSON;
    toEncodable(): {
        DecreaseLiquidity: {};
    };
}
export interface CollectFeeJSON {
    kind: "CollectFee";
}
export declare class CollectFee {
    static readonly discriminator = 2;
    static readonly kind = "CollectFee";
    readonly discriminator = 2;
    readonly kind = "CollectFee";
    toJSON(): CollectFeeJSON;
    toEncodable(): {
        CollectFee: {};
    };
}
export interface CollectRewardJSON {
    kind: "CollectReward";
}
export declare class CollectReward {
    static readonly discriminator = 3;
    static readonly kind = "CollectReward";
    readonly discriminator = 3;
    readonly kind = "CollectReward";
    toJSON(): CollectRewardJSON;
    toEncodable(): {
        CollectReward: {};
    };
}
export interface SwapJSON {
    kind: "Swap";
}
export declare class Swap {
    static readonly discriminator = 4;
    static readonly kind = "Swap";
    readonly discriminator = 4;
    readonly kind = "Swap";
    toJSON(): SwapJSON;
    toEncodable(): {
        Swap: {};
    };
}
export declare function fromDecoded(obj: any): types.PoolStatusBitIndexKind;
export declare function fromJSON(obj: types.PoolStatusBitIndexJSON): types.PoolStatusBitIndexKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=PoolStatusBitIndex.d.ts.map
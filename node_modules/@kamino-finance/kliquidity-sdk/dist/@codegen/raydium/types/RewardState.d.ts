import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface UninitializedJSON {
    kind: "Uninitialized";
}
export declare class Uninitialized {
    static readonly discriminator = 0;
    static readonly kind = "Uninitialized";
    readonly discriminator = 0;
    readonly kind = "Uninitialized";
    toJSON(): UninitializedJSON;
    toEncodable(): {
        Uninitialized: {};
    };
}
export interface InitializedJSON {
    kind: "Initialized";
}
export declare class Initialized {
    static readonly discriminator = 1;
    static readonly kind = "Initialized";
    readonly discriminator = 1;
    readonly kind = "Initialized";
    toJSON(): InitializedJSON;
    toEncodable(): {
        Initialized: {};
    };
}
export interface OpeningJSON {
    kind: "Opening";
}
export declare class Opening {
    static readonly discriminator = 2;
    static readonly kind = "Opening";
    readonly discriminator = 2;
    readonly kind = "Opening";
    toJSON(): OpeningJSON;
    toEncodable(): {
        Opening: {};
    };
}
export interface EndedJSON {
    kind: "Ended";
}
export declare class Ended {
    static readonly discriminator = 3;
    static readonly kind = "Ended";
    readonly discriminator = 3;
    readonly kind = "Ended";
    toJSON(): EndedJSON;
    toEncodable(): {
        Ended: {};
    };
}
export declare function fromDecoded(obj: any): types.RewardStateKind;
export declare function fromJSON(obj: types.RewardStateJSON): types.RewardStateKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=RewardState.d.ts.map
import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface EnableJSON {
    kind: "Enable";
}
export declare class Enable {
    static readonly discriminator = 0;
    static readonly kind = "Enable";
    readonly discriminator = 0;
    readonly kind = "Enable";
    toJSON(): EnableJSON;
    toEncodable(): {
        Enable: {};
    };
}
export interface DisableJSON {
    kind: "Disable";
}
export declare class Disable {
    static readonly discriminator = 1;
    static readonly kind = "Disable";
    readonly discriminator = 1;
    readonly kind = "Disable";
    toJSON(): DisableJSON;
    toEncodable(): {
        Disable: {};
    };
}
export declare function fromDecoded(obj: any): types.PoolStatusBitFlagKind;
export declare function fromJSON(obj: types.PoolStatusBitFlagJSON): types.PoolStatusBitFlagKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=PoolStatusBitFlag.d.ts.map
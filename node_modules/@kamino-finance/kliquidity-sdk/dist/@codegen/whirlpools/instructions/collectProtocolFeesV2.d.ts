import { Address, IAccountMeta, IAccountSignerMeta, IInstruction, TransactionSigner } from "@solana/kit";
import * as types from "../types";
export interface CollectProtocolFeesV2Args {
    remainingAccountsInfo: types.RemainingAccountsInfoFields | null;
}
export interface CollectProtocolFeesV2Accounts {
    whirlpoolsConfig: Address;
    whirlpool: Address;
    collectProtocolFeesAuthority: TransactionSigner;
    tokenMintA: Address;
    tokenMintB: Address;
    tokenVaultA: Address;
    tokenVaultB: Address;
    tokenDestinationA: Address;
    tokenDestinationB: Address;
    tokenProgramA: Address;
    tokenProgramB: Address;
    memoProgram: Address;
}
export declare const layout: import("buffer-layout").Layout<unknown>;
export declare function collectProtocolFeesV2(args: CollectProtocolFeesV2Args, accounts: CollectProtocolFeesV2Accounts, remainingAccounts?: Array<IAccountMeta | IAccountSignerMeta>, programAddress?: Address): IInstruction;
//# sourceMappingURL=collectProtocolFeesV2.d.ts.map
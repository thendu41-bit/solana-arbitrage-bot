import { Address, IAccountMeta, IAccountSignerMeta, IInstruction, TransactionSigner } from "@solana/kit";
import BN from "bn.js";
import * as types from "../types";
export interface SwapV2Args {
    amount: BN;
    otherAmountThreshold: BN;
    sqrtPriceLimit: BN;
    amountSpecifiedIsInput: boolean;
    aToB: boolean;
    remainingAccountsInfo: types.RemainingAccountsInfoFields | null;
}
export interface SwapV2Accounts {
    tokenProgramA: Address;
    tokenProgramB: Address;
    memoProgram: Address;
    tokenAuthority: TransactionSigner;
    whirlpool: Address;
    tokenMintA: Address;
    tokenMintB: Address;
    tokenOwnerAccountA: Address;
    tokenVaultA: Address;
    tokenOwnerAccountB: Address;
    tokenVaultB: Address;
    tickArray0: Address;
    tickArray1: Address;
    tickArray2: Address;
    oracle: Address;
}
export declare const layout: import("buffer-layout").Layout<unknown>;
export declare function swapV2(args: SwapV2Args, accounts: SwapV2Accounts, remainingAccounts?: Array<IAccountMeta | IAccountSignerMeta>, programAddress?: Address): IInstruction;
//# sourceMappingURL=swapV2.d.ts.map
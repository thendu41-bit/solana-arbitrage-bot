import { Address, GetAccountInfoApi, GetMultipleAccountsApi, Rpc } from "@solana/kit";
export interface PositionBundleFields {
    positionBundleMint: Address;
    positionBitmap: Array<number>;
}
export interface PositionBundleJSON {
    positionBundleMint: string;
    positionBitmap: Array<number>;
}
export declare class PositionBundle {
    readonly positionBundleMint: Address;
    readonly positionBitmap: Array<number>;
    static readonly discriminator: Buffer<ArrayBuffer>;
    static readonly layout: import("buffer-layout").Layout<PositionBundle>;
    constructor(fields: PositionBundleFields);
    static fetch(rpc: Rpc<GetAccountInfoApi>, address: Address, programId?: Address): Promise<PositionBundle | null>;
    static fetchMultiple(rpc: Rpc<GetMultipleAccountsApi>, addresses: Address[], programId?: Address): Promise<Array<PositionBundle | null>>;
    static decode(data: Buffer): PositionBundle;
    toJSON(): PositionBundleJSON;
    static fromJSON(obj: PositionBundleJSON): PositionBundle;
}
//# sourceMappingURL=PositionBundle.d.ts.map
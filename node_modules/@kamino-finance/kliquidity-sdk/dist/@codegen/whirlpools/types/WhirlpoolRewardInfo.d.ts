import { Address } from "@solana/kit";
import BN from "bn.js";
import * as types from "../types";
export interface WhirlpoolRewardInfoFields {
    mint: Address;
    vault: Address;
    authority: Address;
    emissionsPerSecondX64: BN;
    growthGlobalX64: BN;
}
export interface WhirlpoolRewardInfoJSON {
    mint: string;
    vault: string;
    authority: string;
    emissionsPerSecondX64: string;
    growthGlobalX64: string;
}
export declare class WhirlpoolRewardInfo {
    readonly mint: Address;
    readonly vault: Address;
    readonly authority: Address;
    readonly emissionsPerSecondX64: BN;
    readonly growthGlobalX64: BN;
    constructor(fields: WhirlpoolRewardInfoFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.WhirlpoolRewardInfo;
    static toEncodable(fields: WhirlpoolRewardInfoFields): {
        mint: Address;
        vault: Address;
        authority: Address;
        emissionsPerSecondX64: BN;
        growthGlobalX64: BN;
    };
    toJSON(): WhirlpoolRewardInfoJSON;
    static fromJSON(obj: WhirlpoolRewardInfoJSON): WhirlpoolRewardInfo;
    toEncodable(): {
        mint: Address;
        vault: Address;
        authority: Address;
        emissionsPerSecondX64: BN;
        growthGlobalX64: BN;
    };
}
//# sourceMappingURL=WhirlpoolRewardInfo.d.ts.map
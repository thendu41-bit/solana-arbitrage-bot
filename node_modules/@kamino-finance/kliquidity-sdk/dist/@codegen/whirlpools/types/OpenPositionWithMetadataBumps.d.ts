import * as types from "../types";
export interface OpenPositionWithMetadataBumpsFields {
    positionBump: number;
    metadataBump: number;
}
export interface OpenPositionWithMetadataBumpsJSON {
    positionBump: number;
    metadataBump: number;
}
export declare class OpenPositionWithMetadataBumps {
    readonly positionBump: number;
    readonly metadataBump: number;
    constructor(fields: OpenPositionWithMetadataBumpsFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.OpenPositionWithMetadataBumps;
    static toEncodable(fields: OpenPositionWithMetadataBumpsFields): {
        positionBump: number;
        metadataBump: number;
    };
    toJSON(): OpenPositionWithMetadataBumpsJSON;
    static fromJSON(obj: OpenPositionWithMetadataBumpsJSON): OpenPositionWithMetadataBumps;
    toEncodable(): {
        positionBump: number;
        metadataBump: number;
    };
}
//# sourceMappingURL=OpenPositionWithMetadataBumps.d.ts.map
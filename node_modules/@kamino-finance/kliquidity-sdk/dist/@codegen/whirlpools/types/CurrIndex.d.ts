import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface BelowJSON {
    kind: "Below";
}
export declare class Below {
    static readonly discriminator = 0;
    static readonly kind = "Below";
    readonly discriminator = 0;
    readonly kind = "Below";
    toJSON(): BelowJSON;
    toEncodable(): {
        Below: {};
    };
}
export interface InsideJSON {
    kind: "Inside";
}
export declare class Inside {
    static readonly discriminator = 1;
    static readonly kind = "Inside";
    readonly discriminator = 1;
    readonly kind = "Inside";
    toJSON(): InsideJSON;
    toEncodable(): {
        Inside: {};
    };
}
export interface AboveJSON {
    kind: "Above";
}
export declare class Above {
    static readonly discriminator = 2;
    static readonly kind = "Above";
    readonly discriminator = 2;
    readonly kind = "Above";
    toJSON(): AboveJSON;
    toEncodable(): {
        Above: {};
    };
}
export declare function fromDecoded(obj: any): types.CurrIndexKind;
export declare function fromJSON(obj: types.CurrIndexJSON): types.CurrIndexKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=CurrIndex.d.ts.map
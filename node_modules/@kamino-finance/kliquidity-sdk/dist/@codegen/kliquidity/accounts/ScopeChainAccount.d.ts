import { Address, GetAccountInfoApi, GetMultipleAccountsApi, Rpc } from "@solana/kit";
export interface ScopeChainAccountFields {
    chainArray: Array<Array<number>>;
}
export interface ScopeChainAccountJSON {
    chainArray: Array<Array<number>>;
}
export declare class ScopeChainAccount {
    readonly chainArray: Array<Array<number>>;
    static readonly discriminator: Buffer<ArrayBuffer>;
    static readonly layout: import("buffer-layout").Layout<ScopeChainAccount>;
    constructor(fields: ScopeChainAccountFields);
    static fetch(rpc: Rpc<GetAccountInfoApi>, address: Address, programId?: Address): Promise<ScopeChainAccount | null>;
    static fetchMultiple(rpc: Rpc<GetMultipleAccountsApi>, addresses: Address[], programId?: Address): Promise<Array<ScopeChainAccount | null>>;
    static decode(data: Buffer): ScopeChainAccount;
    toJSON(): ScopeChainAccountJSON;
    static fromJSON(obj: ScopeChainAccountJSON): ScopeChainAccount;
}
//# sourceMappingURL=ScopeChainAccount.d.ts.map
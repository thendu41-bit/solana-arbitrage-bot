"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TickIndex = exports.SqrtPrice = exports.PoolPrice = void 0;
exports.fromDecoded = fromDecoded;
exports.fromJSON = fromJSON;
exports.layout = layout;
const bn_js_1 = __importDefault(require("bn.js")); // eslint-disable-line @typescript-eslint/no-unused-vars
const borsh = __importStar(require("@coral-xyz/borsh"));
class PoolPrice {
    static discriminator = 0;
    static kind = "PoolPrice";
    discriminator = 0;
    kind = "PoolPrice";
    toJSON() {
        return {
            kind: "PoolPrice",
        };
    }
    toEncodable() {
        return {
            PoolPrice: {},
        };
    }
}
exports.PoolPrice = PoolPrice;
class SqrtPrice {
    static discriminator = 1;
    static kind = "SqrtPrice";
    discriminator = 1;
    kind = "SqrtPrice";
    value;
    constructor(value) {
        this.value = [value[0]];
    }
    toJSON() {
        return {
            kind: "SqrtPrice",
            value: [this.value[0].toString()],
        };
    }
    toEncodable() {
        return {
            SqrtPrice: {
                _0: this.value[0],
            },
        };
    }
}
exports.SqrtPrice = SqrtPrice;
class TickIndex {
    static discriminator = 2;
    static kind = "TickIndex";
    discriminator = 2;
    kind = "TickIndex";
    value;
    constructor(value) {
        this.value = [value[0]];
    }
    toJSON() {
        return {
            kind: "TickIndex",
            value: [this.value[0]],
        };
    }
    toEncodable() {
        return {
            TickIndex: {
                _0: this.value[0],
            },
        };
    }
}
exports.TickIndex = TickIndex;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function fromDecoded(obj) {
    if (typeof obj !== "object") {
        throw new Error("Invalid enum object");
    }
    if ("PoolPrice" in obj) {
        return new PoolPrice();
    }
    if ("SqrtPrice" in obj) {
        const val = obj["SqrtPrice"];
        return new SqrtPrice([val["_0"]]);
    }
    if ("TickIndex" in obj) {
        const val = obj["TickIndex"];
        return new TickIndex([val["_0"]]);
    }
    throw new Error("Invalid enum object");
}
function fromJSON(obj) {
    switch (obj.kind) {
        case "PoolPrice": {
            return new PoolPrice();
        }
        case "SqrtPrice": {
            return new SqrtPrice([new bn_js_1.default(obj.value[0])]);
        }
        case "TickIndex": {
            return new TickIndex([obj.value[0]]);
        }
    }
}
function layout(property) {
    const ret = borsh.rustEnum([
        borsh.struct([], "PoolPrice"),
        borsh.struct([borsh.u128("_0")], "SqrtPrice"),
        borsh.struct([borsh.i32("_0")], "TickIndex"),
    ]);
    if (property !== undefined) {
        return ret.replicate(property);
    }
    return ret;
}
//# sourceMappingURL=SimulationPrice.js.map
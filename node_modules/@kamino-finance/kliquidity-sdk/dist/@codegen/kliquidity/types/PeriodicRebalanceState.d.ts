import BN from "bn.js";
import * as types from "../types";
export interface PeriodicRebalanceStateFields {
    lastRebalanceTimestamp: BN;
}
export interface PeriodicRebalanceStateJSON {
    lastRebalanceTimestamp: string;
}
export declare class PeriodicRebalanceState {
    readonly lastRebalanceTimestamp: BN;
    constructor(fields: PeriodicRebalanceStateFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.PeriodicRebalanceState;
    static toEncodable(fields: PeriodicRebalanceStateFields): {
        lastRebalanceTimestamp: BN;
    };
    toJSON(): PeriodicRebalanceStateJSON;
    static fromJSON(obj: PeriodicRebalanceStateJSON): PeriodicRebalanceState;
    toEncodable(): {
        lastRebalanceTimestamp: BN;
    };
}
//# sourceMappingURL=PeriodicRebalanceState.d.ts.map
import { Address, IAccountMeta, IAccountSignerMeta, IInstruction, Option, TransactionSigner } from "@solana/kit";
export interface CloseStrategyAccounts {
    adminAuthority: TransactionSigner;
    strategy: Address;
    oldPositionOrBaseVaultAuthority: Address;
    oldPositionMintOrBaseVaultAuthority: Address;
    oldPositionTokenAccountOrBaseVaultAuthority: Address;
    oldTickArrayLowerOrBaseVaultAuthority: Address;
    oldTickArrayUpperOrBaseVaultAuthority: Address;
    pool: Address;
    tokenAVault: Address;
    tokenBVault: Address;
    userTokenAAta: Address;
    userTokenBAta: Address;
    tokenAMint: Address;
    tokenBMint: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    reward0Vault: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    reward1Vault: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    reward2Vault: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    kaminoReward0Vault: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    kaminoReward1Vault: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    kaminoReward2Vault: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    userReward0Ata: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    userReward1Ata: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    userReward2Ata: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    userKaminoReward0Ata: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    userKaminoReward1Ata: Address;
    /** If rewards are uninitialized, pass this as strategy. */
    userKaminoReward2Ata: Address;
    baseVaultAuthority: Address;
    poolProgram: Address;
    tokenProgram: Address;
    tokenATokenProgram: Address;
    tokenBTokenProgram: Address;
    system: Address;
    eventAuthority: Option<Address>;
}
export declare function closeStrategy(accounts: CloseStrategyAccounts, remainingAccounts?: Array<IAccountMeta | IAccountSignerMeta>, programAddress?: Address): IInstruction;
//# sourceMappingURL=closeStrategy.d.ts.map
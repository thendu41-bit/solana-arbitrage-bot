import { Address, IAccountMeta, IAccountSignerMeta, IInstruction, TransactionSigner } from "@solana/kit";
import BN from "bn.js";
export interface EmergencySwapArgs {
    aToB: boolean;
    targetLimitBps: BN;
}
export interface EmergencySwapAccounts {
    adminAuthority: TransactionSigner;
    strategy: Address;
    globalConfig: Address;
    tokenAMint: Address;
    tokenBMint: Address;
    tokenAVault: Address;
    tokenBVault: Address;
    baseVaultAuthority: Address;
    pool: Address;
    position: Address;
    poolTokenVaultA: Address;
    poolTokenVaultB: Address;
    /** Payer must send this correctly. */
    tickArray0: Address;
    /** Payer must send this correctly. */
    tickArray1: Address;
    /** Payer must send this correctly. */
    tickArray2: Address;
    oracle: Address;
    poolProgram: Address;
    scopePrices: Address;
    tokenInfos: Address;
    tokenATokenProgram: Address;
    tokenBTokenProgram: Address;
    memoProgram: Address;
}
export declare const layout: import("buffer-layout").Layout<EmergencySwapArgs>;
export declare function emergencySwap(args: EmergencySwapArgs, accounts: EmergencySwapAccounts, remainingAccounts?: Array<IAccountMeta | IAccountSignerMeta>, programAddress?: Address): IInstruction;
//# sourceMappingURL=emergencySwap.d.ts.map
import { Address, IAccountMeta, IAccountSignerMeta, IInstruction, Option, TransactionSigner } from "@solana/kit";
import * as types from "../types";
export interface AddLiquidityOneSideArgs {
    liquidityParameter: types.LiquidityOneSideParameterFields;
}
export interface AddLiquidityOneSideAccounts {
    position: Address;
    lbPair: Address;
    binArrayBitmapExtension: Option<Address>;
    userToken: Address;
    reserve: Address;
    tokenMint: Address;
    binArrayLower: Address;
    binArrayUpper: Address;
    sender: TransactionSigner;
    tokenProgram: Address;
    eventAuthority: Address;
    program: Address;
}
export declare const layout: import("buffer-layout").Layout<AddLiquidityOneSideArgs>;
export declare function addLiquidityOneSide(args: AddLiquidityOneSideArgs, accounts: AddLiquidityOneSideAccounts, remainingAccounts?: Array<IAccountMeta | IAccountSignerMeta>, programAddress?: Address): IInstruction;
//# sourceMappingURL=addLiquidityOneSide.d.ts.map
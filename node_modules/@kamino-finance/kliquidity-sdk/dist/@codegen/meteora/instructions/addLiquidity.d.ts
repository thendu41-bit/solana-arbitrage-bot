import { Address, IAccountMeta, IAccountSignerMeta, IInstruction, Option, TransactionSigner } from "@solana/kit";
import * as types from "../types";
export interface AddLiquidityArgs {
    liquidityParameter: types.LiquidityParameterFields;
}
export interface AddLiquidityAccounts {
    position: Address;
    lbPair: Address;
    binArrayBitmapExtension: Option<Address>;
    userTokenX: Address;
    userTokenY: Address;
    reserveX: Address;
    reserveY: Address;
    tokenXMint: Address;
    tokenYMint: Address;
    binArrayLower: Address;
    binArrayUpper: Address;
    sender: TransactionSigner;
    tokenXProgram: Address;
    tokenYProgram: Address;
    eventAuthority: Address;
    program: Address;
}
export declare const layout: import("buffer-layout").Layout<AddLiquidityArgs>;
export declare function addLiquidity(args: AddLiquidityArgs, accounts: AddLiquidityAccounts, remainingAccounts?: Array<IAccountMeta | IAccountSignerMeta>, programAddress?: Address): IInstruction;
//# sourceMappingURL=addLiquidity.d.ts.map
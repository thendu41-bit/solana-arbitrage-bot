import BN from "bn.js";
import * as types from "../types";
export interface UserRewardInfoFields {
    rewardPerTokenCompletes: Array<BN>;
    rewardPendings: Array<BN>;
}
export interface UserRewardInfoJSON {
    rewardPerTokenCompletes: Array<string>;
    rewardPendings: Array<string>;
}
export declare class UserRewardInfo {
    readonly rewardPerTokenCompletes: Array<BN>;
    readonly rewardPendings: Array<BN>;
    constructor(fields: UserRewardInfoFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.UserRewardInfo;
    static toEncodable(fields: UserRewardInfoFields): {
        rewardPerTokenCompletes: BN[];
        rewardPendings: BN[];
    };
    toJSON(): UserRewardInfoJSON;
    static fromJSON(obj: UserRewardInfoJSON): UserRewardInfo;
    toEncodable(): {
        rewardPerTokenCompletes: BN[];
        rewardPendings: BN[];
    };
}
//# sourceMappingURL=UserRewardInfo.d.ts.map
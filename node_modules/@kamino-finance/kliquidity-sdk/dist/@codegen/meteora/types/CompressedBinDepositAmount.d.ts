import * as types from "../types";
export interface CompressedBinDepositAmountFields {
    binId: number;
    amount: number;
}
export interface CompressedBinDepositAmountJSON {
    binId: number;
    amount: number;
}
export declare class CompressedBinDepositAmount {
    readonly binId: number;
    readonly amount: number;
    constructor(fields: CompressedBinDepositAmountFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.CompressedBinDepositAmount;
    static toEncodable(fields: CompressedBinDepositAmountFields): {
        binId: number;
        amount: number;
    };
    toJSON(): CompressedBinDepositAmountJSON;
    static fromJSON(obj: CompressedBinDepositAmountJSON): CompressedBinDepositAmount;
    toEncodable(): {
        binId: number;
        amount: number;
    };
}
//# sourceMappingURL=CompressedBinDepositAmount.d.ts.map
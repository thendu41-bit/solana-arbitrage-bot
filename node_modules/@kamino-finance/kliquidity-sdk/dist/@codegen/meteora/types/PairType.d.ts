import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface PermissionlessJSON {
    kind: "Permissionless";
}
export declare class Permissionless {
    static readonly discriminator = 0;
    static readonly kind = "Permissionless";
    readonly discriminator = 0;
    readonly kind = "Permissionless";
    toJSON(): PermissionlessJSON;
    toEncodable(): {
        Permissionless: {};
    };
}
export interface PermissionJSON {
    kind: "Permission";
}
export declare class Permission {
    static readonly discriminator = 1;
    static readonly kind = "Permission";
    readonly discriminator = 1;
    readonly kind = "Permission";
    toJSON(): PermissionJSON;
    toEncodable(): {
        Permission: {};
    };
}
export declare function fromDecoded(obj: any): types.PairTypeKind;
export declare function fromJSON(obj: types.PairTypeJSON): types.PairTypeKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=PairType.d.ts.map
import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface SpotOneSideJSON {
    kind: "SpotOneSide";
}
export declare class SpotOneSide {
    static readonly discriminator = 0;
    static readonly kind = "SpotOneSide";
    readonly discriminator = 0;
    readonly kind = "SpotOneSide";
    toJSON(): SpotOneSideJSON;
    toEncodable(): {
        SpotOneSide: {};
    };
}
export interface CurveOneSideJSON {
    kind: "CurveOneSide";
}
export declare class CurveOneSide {
    static readonly discriminator = 1;
    static readonly kind = "CurveOneSide";
    readonly discriminator = 1;
    readonly kind = "CurveOneSide";
    toJSON(): CurveOneSideJSON;
    toEncodable(): {
        CurveOneSide: {};
    };
}
export interface BidAskOneSideJSON {
    kind: "BidAskOneSide";
}
export declare class BidAskOneSide {
    static readonly discriminator = 2;
    static readonly kind = "BidAskOneSide";
    readonly discriminator = 2;
    readonly kind = "BidAskOneSide";
    toJSON(): BidAskOneSideJSON;
    toEncodable(): {
        BidAskOneSide: {};
    };
}
export interface SpotBalancedJSON {
    kind: "SpotBalanced";
}
export declare class SpotBalanced {
    static readonly discriminator = 3;
    static readonly kind = "SpotBalanced";
    readonly discriminator = 3;
    readonly kind = "SpotBalanced";
    toJSON(): SpotBalancedJSON;
    toEncodable(): {
        SpotBalanced: {};
    };
}
export interface CurveBalancedJSON {
    kind: "CurveBalanced";
}
export declare class CurveBalanced {
    static readonly discriminator = 4;
    static readonly kind = "CurveBalanced";
    readonly discriminator = 4;
    readonly kind = "CurveBalanced";
    toJSON(): CurveBalancedJSON;
    toEncodable(): {
        CurveBalanced: {};
    };
}
export interface BidAskBalancedJSON {
    kind: "BidAskBalanced";
}
export declare class BidAskBalanced {
    static readonly discriminator = 5;
    static readonly kind = "BidAskBalanced";
    readonly discriminator = 5;
    readonly kind = "BidAskBalanced";
    toJSON(): BidAskBalancedJSON;
    toEncodable(): {
        BidAskBalanced: {};
    };
}
export interface SpotImBalancedJSON {
    kind: "SpotImBalanced";
}
export declare class SpotImBalanced {
    static readonly discriminator = 6;
    static readonly kind = "SpotImBalanced";
    readonly discriminator = 6;
    readonly kind = "SpotImBalanced";
    toJSON(): SpotImBalancedJSON;
    toEncodable(): {
        SpotImBalanced: {};
    };
}
export interface CurveImBalancedJSON {
    kind: "CurveImBalanced";
}
export declare class CurveImBalanced {
    static readonly discriminator = 7;
    static readonly kind = "CurveImBalanced";
    readonly discriminator = 7;
    readonly kind = "CurveImBalanced";
    toJSON(): CurveImBalancedJSON;
    toEncodable(): {
        CurveImBalanced: {};
    };
}
export interface BidAskImBalancedJSON {
    kind: "BidAskImBalanced";
}
export declare class BidAskImBalanced {
    static readonly discriminator = 8;
    static readonly kind = "BidAskImBalanced";
    readonly discriminator = 8;
    readonly kind = "BidAskImBalanced";
    toJSON(): BidAskImBalancedJSON;
    toEncodable(): {
        BidAskImBalanced: {};
    };
}
export declare function fromDecoded(obj: any): types.StrategyTypeKind;
export declare function fromJSON(obj: types.StrategyTypeJSON): types.StrategyTypeKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=StrategyType.d.ts.map
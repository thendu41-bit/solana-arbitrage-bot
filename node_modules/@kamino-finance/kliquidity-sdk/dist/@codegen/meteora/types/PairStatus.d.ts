import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface EnabledJSON {
    kind: "Enabled";
}
export declare class Enabled {
    static readonly discriminator = 0;
    static readonly kind = "Enabled";
    readonly discriminator = 0;
    readonly kind = "Enabled";
    toJSON(): EnabledJSON;
    toEncodable(): {
        Enabled: {};
    };
}
export interface DisabledJSON {
    kind: "Disabled";
}
export declare class Disabled {
    static readonly discriminator = 1;
    static readonly kind = "Disabled";
    readonly discriminator = 1;
    readonly kind = "Disabled";
    toJSON(): DisabledJSON;
    toEncodable(): {
        Disabled: {};
    };
}
export declare function fromDecoded(obj: any): types.PairStatusKind;
export declare function fromJSON(obj: types.PairStatusJSON): types.PairStatusKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=PairStatus.d.ts.map
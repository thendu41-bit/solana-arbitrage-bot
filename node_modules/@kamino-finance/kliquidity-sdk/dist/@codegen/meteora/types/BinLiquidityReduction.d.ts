import * as types from "../types";
export interface BinLiquidityReductionFields {
    binId: number;
    bpsToRemove: number;
}
export interface BinLiquidityReductionJSON {
    binId: number;
    bpsToRemove: number;
}
export declare class BinLiquidityReduction {
    readonly binId: number;
    readonly bpsToRemove: number;
    constructor(fields: BinLiquidityReductionFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.BinLiquidityReduction;
    static toEncodable(fields: BinLiquidityReductionFields): {
        binId: number;
        bpsToRemove: number;
    };
    toJSON(): BinLiquidityReductionJSON;
    static fromJSON(obj: BinLiquidityReductionJSON): BinLiquidityReduction;
    toEncodable(): {
        binId: number;
        bpsToRemove: number;
    };
}
//# sourceMappingURL=BinLiquidityReduction.d.ts.map
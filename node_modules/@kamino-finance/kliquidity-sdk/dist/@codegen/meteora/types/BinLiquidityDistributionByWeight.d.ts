import * as types from "../types";
export interface BinLiquidityDistributionByWeightFields {
    /** Define the bin ID wish to deposit to. */
    binId: number;
    /** weight of liquidity distributed for this bin id */
    weight: number;
}
export interface BinLiquidityDistributionByWeightJSON {
    /** Define the bin ID wish to deposit to. */
    binId: number;
    /** weight of liquidity distributed for this bin id */
    weight: number;
}
export declare class BinLiquidityDistributionByWeight {
    /** Define the bin ID wish to deposit to. */
    readonly binId: number;
    /** weight of liquidity distributed for this bin id */
    readonly weight: number;
    constructor(fields: BinLiquidityDistributionByWeightFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.BinLiquidityDistributionByWeight;
    static toEncodable(fields: BinLiquidityDistributionByWeightFields): {
        binId: number;
        weight: number;
    };
    toJSON(): BinLiquidityDistributionByWeightJSON;
    static fromJSON(obj: BinLiquidityDistributionByWeightJSON): BinLiquidityDistributionByWeight;
    toEncodable(): {
        binId: number;
        weight: number;
    };
}
//# sourceMappingURL=BinLiquidityDistributionByWeight.d.ts.map
import BN from "bn.js";
import * as types from "../types";
export interface ProtocolFeeFields {
    amountX: BN;
    amountY: BN;
}
export interface ProtocolFeeJSON {
    amountX: string;
    amountY: string;
}
export declare class ProtocolFee {
    readonly amountX: BN;
    readonly amountY: BN;
    constructor(fields: ProtocolFeeFields);
    static layout(property?: string): import("buffer-layout").Layout<unknown>;
    static fromDecoded(obj: any): types.ProtocolFee;
    static toEncodable(fields: ProtocolFeeFields): {
        amountX: BN;
        amountY: BN;
    };
    toJSON(): ProtocolFeeJSON;
    static fromJSON(obj: ProtocolFeeJSON): ProtocolFee;
    toEncodable(): {
        amountX: BN;
        amountY: BN;
    };
}
//# sourceMappingURL=ProtocolFee.d.ts.map
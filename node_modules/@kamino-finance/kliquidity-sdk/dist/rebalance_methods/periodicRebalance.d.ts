import Decimal from 'decimal.js';
import { PositionRange, RebalanceFieldInfo, RebalanceFieldsDict } from '../utils/types';
import { RebalanceRaw } from '../@codegen/kliquidity/types';
export declare const DEFAULT_LOWER_RANGE_PRICE_DIFF_BPS_PERIODIC_REBALANCE: Decimal;
export declare const DEFAULT_UPPER_RANGE_PRICE_DIFF_BPS_PERIODIC_REBALANCE: Decimal;
export declare const DEFAULT_REBALANCE_PERIOD: Decimal;
export declare const PeriodicRebalanceTypeName = "periodicRebalance";
export declare function getPeriodicRebalanceRebalanceFieldInfos(price: Decimal, period: Decimal, // seconds
lowerRangeBps: Decimal, upperRangeBps: Decimal, enabled?: boolean): RebalanceFieldInfo[];
export declare function getPositionRangeFromPeriodicRebalanceParams(price: Decimal, lowerPercentageBPS: Decimal, upperPercentageBPS: Decimal): PositionRange;
export declare function getDefaultPeriodicRebalanceFieldInfos(price: Decimal): RebalanceFieldInfo[];
export declare function readPeriodicRebalanceRebalanceParamsFromStrategy(rebalanceRaw: RebalanceRaw): RebalanceFieldsDict;
export declare function readPeriodicRebalanceRebalanceStateFromStrategy(rebalanceRaw: RebalanceRaw): RebalanceFieldsDict;
export declare function deserializePeriodicRebalanceFromOnchainParams(price: Decimal, rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
//# sourceMappingURL=periodicRebalance.d.ts.map
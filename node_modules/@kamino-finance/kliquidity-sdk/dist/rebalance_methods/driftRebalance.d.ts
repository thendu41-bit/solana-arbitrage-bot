import Decimal from 'decimal.js';
import { PositionRange, RebalanceFieldInfo, RebalanceFieldsDict } from '../utils/types';
import { Dex } from '../utils';
import { RebalanceRaw } from '../@codegen/kliquidity/types';
export declare const DEFAULT_TICKS_BELOW_MID: Decimal;
export declare const DEFAULT_TICKS_ABOVE_MID: Decimal;
export declare const DEFAULT_SECONDS_PER_TICK: Decimal;
export declare const DEFAULT_DIRECTION: Decimal;
export declare const DriftRebalanceTypeName = "drift";
export declare function getDriftRebalanceFieldInfos(dex: Dex, tickSpacing: number, tokenADecimals: number, tokenBDecimals: number, startMidTick: Decimal, ticksBelowMid: Decimal, ticksAboveMid: Decimal, secondsPerTick: Decimal, direction: Decimal, enabled?: boolean): RebalanceFieldInfo[];
export declare function getPositionRangeFromDriftParams(dex: Dex, tickSpacing: number, tokenADecimals: number, tokenBDecimals: number, startMidTick: Decimal, ticksBelowMid: Decimal, ticksAboveMid: Decimal): PositionRange;
export declare function getDefaultDriftRebalanceFieldInfos(dex: Dex, tickSpacing: number, price: Decimal, tokenADecimals: number, tokenBDecimals: number): RebalanceFieldInfo[];
export declare function readDriftRebalanceParamsFromStrategy(rebalanceRaw: RebalanceRaw): RebalanceFieldsDict;
export declare function readRawDriftRebalanceStateFromStrategy(rebalanceRaw: RebalanceRaw): RebalanceFieldsDict;
export declare function readDriftRebalanceStateFromStrategy(dex: Dex, tickSpacing: number, tokenADecimals: number, tokenBDecimals: number, rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
export declare function deserializeDriftRebalanceFromOnchainParams(dex: Dex, tickSpacing: number, tokenADecimals: number, tokenBDecimals: number, rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
export declare function deserializeDriftRebalanceWithStateOverride(dex: Dex, tickSpacing: number, tokenADecimals: number, tokenBDecimals: number, rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
//# sourceMappingURL=driftRebalance.d.ts.map
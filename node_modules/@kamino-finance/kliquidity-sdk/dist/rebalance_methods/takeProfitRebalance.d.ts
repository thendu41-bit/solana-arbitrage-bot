import Decimal from 'decimal.js';
import { PositionRange, RebalanceFieldInfo, RebalanceFieldsDict } from '../utils/types';
import { Dex } from '../utils';
import { RebalanceRaw } from '../@codegen/kliquidity/types';
export declare const DEFAULT_LOWER_RANGE_PRICE_DIFF_BPS: Decimal;
export declare const DEFAULT_UPPER_RANGE_PRICE_DIFF_BPS: Decimal;
export declare const DEFAULT_DESTINATION_TOKEN: Decimal;
export declare const TakeProfitRebalanceTypeName = "takeProfit";
export declare function getTakeProfitRebalanceFieldsInfos(lowerRangePrice: Decimal, upperRangePrice: Decimal, destinationToken: Decimal, enabled?: boolean): RebalanceFieldInfo[];
export declare function getPositionRangeFromTakeProfitParams(dex: Dex, tokenADecimals: number, tokenBDecimals: number, lowerSqrtPriceX64: Decimal, upperSqrtPriceX64: Decimal): PositionRange;
export declare function getDefaultTakeProfitRebalanceFieldsInfos(price: Decimal): RebalanceFieldInfo[];
export declare function readTakeProfitRebalanceParamsFromStrategy(tokenADecimals: number, tokenBDecimals: number, rebalanceRaw: RebalanceRaw): RebalanceFieldsDict;
export declare function readTakeProfitRebalanceStateFromStrategy(rebalanceRaw: RebalanceRaw): RebalanceFieldsDict;
export declare function deserializeTakeProfitRebalanceFromOnchainParams(tokenADecimals: number, tokenBDecimals: number, rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
//# sourceMappingURL=takeProfitRebalance.d.ts.map
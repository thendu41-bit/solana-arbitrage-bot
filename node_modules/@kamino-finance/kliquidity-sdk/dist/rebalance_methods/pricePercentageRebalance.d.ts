import Decimal from 'decimal.js';
import { PositionRange, RebalanceFieldInfo } from '../utils/types';
import { RebalanceRaw } from '../@codegen/kliquidity/types';
import { Dex } from '../utils';
export declare const PricePercentageRebalanceTypeName = "pricePercentage";
export declare function getPricePercentageRebalanceFieldInfos(poolPrice: Decimal, lowerPercentageBPS: Decimal, upperPercentageBPS: Decimal, enabled?: boolean): RebalanceFieldInfo[];
export declare function getPositionRangeFromPercentageRebalanceParams(price: Decimal, lowerPercentageBPS: Decimal, upperPercentageBPS: Decimal): PositionRange;
export declare function getDefaultPricePercentageRebalanceFieldInfos(price: Decimal): RebalanceFieldInfo[];
export declare function readPricePercentageRebalanceParamsFromStrategy(rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
export declare function readRawPricePercentageRebalanceStateFromStrategy(rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
export declare function readPricePercentageRebalanceStateFromStrategy(dex: Dex, tokenADecimals: number, tokenBDecimals: number, rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
export declare function deserializePricePercentageRebalanceFromOnchainParams(price: Decimal, rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
export declare function deserializePricePercentageRebalanceWithStateOverride(dex: Dex, tokenADecimals: number, tokenBDecimals: number, price: Decimal, rebalanceRaw: RebalanceRaw): RebalanceFieldInfo[];
//# sourceMappingURL=pricePercentageRebalance.d.ts.map
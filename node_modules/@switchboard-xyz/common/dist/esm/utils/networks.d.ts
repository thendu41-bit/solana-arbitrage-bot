import type { ChainConfig, ChainType, IChainNetworkConfig } from '../networks/types.js';
/**
 * Type assertion for whether the given chain is supported. Throws an error if Switchboard is not deployed on the target chain.
 * @param _chain - the target chain
 */
export declare const validateSupportedChain: (_chain: string) => ChainType;
/**
 * Return the chain config for a Switchboard implementation. Throws an error if Switchboard is not deployed on the target chain.
 * @param _chain - the target chain
 */
export declare const getSupportedChain: (_chain: string) => ChainConfig;
/**
 * Return the network config for a Switchboard deployment. Throws an error if Switchboard is not deployed on the target chain.
 * @param _chain - the target chain
 * @param _network - the target network
 */
export declare const getSupportedNetwork: (_chain: string, _network: string) => IChainNetworkConfig;
/**
 * Determines whether a given chain, network, and queue is managed by SwitchboardLabs
 * @param _chain - the target chain of the queue (Ex. solana or arbitrum)
 * @param _network - the target network of the queue (Ex. mainnet or testnet)
 * @param _queue - the address of the queue
 * @returns a boolean indicating whether the queue is operated by SwitchboardLabs
 */
export declare const isSwitchboardLabsQueue: (_chain: string, _network: string, _queue: string) => boolean;
//# sourceMappingURL=networks.d.ts.map
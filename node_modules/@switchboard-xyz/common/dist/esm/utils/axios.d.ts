declare class Headers {
    private headers;
    constructor(init?: [string, string][] | Record<string, string>);
    append(name: string, value: string): void;
    delete(name: string): void;
    get(name: string): string | null;
    has(name: string): boolean;
    set(name: string, value: string): void;
    forEach(callback: (value: string, key: string) => void): void;
}
declare class Response {
    private body;
    private init;
    constructor(body: string, init: {
        status: number;
        statusText: string;
        headers: Headers;
    });
    get ok(): boolean;
    get status(): number;
    get statusText(): string;
    get headers(): Headers;
    json(): Promise<any>;
    text(): Promise<string>;
}
export declare function fetch(input: string | URL | globalThis.Request, init?: RequestInit): Promise<Response>;
export {};
//# sourceMappingURL=axios.d.ts.map
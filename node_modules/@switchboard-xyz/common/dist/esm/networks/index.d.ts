import type { ChainConfig, ChainType, EvmChainIds, EvmChainType, IChainConfig, IEvmNetworkConfig } from './types.js';
import { type SwitchboardEvmNetworks, type SwitchboardNetworks } from './types.js';
/**
The default network configurations for each supported EVM chain.

```json
{
  "arbitrum": {
    "mainnet": {},
    "testnet": {}
  },
  "aurora": {
    "mainnet": {},
    "testnet": {}
  },
  "base": {
    "mainnet": {},
    "testnet": {}
  },
  "coredao": {
    "mainnet": {},
    "testnet": {}
  },
  "ethereum": {
    "mainnet": {},
    "testnet": {}
  },
  "optimism": {
    "mainnet": {},
    "testnet": {}
  }
}
```
 */
export declare const SWITCHBOARD_EVM_NETWORKS: SwitchboardEvmNetworks;
/** Type assertion for whether a given EVM chain is supported on the Switchboard Network. */
export declare function isSupportedEvmChain(chain: string): chain is EvmChainType;
export declare function getSupportedEvmChain(chain: string): IChainConfig;
/**
The default network configurations for each supported EVM chain.

```json
{
  42161: {
    "networkName": "Mainnet",
    "programId": "0xd54579539E1334E856b983745DA26BEc3efB3C4D",
    "attestationService": "0x316fBe540C719970E6427ccD8590d7E0a2814C5D",
    "authority": "0x127f24013CaADF770F4b514c86344dD4f38d80c2",
    "metadata": {
      "defaultRpcUrl": "https://arb1.arbitrum.io/rpc",
      "defaultExplorer": "https://arbiscan.io",
      "chainId": 42161
    },
  421613: {},
  1116: {},
  1114: {},
}
```
 */
export declare const SWITCHBOARD_EVM_CHAIN_IDS: Record<EvmChainIds, IEvmNetworkConfig>;
export declare function isSupportedChainId(chainId: number): chainId is EvmChainIds;
export declare function getSupportedEvmChainId(chainId: number): IEvmNetworkConfig;
/**
The default network configurations for each supported chain.

```json
{
  "aptos": {
    "mainnet": {},
    "testnet": {}
  },
  "near": {
    "mainnet": {},
    "testnet": {}
  },
  "solana": {
    "mainnet": {},
    "devnet": {}
  },
  "sui": {
    "mainnet": {},
    "testnet": {}
  },
  "arbitrum": {
    "mainnet": {},
    "testnet": {}
  },
  "coredao": {
    "mainnet": {},
    "testnet": {}
  },
}
```
 */
export declare const SWITCHBOARD_NETWORKS: SwitchboardNetworks;
/** Type assertion for whether a given chain is supported on the Switchboard Network. */
export declare function isSupportedChain(chain: string): chain is ChainType;
export declare function getSupportedChain(chain: string): ChainConfig;
export { SWITCHBOARD_APTOS_CONFIG as aptos, SWITCHBOARD_APTOS_MAINNET_CONFIG, SWITCHBOARD_APTOS_TESTNET_CONFIG, } from './aptos.js';
export { SWITCHBOARD_ARBITRUM_CONFIG as arbitrum, SWITCHBOARD_ARBITRUM_MAINNET_CONFIG, SWITCHBOARD_ARBITRUM_TESTNET_CONFIG, } from './arbitrum.js';
export { SWITCHBOARD_AURORA_CONFIG as aurora, SWITCHBOARD_AURORA_MAINNET_CONFIG, SWITCHBOARD_AURORA_TESTNET_CONFIG, } from './aurora.js';
export { SWITCHBOARD_BASE_CONFIG as base, SWITCHBOARD_BASE_MAINNET_CONFIG, SWITCHBOARD_BASE_TESTNET_CONFIG, } from './base.js';
export { SWITCHBOARD_COREDAO_CONFIG as coredao, SWITCHBOARD_COREDAO_MAINNET_CONFIG, SWITCHBOARD_COREDAO_TESTNET_CONFIG, } from './coredao.js';
export { SWITCHBOARD_ETHEREUM_CONFIG as ethereum, SWITCHBOARD_ETHEREUM_MAINNET_CONFIG, SWITCHBOARD_ETHEREUM_TESTNET_CONFIG, } from './ethereum.js';
export { SWITCHBOARD_NEAR_CONFIG as near, SWITCHBOARD_NEAR_MAINNET_CONFIG, SWITCHBOARD_NEAR_TESTNET_CONFIG, } from './near.js';
export { SWITCHBOARD_OPTIMISM_CONFIG as optimism, SWITCHBOARD_OPTIMISM_MAINNET_CONFIG, SWITCHBOARD_OPTIMISM_TESTNET_CONFIG, } from './optimism.js';
export { SWITCHBOARD_SOLANA_CONFIG as solana, SWITCHBOARD_SOLANA_DEVNET_CONFIG, SWITCHBOARD_SOLANA_MAINNET_CONFIG, } from './solana.js';
export { SWITCHBOARD_SUI_CONFIG as sui, SWITCHBOARD_SUI_MAINNET_CONFIG, SWITCHBOARD_SUI_TESTNET_CONFIG, } from './sui.js';
export * from './types.js';
export default SWITCHBOARD_NETWORKS;
//# sourceMappingURL=index.d.ts.map
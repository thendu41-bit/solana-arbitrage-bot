import type { FetchSignaturesConsensusResponse } from './CrossbarClient';
export declare class EVMUtils {
    /**
     * Convert fetch signatures consensus response to EVM-compatible bytes
     *
     * IMPORTANT: This function uses feed-level ECDSA signatures, NOT consensus signatures.
     * - Consensus signatures (oracle.signature) are used for the consensus protocol
     * - Feed signatures (oracle.feed_responses[].signature) are used for EVM verification
     *
     * Format expected by EVM contract parseFeedUpdateData:
     * - Timestamp (8 bytes)
     * - Feed count (1 byte)
     * - For each feed (49 bytes each):
     *   - Feed ID (32 bytes)
     *   - Value (16 bytes, int128)
     *   - Min oracle samples (1 byte)
     * - Signature count (1 byte)
     * - For each signature (65 bytes each):
     *   - Signature data (65 bytes: r + s + v)
     */
    static convertToEVMUpdateData(response: FetchSignaturesConsensusResponse): {
        updateData: string;
        feedCount: number;
        signatureCount: number;
        totalBytes: number;
    };
    /**
     * Convert hex string to bytes
     */
    private static hexToBytes;
    /**
     * Convert BigInt to bytes with specified length
     */
    private static bigIntToBytes;
    /**
     * Utility function to create EVM update data from consensus response
     * This can be used in other parts of your application
     */
    static createEVMUpdateDataFromConsensus(response: FetchSignaturesConsensusResponse): {
        updateData: string;
        feedCount: number;
        signatureCount: number;
        totalBytes: number;
    };
}
//# sourceMappingURL=evm-utils.d.ts.map
{"version":3,"file":"lookupTable.js","sourceRoot":"","sources":["../../../src/utils/lookupTable.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAC;AAE5C,MAAM,UAAU,YAAY,CAC1B,SAAyB,EACzB,MAAsB;IAEtB,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAC1C,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,EAC7C,SAAS,CACV,CAAC,CAAC,CAAC,CAAC;AACP,CAAC;AAED,MAAM,UAAU,SAAS,CACvB,SAAyB,EACzB,OAAoB;IAEpB,MAAM,MAAM,GAAG,IAAI,CAAC,yBAAyB,CAAC,iBAAiB,CAAC;QAC9D,SAAS,EAAE,SAAS;QACpB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;QAC7B,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;KACvC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import type { BN } from '@coral-xyz/anchor-31';\nimport { web3 } from '@coral-xyz/anchor-31';\n\nexport function getLutSigner(\n  programId: web3.PublicKey,\n  pubkey: web3.PublicKey\n): web3.PublicKey {\n  return web3.PublicKey.findProgramAddressSync(\n    [Buffer.from('LutSigner'), pubkey.toBuffer()],\n    programId\n  )[0];\n}\n\nexport function getLutKey(\n  lutSigner: web3.PublicKey,\n  lutSlot: number | BN\n): web3.PublicKey {\n  const lutKey = web3.AddressLookupTableProgram.createLookupTable({\n    authority: lutSigner,\n    payer: web3.PublicKey.default,\n    recentSlot: BigInt(lutSlot.toString()),\n  })[1];\n  return lutKey;\n}\n"]}
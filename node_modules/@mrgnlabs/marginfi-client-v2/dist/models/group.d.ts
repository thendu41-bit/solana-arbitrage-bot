import { PublicKey } from "@solana/web3.js";
import { InstructionsWrapper } from "@mrgnlabs/mrgn-common";
import { MarginfiIdlType } from "../idl";
import { MarginfiProgram } from "../types";
import { BankConfigOpt, BankConfigOptRaw, MarginfiGroupRaw, MarginfiGroupType } from "../services";
declare class MarginfiGroup implements MarginfiGroupType {
    address: PublicKey;
    admin: PublicKey;
    constructor(admin: PublicKey, address: PublicKey);
    static fromAccountParsed(address: PublicKey, accountData: MarginfiGroupRaw): MarginfiGroup;
    static fromBuffer(address: PublicKey, rawData: Buffer, idl: MarginfiIdlType): MarginfiGroup;
    static decode(encoded: Buffer, idl: MarginfiIdlType): MarginfiGroupRaw;
    static encode(decoded: MarginfiGroupRaw, idl: MarginfiIdlType): Promise<Buffer>;
    makePoolConfigureBankIx(program: MarginfiProgram, bank: PublicKey, args: BankConfigOptRaw): Promise<InstructionsWrapper>;
    makeAddPermissionlessStakedBankIx(program: MarginfiProgram, voteAccountAddress: PublicKey, feePayer: PublicKey, pythOracle: PublicKey): Promise<InstructionsWrapper>;
    makePoolAddBankIx(program: MarginfiProgram, bankPubkey: PublicKey, bankMint: PublicKey, bankConfig: BankConfigOpt, feePayer?: PublicKey): Promise<InstructionsWrapper>;
}
export { MarginfiGroup };
//# sourceMappingURL=group.d.ts.map
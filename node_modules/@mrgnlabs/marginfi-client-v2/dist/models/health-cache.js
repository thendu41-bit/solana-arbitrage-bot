"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HealthCache = void 0;
const services_1 = require("../services");
const mrgn_common_1 = require("@mrgnlabs/mrgn-common");
class HealthCache {
    constructor(assetValue, liabilityValue, assetValueMaint, liabilityValueMaint, assetValueEquity, liabilityValueEquity, timestamp, flags, prices, simulationFailed) {
        this.assetValue = assetValue;
        this.liabilityValue = liabilityValue;
        this.assetValueMaint = assetValueMaint;
        this.liabilityValueMaint = liabilityValueMaint;
        this.assetValueEquity = assetValueEquity;
        this.liabilityValueEquity = liabilityValueEquity;
        this.timestamp = timestamp;
        this.flags = flags;
        this.prices = prices;
        this.simulationFailed = simulationFailed;
        this.assetValue = assetValue;
        this.liabilityValue = liabilityValue;
        this.assetValueMaint = assetValueMaint;
        this.liabilityValueMaint = liabilityValueMaint;
        this.assetValueEquity = assetValueEquity;
        this.liabilityValueEquity = liabilityValueEquity;
        this.timestamp = timestamp;
        this.flags = flags;
        this.prices = prices;
        this.simulationFailed = simulationFailed;
    }
    static from(healthCacheRaw) {
        const assetValue = (0, mrgn_common_1.wrappedI80F48toBigNumber)(healthCacheRaw.assetValue);
        const liabilityValue = (0, mrgn_common_1.wrappedI80F48toBigNumber)(healthCacheRaw.liabilityValue);
        const assetValueMaint = (0, mrgn_common_1.wrappedI80F48toBigNumber)(healthCacheRaw.assetValueMaint);
        const liabilityValueMaint = (0, mrgn_common_1.wrappedI80F48toBigNumber)(healthCacheRaw.liabilityValueMaint);
        const assetValueEquity = (0, mrgn_common_1.wrappedI80F48toBigNumber)(healthCacheRaw.assetValueEquity);
        const liabilityValueEquity = (0, mrgn_common_1.wrappedI80F48toBigNumber)(healthCacheRaw.liabilityValueEquity);
        const timestamp = (0, mrgn_common_1.toBigNumber)(healthCacheRaw.timestamp);
        const flags = (0, services_1.getActiveHealthCacheFlags)(healthCacheRaw.flags);
        const prices = healthCacheRaw.prices;
        return new HealthCache(assetValue, liabilityValue, assetValueMaint, liabilityValueMaint, assetValueEquity, liabilityValueEquity, timestamp, flags, prices);
    }
}
exports.HealthCache = HealthCache;

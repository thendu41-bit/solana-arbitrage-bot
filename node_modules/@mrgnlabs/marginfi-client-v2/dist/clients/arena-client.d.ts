import { AddressLookupTableAccount, PublicKey, TransactionSignature } from "@solana/web3.js";
import { BankMetadataMap, SolanaTransaction, TransactionOptions, Wallet } from "@mrgnlabs/mrgn-common";
import { MarginfiGroup } from "../models/group";
import { MarginfiConfig, MarginfiProgram } from "../types";
import { PythPushFeedIdMap } from "../utils";
import { ProcessTransactionStrategy, ProcessTransactionsClientOpts } from "../services";
import { MarginfiClient, BankMap, OraclePriceMap, MintDataMap } from "..";
declare class ArenaClient extends MarginfiClient {
    constructor(config: MarginfiConfig, program: MarginfiProgram, wallet: Wallet, isReadOnly: boolean, group: MarginfiGroup, banks: BankMap, priceInfos: OraclePriceMap, mintDatas: MintDataMap, feedIdMap: PythPushFeedIdMap, addressLookupTables?: AddressLookupTableAccount[], preloadedBankAddresses?: PublicKey[], bankMetadataMap?: BankMetadataMap, bundleSimRpcEndpoint?: string, processTransactionStrategy?: ProcessTransactionStrategy, lookupTablesAddresses?: PublicKey[]);
    processTransaction(transaction: SolanaTransaction, processOpts?: ProcessTransactionsClientOpts, txOpts?: TransactionOptions): Promise<TransactionSignature>;
    processTransactions(transactions: SolanaTransaction[], processOpts?: ProcessTransactionsClientOpts, txOpts?: TransactionOptions): Promise<TransactionSignature[]>;
}
export default ArenaClient;
//# sourceMappingURL=arena-client.d.ts.map
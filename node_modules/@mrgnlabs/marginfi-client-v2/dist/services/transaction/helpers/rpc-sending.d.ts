import { VersionedTransaction, TransactionSignature, Connection, Commitment } from "@solana/web3.js";
import { TransactionOptions } from "@mrgnlabs/mrgn-common";
type SendTransactionAsRpcProps = {
    versionedTransactions: VersionedTransaction[];
    connection: Connection;
    blockStrategy: {
        blockhash: string;
        lastValidBlockHeight: number;
    };
    isSequentialTxs: boolean;
    confirmCommitment?: Commitment;
    txOpts?: TransactionOptions;
    throwError?: boolean;
    onCallback?: (index: number, success: boolean, sig: string) => void;
};
export declare function sendTransactionAsBundleRpc({ versionedTransactions, txOpts, connection, onCallback, blockStrategy, confirmCommitment, isSequentialTxs, throwError, }: SendTransactionAsRpcProps): Promise<TransactionSignature[]>;
export {};
//# sourceMappingURL=rpc-sending.d.ts.map
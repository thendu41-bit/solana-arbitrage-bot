import { PublicKey, VersionedTransaction } from "@solana/web3.js";
import { TransactionBroadcastType, SolanaTransaction } from "@mrgnlabs/mrgn-common";
export declare const MAX_TX_SIZE = 1232;
export declare const BUNDLE_TX_SIZE = 81;
export declare const PRIORITY_TX_SIZE = 44;
export declare function isFlashloan(tx: SolanaTransaction): boolean;
export declare function isSecp256k1(tx: SolanaTransaction): boolean;
type FeeSettings = {
    priorityFeeMicro: number;
    bundleTipUi: number;
    feePayer: PublicKey;
    maxCapUi?: number;
};
/**
 * Formats a list of Solana transactions into versioned transactions, applying
 * necessary settings such as fees and blockhash. Optionally adds transaction tags.
 *
 * @param {SolanaTransaction[]} transactionsArg - The array of Solana transactions to format.
 * @param {TransactionBroadcastType} broadcastType - The type of transaction broadcast to use.
 * @param {string} blockhash - The recent blockhash to set for the transactions.
 * @param {FeeSettings} feeSettings - The settings for transaction fees, including priority fee and bundle tip.
 * @param {boolean} [addTransactionTags] - Optional flag to add transaction tags.
 * @returns {VersionedTransaction[]} - The array of formatted versioned transactions.
 */
export declare function formatTransactions(transactionsArg: SolanaTransaction[], broadcastType: TransactionBroadcastType, blockhash: string, feeSettings: FeeSettings, addTransactionTags?: boolean): VersionedTransaction[];
export {};
//# sourceMappingURL=tx-formatting.d.ts.map
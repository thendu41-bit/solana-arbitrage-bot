"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.accountFlagToBN = accountFlagToBN;
exports.marginfiAccountToDto = marginfiAccountToDto;
exports.balanceToDto = balanceToDto;
exports.healthCacheToDto = healthCacheToDto;
const bn_js_1 = __importDefault(require("bn.js"));
/**
 * Convert numeric flag to BN for Solana compatibility
 */
function accountFlagToBN(flag) {
    return new bn_js_1.default(flag);
}
function marginfiAccountToDto(marginfiAccount) {
    return {
        address: marginfiAccount.address.toBase58(),
        group: marginfiAccount.group.toBase58(),
        authority: marginfiAccount.authority.toBase58(),
        balances: marginfiAccount.balances.map(balanceToDto),
        accountFlags: marginfiAccount.accountFlags,
        emissionsDestinationAccount: marginfiAccount.emissionsDestinationAccount.toBase58(),
        healthCache: healthCacheToDto(marginfiAccount.healthCache),
    };
}
function balanceToDto(balance) {
    return {
        active: balance.active,
        bankPk: balance.bankPk.toBase58(),
        assetShares: balance.assetShares.toString(),
        liabilityShares: balance.liabilityShares.toString(),
        emissionsOutstanding: balance.emissionsOutstanding.toString(),
        lastUpdate: balance.lastUpdate,
    };
}
function healthCacheToDto(healthCache) {
    return {
        assetValue: healthCache.assetValue.toString(),
        liabilityValue: healthCache.liabilityValue.toString(),
        assetValueMaint: healthCache.assetValueMaint.toString(),
        liabilityValueMaint: healthCache.liabilityValueMaint.toString(),
        assetValueEquity: healthCache.assetValueEquity.toString(),
        liabilityValueEquity: healthCache.liabilityValueEquity.toString(),
        timestamp: healthCache.timestamp.toString(),
        flags: healthCache.flags,
        prices: healthCache.prices,
        simulationFailed: healthCache.simulationFailed,
    };
}

import { BankConfigOptRaw, RiskTierRaw, BankConfigOpt, RiskTier, OperationalState, OracleSetup, OracleSetupRaw, BankTypeDto, BankType, EmodeSettingsDto, EmodeSettingsType, BankConfigType, BankConfigDto, InterestRateConfigDto, InterestRateConfig, BankRaw, BankRawDto, BankConfigRaw, BankConfigRawDto, EmodeSettingsRaw, EmodeSettingsRawDto } from "../types";
declare function serializeBankConfigOpt(bankConfigOpt: BankConfigOpt): BankConfigOptRaw;
declare function serializeRiskTier(riskTier: RiskTier): RiskTierRaw;
declare function serializeOperationalState(operationalState: OperationalState): {
    paused: {};
} | {
    operational: {};
} | {
    reduceOnly: {};
};
declare function serializeOracleSetupToIndex(oracleSetup: OracleSetup): number;
declare function serializeOracleSetup(oracleSetup: OracleSetup): OracleSetupRaw;
declare function toBankDto(bank: BankType): BankTypeDto;
declare function toEmodeSettingsDto(emodeSettings: EmodeSettingsType): EmodeSettingsDto;
declare function toBankConfigDto(bankConfig: BankConfigType): BankConfigDto;
declare function toInterestRateConfigDto(interestRateConfig: InterestRateConfig): InterestRateConfigDto;
export declare function bankRawToDto(bankRaw: BankRaw): BankRawDto;
export declare function emodeSettingsRawToDto(emodeSettingsRaw: EmodeSettingsRaw): EmodeSettingsRawDto;
export declare function bankConfigRawToDto(bankConfigRaw: BankConfigRaw): BankConfigRawDto;
export { serializeOracleSetupToIndex, serializeBankConfigOpt, serializeRiskTier, serializeOperationalState, serializeOracleSetup, toBankDto, toEmodeSettingsDto, toBankConfigDto, toInterestRateConfigDto, };
//# sourceMappingURL=serialize.utils.d.ts.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchMultipleBanks = void 0;
const web3_js_1 = require("@solana/web3.js");
const fetchMultipleBanks = async (program, opts) => {
    let bankDatas = [];
    if (opts?.bankAddresses && opts.bankAddresses.length > 0) {
        const addresses = opts.bankAddresses;
        const data = await program.account.bank.fetchMultiple(addresses);
        data.forEach((d, idx) => {
            if (d) {
                bankDatas.push({ address: new web3_js_1.PublicKey(addresses[idx]), data: d });
            }
            else {
                console.error(`Bank ${addresses[idx]} not found`);
            }
        });
    }
    else {
        const bankOpts = opts?.groupAddress
            ? [{ memcmp: { offset: 8 + 32 + 1, bytes: opts.groupAddress.toBase58() } }]
            : [];
        const data = await program.account.bank.all(bankOpts);
        bankDatas = data.map((d) => ({ address: d.publicKey, data: d.account }));
    }
    return bankDatas;
};
exports.fetchMultipleBanks = fetchMultipleBanks;

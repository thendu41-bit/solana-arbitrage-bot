import BigNumber from "bignumber.js";
import { Amount } from "@mrgnlabs/mrgn-common";
import { BankType, BankConfigType } from "../types";
import { MarginRequirementType } from "../../../models/account";
import { OraclePrice, PriceBias } from "../../price";
export declare function computeMaxLeverage(depositBank: BankType, borrowBank: BankType, opts?: {
    assetWeightInit?: BigNumber;
    liabilityWeightInit?: BigNumber;
}): {
    maxLeverage: number;
    ltv: number;
};
export declare function computeLoopingParams(principal: Amount, targetLeverage: number, depositBank: BankType, borrowBank: BankType, depositOracleInfo: OraclePrice, borrowOracleInfo: OraclePrice, opts?: {
    assetWeightInit?: BigNumber;
    liabilityWeightInit?: BigNumber;
}): {
    borrowAmount: BigNumber;
    totalDepositAmount: BigNumber;
};
/** Small getters */
export declare function getTotalAssetQuantity(bank: BankType): BigNumber;
export declare function getTotalLiabilityQuantity(bank: BankType): BigNumber;
export declare function getAssetQuantity(bank: BankType, assetShares: BigNumber): BigNumber;
export declare function getLiabilityQuantity(bank: BankType, liabilityShares: BigNumber): BigNumber;
export declare function getAssetShares(bank: BankType, assetQuantity: BigNumber): BigNumber;
export declare function getLiabilityShares(bank: BankType, liabilityQuantity: BigNumber): BigNumber;
export declare function getAssetWeight(bank: BankType, marginRequirementType: MarginRequirementType, oraclePrice: OraclePrice, opts?: {
    ignoreSoftLimits?: boolean;
    assetWeightInitOverride?: BigNumber;
}): BigNumber;
export declare function getLiabilityWeight(config: BankConfigType, marginRequirementType: MarginRequirementType): BigNumber;
/** Computes  */
export declare function computeLiabilityUsdValue(bank: BankType, oraclePrice: OraclePrice, liabilityShares: BigNumber, marginRequirementType: MarginRequirementType, priceBias: PriceBias): BigNumber;
export declare function computeAssetUsdValue(bank: BankType, oraclePrice: OraclePrice, assetShares: BigNumber, marginRequirementType: MarginRequirementType, priceBias: PriceBias): BigNumber;
export declare function computeUsdValue(bank: BankType, oraclePrice: OraclePrice, quantity: BigNumber, priceBias: PriceBias, weightedPrice: boolean, weight?: BigNumber, scaleToBase?: boolean): BigNumber;
export declare function computeTvl(bank: BankType, oraclePrice: OraclePrice): BigNumber;
export declare function computeInterestRates(bank: BankType): {
    lendingRate: BigNumber;
    borrowingRate: BigNumber;
};
export declare function computeBaseInterestRate(bank: BankType): BigNumber;
export declare function computeUtilizationRate(bank: BankType): BigNumber;
export declare function computeRemainingCapacity(bank: BankType): {
    depositCapacity: BigNumber;
    borrowCapacity: BigNumber;
};
//# sourceMappingURL=compute.utils.d.ts.map
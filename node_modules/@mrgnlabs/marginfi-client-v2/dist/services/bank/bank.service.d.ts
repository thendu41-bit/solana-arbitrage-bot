import { PublicKey } from "@solana/web3.js";
import { Provider } from "@coral-xyz/anchor";
import { InstructionsWrapper } from "@mrgnlabs/mrgn-common";
import { InstructionWithEphemeralSigners } from "../../vendor/pyth_crank";
import { BankConfigOpt, OracleSetup } from "./types";
import { MarginfiProgram } from "../../types";
export declare function freezeBankConfigIx(program: MarginfiProgram, bankAddress: PublicKey, bankConfigOpt: BankConfigOpt): Promise<InstructionsWrapper>;
type AddOracleToBanksIxArgs = {
    program: MarginfiProgram;
    bankAddress: PublicKey;
    feedId: PublicKey;
    oracleKey?: PublicKey;
    setup: OracleSetup;
    groupAddress?: PublicKey;
    adminAddress?: PublicKey;
};
export declare function addOracleToBanksIx({ program, bankAddress, feedId, oracleKey, setup, groupAddress, adminAddress, }: AddOracleToBanksIxArgs): Promise<InstructionsWrapper>;
/**
 * Derive the address of a price feed account
 * @param shardId The shard ID of the set of price feed accounts. This shard ID allows for multiple price feed accounts for the same price feed id to exist.
 * @param priceFeedId The price feed ID, as either a 32-byte buffer or hexadecimal string with or without a leading "0x" prefix.
 * @param pushOracleProgramId The program ID of the Pyth Push Oracle program. If not provided, the default deployment will be used.
 * @returns The address of the price feed account
 */
export declare function getPriceFeedAccountForProgram(shardId: number, priceFeedId: Buffer | string, pushOracleProgramId?: PublicKey): PublicKey;
export declare const getTreasuryPda: (treasuryId: number, receiverProgramId: PublicKey) => PublicKey;
export declare const getConfigPda: (receiverProgramId: PublicKey) => PublicKey;
export declare function crankPythOracleIx(oracles: {
    feedId: string;
    shardId: number;
}[], provider: Provider): Promise<{
    postInstructions: InstructionWithEphemeralSigners[];
    closeInstructions: InstructionWithEphemeralSigners[];
    keys: never[];
    lut: import("@solana/web3.js").AddressLookupTableAccount | null;
}>;
export {};
//# sourceMappingURL=bank.service.d.ts.map
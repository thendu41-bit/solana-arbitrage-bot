import { Connection, PublicKey, Transaction, TransactionInstruction } from "@solana/web3.js";
import BigNumber from "bignumber.js";
declare const SinglePoolInstruction: {
    initializePool: (voteAccount: PublicKey) => TransactionInstruction;
    initializeOnRamp: (pool: PublicKey) => TransactionInstruction;
    depositStake: (pool: PublicKey, userStakeAccount: PublicKey, userTokenAccount: PublicKey, userLamportAccount: PublicKey) => Promise<TransactionInstruction>;
    withdrawStake: (pool: PublicKey, userStakeAccount: PublicKey, userStakeAuthority: PublicKey, userTokenAccount: PublicKey, tokenAmount: BigNumber) => Promise<TransactionInstruction>;
    createTokenMetadata: (pool: PublicKey, payer: PublicKey) => Promise<TransactionInstruction>;
    updateTokenMetadata: (voteAccount: PublicKey, authorizedWithdrawer: PublicKey, tokenName: string, tokenSymbol: string, tokenUri?: string) => Promise<TransactionInstruction>;
};
declare const findPoolMintAddressByVoteAccount: (voteAccountAddress: PublicKey) => PublicKey;
declare const findPoolAddress: (voteAccountAddress: PublicKey) => PublicKey;
declare const findPoolMintAddress: (poolAddress: PublicKey) => PublicKey;
declare const findPoolStakeAddress: (poolAddress: PublicKey) => PublicKey;
declare const findPoolStakeAuthorityAddress: (poolAddress: PublicKey) => PublicKey;
declare const findPoolMintAuthorityAddress: (poolAddress: PublicKey) => PublicKey;
declare const findPoolMplAuthorityAddress: (poolAddress: PublicKey) => PublicKey;
declare const findPoolOnRampAddress: (poolAddress: PublicKey) => PublicKey;
declare const findMplMetadataAddress: (poolMintAddress: PublicKey) => Promise<PublicKey>;
declare function initializeStakedPoolTx(connection: Connection, payer: PublicKey, voteAccountAddress: PublicKey): Promise<Transaction>;
declare function initializeStakedPoolIxs(connection: Connection, payer: PublicKey, voteAccountAddress: PublicKey): Promise<TransactionInstruction[]>;
declare const createAccountIx: (from: PublicKey, newAccount: PublicKey, lamports: number, space: number, programAddress: PublicKey) => TransactionInstruction;
declare const createPoolOnrampIx: (voteAccount: PublicKey) => TransactionInstruction;
declare const replenishPoolIx: (voteAccount: PublicKey) => TransactionInstruction;
export { SinglePoolInstruction, initializeStakedPoolIxs, initializeStakedPoolTx, findPoolAddress, findPoolMintAddress, findPoolStakeAddress, findPoolStakeAuthorityAddress, findPoolMintAuthorityAddress, findPoolMplAuthorityAddress, findMplMetadataAddress, findPoolOnRampAddress, findPoolMintAddressByVoteAccount, createAccountIx, createPoolOnrampIx, replenishPoolIx, };
//# sourceMappingURL=index.d.ts.map
{"version":3,"sources":["../../../src/raydium/cpmm/type.ts"],"sourcesContent":["import { EpochInfo, PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\nimport Decimal from \"decimal.js\";\nimport { ApiCpmmConfigInfo, ApiV3PoolInfoStandardItemCpmm, ApiV3Token, CpmmKeys } from \"../../api/type\";\nimport { TxVersion } from \"../../common/txTool/txType\";\nimport { Percent } from \"../../module\";\nimport { ComputeBudgetConfig, GetTransferAmountFee, TxTipConfig } from \"../../raydium/type\";\nimport { SwapResult } from \"./curve/calculator\";\nimport { CpmmPoolInfoLayout } from \"./layout\";\n\nexport interface CpmmConfigInfoInterface {\n  bump: number;\n  disableCreatePool: boolean;\n  index: number;\n  tradeFeeRate: BN;\n  protocolFeeRate: BN;\n  fundFeeRate: BN;\n  createPoolFee: BN;\n\n  protocolOwner: PublicKey;\n  fundOwner: PublicKey;\n}\n\nexport interface CpmmPoolInfoInterface {\n  configId: PublicKey;\n  poolCreator: PublicKey;\n  vaultA: PublicKey;\n  vaultB: PublicKey;\n\n  mintLp: PublicKey;\n  mintA: PublicKey;\n  mintB: PublicKey;\n\n  mintProgramA: PublicKey;\n  mintProgramB: PublicKey;\n\n  observationId: PublicKey;\n\n  bump: number;\n  status: number;\n\n  lpDecimals: number;\n  mintDecimalA: number;\n  mintDecimalB: number;\n\n  lpAmount: BN;\n  protocolFeesMintA: BN;\n  protocolFeesMintB: BN;\n  fundFeesMintA: BN;\n  fundFeesMintB: BN;\n  openTime: BN;\n}\n\nexport interface CreateCpmmPoolParam<T> {\n  poolId?: PublicKey;\n  programId: PublicKey;\n  poolFeeAccount: PublicKey;\n  mintA: Pick<ApiV3Token, \"address\" | \"decimals\" | \"programId\">;\n  mintB: Pick<ApiV3Token, \"address\" | \"decimals\" | \"programId\">;\n  mintAAmount: BN;\n  mintBAmount: BN;\n  startTime: BN;\n  feeConfig: ApiCpmmConfigInfo;\n\n  associatedOnly: boolean;\n  checkCreateATAOwner?: boolean;\n\n  ownerInfo: {\n    feePayer?: PublicKey;\n    useSOLBalance?: boolean; // if has WSOL mint\n  };\n  computeBudgetConfig?: ComputeBudgetConfig;\n  txVersion?: T;\n  txTipConfig?: TxTipConfig;\n  feePayer?: PublicKey;\n}\n\nexport interface CreateCpmmPoolAddress {\n  poolId: PublicKey;\n  configId: PublicKey;\n  authority: PublicKey;\n  lpMint: PublicKey;\n  vaultA: PublicKey;\n  vaultB: PublicKey;\n  observationId: PublicKey;\n  mintA: ApiV3Token;\n  mintB: ApiV3Token;\n  programId: PublicKey;\n  poolFeeAccount: PublicKey;\n  feeConfig: ApiCpmmConfigInfo;\n}\n\nexport interface AddCpmmLiquidityParams<T = TxVersion.LEGACY> {\n  poolInfo: ApiV3PoolInfoStandardItemCpmm;\n  poolKeys?: CpmmKeys;\n  payer?: PublicKey;\n  inputAmount: BN;\n  baseIn: boolean;\n  slippage: Percent;\n  config?: {\n    bypassAssociatedCheck?: boolean;\n    checkCreateATAOwner?: boolean;\n  };\n  computeBudgetConfig?: ComputeBudgetConfig;\n  txTipConfig?: TxTipConfig;\n  txVersion?: T;\n  computeResult?: {\n    inputAmountFee: GetTransferAmountFee;\n    anotherAmount: GetTransferAmountFee;\n    maxAnotherAmount: GetTransferAmountFee;\n    liquidity: BN;\n  };\n  feePayer?: PublicKey;\n}\n\nexport interface WithdrawCpmmLiquidityParams<T = TxVersion.LEGACY> {\n  poolInfo: ApiV3PoolInfoStandardItemCpmm;\n  poolKeys?: CpmmKeys;\n  payer?: PublicKey;\n  lpAmount: BN;\n  slippage: Percent;\n  computeBudgetConfig?: ComputeBudgetConfig;\n  txTipConfig?: TxTipConfig;\n  txVersion?: T;\n  feePayer?: PublicKey;\n  closeWsol?: boolean;\n}\n\nexport interface CpmmSwapParams<T = TxVersion.LEGACY> {\n  poolInfo: ApiV3PoolInfoStandardItemCpmm;\n  poolKeys?: CpmmKeys;\n  payer?: PublicKey;\n  baseIn: boolean;\n  fixedOut?: boolean;\n  slippage?: number;\n  swapResult: Pick<SwapResult, \"sourceAmountSwapped\" | \"destinationAmountSwapped\">;\n  inputAmount: BN;\n\n  config?: {\n    bypassAssociatedCheck?: boolean;\n    checkCreateATAOwner?: boolean;\n    associatedOnly?: boolean;\n  };\n  computeBudgetConfig?: ComputeBudgetConfig;\n  txTipConfig?: TxTipConfig;\n  txVersion?: T;\n  feePayer?: PublicKey;\n}\n\nexport interface ComputePairAmountParams {\n  poolInfo: ApiV3PoolInfoStandardItemCpmm;\n  baseReserve: BN;\n  quoteReserve: BN;\n  amount: string | Decimal;\n  slippage: Percent;\n  epochInfo: EpochInfo;\n  baseIn?: boolean;\n}\n\nexport type CpmmRpcData = ReturnType<typeof CpmmPoolInfoLayout.decode> & {\n  baseReserve: BN;\n  quoteReserve: BN;\n  vaultAAmount: BN;\n  vaultBAmount: BN;\n  configInfo?: CpmmConfigInfoInterface;\n  poolPrice: Decimal;\n  programId: PublicKey;\n};\n\nexport type CpmmComputeData = {\n  id: PublicKey;\n  version: 7;\n  configInfo: CpmmConfigInfoInterface;\n  mintA: ApiV3Token;\n  mintB: ApiV3Token;\n  authority: PublicKey;\n} & Omit<CpmmRpcData, \"configInfo\" | \"mintA\" | \"mintB\">;\n\nexport type CpmmLockExtInfo = {\n  nftMint: PublicKey;\n  nftAccount: PublicKey;\n  metadataAccount: PublicKey;\n  lockPda: PublicKey;\n  userLpVault: PublicKey;\n  lockLpVault: PublicKey;\n};\n\nexport interface LockCpmmLpParams<T = TxVersion.LEGACY> {\n  poolInfo: ApiV3PoolInfoStandardItemCpmm;\n  poolKeys?: CpmmKeys;\n  lpAmount: BN;\n  programId?: PublicKey;\n  authProgram?: PublicKey;\n  feePayer?: PublicKey;\n  feeNftOwner?: PublicKey;\n  withMetadata?: boolean;\n  getEphemeralSigners?: (k: number) => any;\n  computeBudgetConfig?: ComputeBudgetConfig;\n  txTipConfig?: TxTipConfig;\n  txVersion?: T;\n}\n\nexport interface HarvestLockCpmmLpParams<T = TxVersion.LEGACY> {\n  poolInfo: ApiV3PoolInfoStandardItemCpmm;\n  poolKeys?: CpmmKeys;\n\n  nftMint: PublicKey;\n  lpFeeAmount: BN;\n\n  programId?: PublicKey;\n  authProgram?: PublicKey;\n  clmmProgram?: PublicKey;\n\n  cpmmProgram?: {\n    programId?: PublicKey;\n    authProgram?: PublicKey;\n  };\n\n  feePayer?: PublicKey;\n\n  withMetadata?: boolean;\n  getEphemeralSigners?: (k: number) => any;\n  computeBudgetConfig?: ComputeBudgetConfig;\n  txTipConfig?: TxTipConfig;\n  txVersion?: T;\n  closeWsol?: boolean;\n}\n\nexport interface CpmmLockNftBasicInfo {\n  name: string;\n  symbol: string;\n  description: string;\n  external_url: string;\n  collection: {\n    name: string;\n    family: string;\n  };\n  image: string;\n}\n\nexport interface CpmmLockNftInfo extends CpmmLockNftBasicInfo {\n  poolInfo: ApiV3PoolInfoStandardItemCpmm;\n  positionInfo: {\n    percentage: number;\n    usdValue: number;\n    unclaimedFee: {\n      lp: number;\n      amountA: number;\n      amountB: number;\n      useValue: number;\n    };\n  };\n}\n"],"mappings":"kWAAA","names":[]}